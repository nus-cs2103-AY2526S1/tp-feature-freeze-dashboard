[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# EduTrack Developer Guide","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project is based on the AddressBook-Level3 (AB3) project created by the SE-EDU initiative.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"\u003e\u003cpuml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class determines the command word and creates the appropriate parser (e.g., `AddCommandParser`, `DeleteCommandParser`, or simpler ones like `ClearCommandParser`, `ListCommandParser`). This specific parser uses the other utility classes shown above to parse the arguments (if any) and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Parsers for commands requiring specific arguments (like `AddCommandParser`) also provide detailed error messages if mandatory prefixes are missing, while `EditCommandParser` success message confirms with the user the edited fields.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, `ClearCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-10-30T23:20:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Provides methods to check for potential timeslot conflicts (`getConflictingPerson`), abstracting this logic away from individual commands","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2526S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"This section provides an overview of the key implementation details for major features and design improvements. Each subsection highlights the rationale, core logic, and design considerations behind the feature, with reference diagrams where appropriate.","lastModifiedDate":"2025-10-29T23:00:22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"### \\[Implemented\\] `filtertimeslot` feature","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"The `filtertimeslot` feature allows users to filter the displayed list of persons to only those whose timeslots fall within a specified date and/or time range. This mechanism is facilitated by a new `TimeslotRangePredicate` class.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"The `FilterTimeslotCommand`\u0027s `execute` method passes this predicate to the `Model`\u0027s `updateFilteredPersonList(predicate)` method. The `ModelManager` then uses this predicate to update its `FilteredList`, which in turn updates the UI.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `FilterTimeslotCommandParser` is responsible for parsing the user\u0027s input, which must contain at least one of the four optional prefixes: `sd/` (start date), `ed/` (end date), `st/` (start time), and `et/` (end time). It also supports the keywords now and today (e.g., `sd/today`, `st/now`) for date and time fields to filter relative to the current system time.These are used to construct the `TimeslotRangePredicate` which contains the logic to check if a `Person`\u0027s `TimeSlot` overlaps with the specified range.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"The following sequence diagram shows how a `filtertimeslot` operation goes through the components:","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FilterTimeslotSequenceDiagram.puml\" alt\u003d\"FilterTimeslotSequenceDiagram\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"**Aspect: How to parse the filter parameters:**","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Use flexible, optional prefixes (e.g., `sd/`, `st/`, `et/`).","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    * Pros: Highly flexible. Allows users to filter by just a start time (`st/0900`), just a date range (`sd/2025-10-20 ed/2025-10-22`), or a specific time on a specific day (`sd/2025-10-20 st/0900 et/1700`).","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    * Cons: Parsing logic is more complex as many combinations are valid.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* **Alternative 2:** A single, fixed-format argument (e.g., `filtertimeslot YYYY-MM-DD to YYYY-MM-DD`).","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    * Pros: Very simple to parse.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    * Cons: Much less flexible. It\u0027s difficult to filter for \"all 9am-12pm slots on any date,\" which is a key use case.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"**Aspect: Handling of Relative Time (\"Now\"/\"Today\")**","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"* **Alternative 1 (Current Choice):** Special keywords (`now`, `today`) used as *values* for existing date/time prefixes (`sd/`, `st/`, etc.).","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    * **Pros:** Highly flexible and **composable**. Allows combining relative times with specific dates/times (e.g., `sd/now ed/2025-11-30`). Consistent with the existing prefix-based command structure.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    * **Cons:** Requires slightly more complex logic within the parser to detect and handle these keywords.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* **Alternative 2:** Introduce a dedicated, mutually exclusive prefix or flag (e.g., `filtertimeslot /future` or `filtertimeslot mode\u003dfuture`).","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    * **Pros:** Might seem conceptually simpler for a single use case (like \"show only future slots\").","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    * **Cons:** Much less flexible. Cannot be easily combined with other date/time filters. Adds complexity to the parser to handle mutual exclusion rules. Violates the consistency of using prefixes for parameters.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Aspect: Definition of Time Range Overlap**","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"* **Alternative 1 (Current Choice):** Overlap requires actual intersection of time intervals. Slots ending exactly when the filter starts, or starting exactly when the filter ends, are *not* considered overlapping.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    * **Pros:** Mathematically clear definition of overlap.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    * **Cons:** May not match user intuition for back-to-back schedules (e.g., filter `et/1000` might not include a person scheduled `1000-1100`).","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"* **Alternative 2:** Inclusive boundaries. Consider slots overlapping if they touch at the boundaries (e.g., filter `et/1000` *would* include `1000-1100`).","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    * **Pros:** Catches adjacent schedules, potentially matching user expectation better.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    * **Cons:** Requires careful adjustment of the boundary checking logic in `TimeslotRangePredicate` (e.g., using `!isBefore` instead of `isAfter` and `!isAfter` instead of `isBefore`).","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"### \\[Implemented\\] `clearpast` feature","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `clearpast` feature introduces an intelligent cleanup mechanism to manage outdated or recurring timeslots which is specifically designed for tutors. It iterates through the entire person list and performs actions on contacts whose timeslots are in the past (i.e., `TimeSlot.isPast(LocalDateTime.now())` is true).","lastModifiedDate":"2025-10-29T23:00:22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"The command follows two main logic paths:","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"1.  **Non-recurring contacts:** If a past contact does **not** have the `t/recurring` tag, it is deleted from the `Model` using `model.deletePerson()`.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"2.  **Recurring contacts:** If a past contact **has** the `t/recurring` tag, the command calculates its next weekly occurrence using `TimeSlot.getNextOccurrence(now)`. It then attempts to update the contact with the new timeslot using `model.setPerson()`.","lastModifiedDate":"2025-10-29T23:00:22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"This `execute` method is designed to be \"all-or-nothing\" for each contact but not for the whole command. It builds lists of successfully deleted, successfully updated, and failed-to-update (conflicted) contacts and presents this summary to the user in the `CommandResult`.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Note:** Conflict handling is critical. When `clearpast` calls `model.setPerson()` with a recurring contact\u0027s new timeslot, the `ModelManager`\u0027s `setPerson` logic handles the conflict check. If the new timeslot is already taken, `setPerson` throws a `TimeSlotConflictException` which contains details about the conflicting person. The `ClearPastCommand` catches this specific exception, formats a detailed error message including the conflicting person\u0027s name and timeslot, adds this to the `conflictNames` list, and continues processing the rest of the contacts.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"At the end of the operation, `clearpast` forces the UI to refresh and re-sort by the default timeslot order by calling `model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)`.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes the logic flow for the `clearpast` command:","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/HighLevelClearPastActivityDiagram.puml\" alt\u003d\"HighLevelClearPastActivityDiagram\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How to handle recurring timeslots:**","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** A manual `clearpast` command that checks for a `t/recurring` tag.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * Pros: Simple to implement and understand. The user retains full control over when their schedule is cleaned up. Fits well within a command-line application.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    * Cons: The user needs to remember to run the command. Only supports one type of recurrence (weekly).","lastModifiedDate":"2025-10-29T23:00:22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** A fully abstract `Schedule` class with `OneTimeSlot` and `RecurringSlot` subclasses.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    * Pros: Far more powerful. Could support complex schedules (e.g., \"every Monday and Wednesday\"). The `list` command could show all future occurrences.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Cons: Massive architectural change. It would require rewriting all time-based commands (`add`, `edit`, `findtimeslot`, `filtertimeslot`, `list` sorting) and the conflict detection logic.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"* **Alternative 3:** An automatic background service that \"watches\" the clock.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    * Pros: Fully automated.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    * Cons: Not feasible for a simple command-line application. It\u0027s impossible to resolve conflicts (like in Alternative 1) without user input, leading to data being lost or updates failing silently.","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Aspect: Conflict Resolution Strategy for Recurring Slots**","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* **Alternative 1 (Current Choice):** Report conflict and skip update for that specific contact.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    * **Pros:** Safe, prevents accidental data loss or overwriting. Provides clear feedback to the user about which updates failed.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    * **Cons:** Requires the user to manually resolve the conflict later. The address book can be left in a partially updated state.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* **Alternative 2:** Force overwrite. Delete the conflicting contact to make space for the recurring one.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    * **Pros:** Ensures the recurring appointment is always scheduled. Fully automated.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    * **Cons:** High risk of unintended data loss. Could be confusing for the user.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"* **Alternative 3:** Automatic rescheduling. Find the *next available* slot for the recurring contact.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    * **Pros:** Attempts to preserve both contacts.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    * **Cons:** Complex logic. The recurring contact might end up scheduled at an unexpected time.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Aspect: Granularity of Operation (All-or-Nothing)**","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* **Alternative 1 (Current Choice):** Process each past contact individually. Deletions happen, and updates happen or fail one by one.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    * **Pros:** Robust against errors. If one update fails, others can still succeed. Provides detailed feedback.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    * **Cons:** The command is not atomic. State might be inconsistent until conflicts are resolved.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* **Alternative 2:** Transactional approach. If *any* update caused a conflict, the *entire* command would fail and make no changes.","lastModifiedDate":"2025-10-29T23:00:22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    * **Pros:** Ensures the address book state remains consistent.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    * **Cons:** Less user-friendly if one conflict prevents many valid changes. More complex to implement.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"### General Design Improvements","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"Beyond specific features, several architectural improvements were made to enhance code quality, maintainability, and user experience across the application.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"#### Smarter Conflict Detection (in `Model`)","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"To adhere to the **Single Level of Abstraction (SLA)** principle, the business logic for detecting timeslot conflicts and duplicate persons is centralized within the `Model` component, specifically in `ModelManager#addPerson` and `ModelManager#setPerson`. Commands like `AddCommand` and `EditCommand` now delegate these checks to the `Model`. They simply call the appropriate `Model` method and handle any `TimeSlotConflictException` or `DuplicatePersonException` that arises. This separation makes the commands simpler and ensures consistent validation logic.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"#### Safer \u0026 Consistent Commands (Argument Handling)","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"To improve user experience and ensure consistent command behavior, commands that are not designed to accept arguments (such as `clear`, `list`, `exit`, and `help`) now utilize dedicated parsers (e.g., `ClearCommandParser`, `ListCommandParser`). These parsers strictly check for the absence of arguments and throw a `ParseException` if any unexpected input is provided after the command word. This prevents potentially confusing situations (e.g., `list 123` silently ignoring \"123\") and provides immediate, clear feedback to the user, adhering to the principle of least surprise.","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 3` command to delete the 3rd person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2025-10-22T15:43:49","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of tutees","lastModifiedDate":"2025-10-09T22:05:12","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26T01:11:10","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"* wants to stay organized by storing student details, lesson schedules, and progress notes in one fast, CLI-based system","lastModifiedDate":"2025-10-09T22:05:12","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"* wants to search for upcoming students in a particular appointment slot","lastModifiedDate":"2025-10-09T22:05:12","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"* wants to sort all students by timeslot, earlier first","lastModifiedDate":"2025-10-09T22:05:12","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Shearer1509"},"content":"| Priority | As a …                      | I want to …                                                                | So that I can…                                                               |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Shearer1509"},"content":"|----------|-----------------------------|----------------------------------------------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Shearer1509"},"content":"| `***`    | busy tutor                  | add a new student with contact info, time slot, and tags                   | quickly store lesson details without wasting time on manual records          |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Shearer1509"},"content":"| `***`    | busy tutor                  | view all my students sorted by their time slots                            | see my upcoming lessons at a glance                                          |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Shearer1509"},"content":"| `***`    | busy tutor                  | use the `filtertimeslot` command to show only students within a time range | plan my teaching day efficiently without scrolling through unrelated entries |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Shearer1509"},"content":"| `***`    | busy tutor                  | clear past appointments automatically using `clearpast`                    | keep my student list focused on current and upcoming sessions                |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Shearer1509"},"content":"| `**`     | busy tutor                  | find students by name, tag, or time slot                                   | locate a specific student or class quickly without searching manually        |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Shearer1509"},"content":"| `**`     | busy tutor                  | edit a student’s details when their contact info or schedule changes       | keep my records updated without re-adding the student                        |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Shearer1509"},"content":"| `*`      | busy tutor                  | open the help command when I forget a command format                       | avoid wasting time guessing syntax                                           |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Shearer1509"},"content":"| `***`    | careless tutor              | receive conflict warnings when adding or editing overlapping time slots    | avoid double-booking myself by accident                                      |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Shearer1509"},"content":"| `***`    | careless tutor              | get feedback when I enter duplicate phone numbers                          | ensure no student record is entered twice by mistake                         |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Shearer1509"},"content":"| `**`     | careless tutor              | clear past lessons while keeping recurring ones                            | maintain recurring classes without losing future slots                       |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Shearer1509"},"content":"| `*`      | careless tutor              | rely on automatic saving after each command                                | avoid losing data if I forget to save manually                               |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Shearer1509"},"content":"| `***`    | tutor with regular students | tag students as “recurring” or by subject group                            | easily organize and find my regular students                                 |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Shearer1509"},"content":"| `***`    | tutor with regular students | automatically update recurring time slots via `clearpast`                  | ensure future sessions are rescheduled automatically                         |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Shearer1509"},"content":"| `**`     | tutor with regular students | filter students by subject tag using `findtag`                             | focus on students in the same subject group                                  |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Shearer1509"},"content":"| `*`      | tutor with regular students | edit multiple tags at once                                                 | adjust class groupings easily when students change subjects                  |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Shearer1509"},"content":"| `**`     | new tutor                   | list all sample data on startup                                            | learn how the app works with examples before adding real data                |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Shearer1509"},"content":"| `**`     | new tutor                   | view command usage instructions                                            | learn new commands without needing to refer to the manual constantly         |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Shearer1509"},"content":"| `*`      | new tutor                   | exit the app cleanly                                                       | close EduTrack without worrying about unsaved changes                        |","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T22:19:41","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T22:19:41","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Shearer1509"},"content":"**Use case 1: Delete a person**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"1.  User requests to list persons.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"2.  EduTrack shows a list of persons.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list by indicating the index of the person. ","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"4.  EduTrack deletes the person.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"    * 3a1. EduTrack shows an error message `The person index provided is invalid`.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Shearer1509"},"content":"**Use case 2: Add a person**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"1.  User requests to add a person.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"2.  EduTrack requests for contact details (name, phone number, email address, address, tags, appointment slot) where tags are optional.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"3.  User enters the requested details.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"4.  EduTrack saves the contact to a local file.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"* 3a. User leaves required fields blank.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"    * 3a1. EduTrack requests the missing fields by showing an error message `Missing prefix: p/`.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"    * 3a2. User re-enters details.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"    Steps 3a1–3a2 repeat until all required details are valid.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"* 3b. User enters invalid data that is of wrong format.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"    * 3b1. EduTrack shows an error message `Emails should be of the format local-part@domain`.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"* 2a. User enters conflicting timeslot.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"    * 2a1. EduTrack shows an error message `This time slot conflicts with another existing time slot! John Doe [2025-10-31 1500-1800]`","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"* 2b. User enters conflicting phone number.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"    * 2b1. EduTrack shows an error message `This phone number already exists in the address book, assigned to: John Doe`","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Shearer1509"},"content":"**Use case 3: Edit a person**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"1.  User requests to list persons.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"2.  EduTrack shows a list of persons.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"3.  User requests to edit a contact at a given index.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"4.  User provides new details based on the supported fields for the contact.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"5.  EduTrack updates the contact with the new details.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"    * 3a1. EduTrack shows an error message `The person index provided is invalid`.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"* 4a. New details are invalid (e.g., bad email format).","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"    * 4a1. EduTrack shows an error message.","lastModifiedDate":"2025-10-30T23:47:26","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T20:03:25","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"Shearer1509"},"content":"Here are the improved use cases for your `DeveloperGuide.md`, updated to reflect your application\u0027s precise logic, error messages, and command outputs based on our conversation.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Shearer1509"},"content":"---","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Shearer1509"},"content":"**Use case 4: Find persons by tag**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Shearer1509"},"content":"**MSS**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Shearer1509"},"content":"1.  User requests to list persons.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Shearer1509"},"content":"2.  EduTrack shows a list of persons.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Shearer1509"},"content":"3.  User requests to find persons by a specific tag (e.g., `findtag Sec3Math`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Shearer1509"},"content":"4.  EduTrack filters the list and shows only the persons who have the matching tag. A success message is shown, e.g., `3 persons listed! with tag(s): [Sec3Math]`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Shearer1509"},"content":"    Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Shearer1509"},"content":"**Extensions**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Shearer1509"},"content":"* 3a. User provides the command with no keywords (e.g., `findtag`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Shearer1509"},"content":"    * 3a1. EduTrack shows an error message: `Invalid command format! findtag: Finds all persons...`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Shearer1509"},"content":"* 4a. No persons are found with the given tag.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Shearer1509"},"content":"    * 4a1. EduTrack shows a message `0 persons listed! with tag(s): []` and displays an empty list.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Shearer1509"},"content":"      Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Shearer1509"},"content":"---","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Shearer1509"},"content":"**Use case 5: Find persons by time slot**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Shearer1509"},"content":"**MSS**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Shearer1509"},"content":"1.  User requests to list persons.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Shearer1509"},"content":"2.  EduTrack shows a list of persons.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Shearer1509"},"content":"3.  User requests to find persons with a time slot on a specific date and time (e.g., `findtimeslot 2025-11-06 1000`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"Shearer1509"},"content":"4.  EduTrack performs an **AND** search, filtering the list to show only persons who have a time slot on that date **AND** starting at that time.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Shearer1509"},"content":"5.  EduTrack shows a success message, e.g., `1 persons listed! with timeslot starting on/at: [2025-11-06, 1000]`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Shearer1509"},"content":"    Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Shearer1509"},"content":"**Extensions**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Shearer1509"},"content":"* 3a. User provides only date keywords (e.g., `findtimeslot 2025-11-05 2025-11-06`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"Shearer1509"},"content":"    * 4a1. EduTrack performs an **OR** search, showing persons matching *either* date.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Shearer1509"},"content":"* 3b. User provides only time keywords (e.g., `findtimeslot 1000 1400`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"Shearer1509"},"content":"    * 4b1. EduTrack performs an **OR** search, showing persons whose slot starts at *either* time.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"Shearer1509"},"content":"* 3c. User provides an invalid keyword format (e.g., `findtimeslot 7837e832e` or `findtimeslot 10:00`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"Shearer1509"},"content":"    * 3c1. EduTrack shows a specific error message: `Invalid keyword: \u00277837e832e\u0027. Keywords must be a valid date (YYYY-MM-DD) or a valid time (HHMM).`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"Shearer1509"},"content":"* 5a. No persons are found.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"Shearer1509"},"content":"    * 5a1. EduTrack shows a message `0 persons listed! with timeslot starting on/at: [2025-11-06, 0900]` and displays an empty list.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"Shearer1509"},"content":"      Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Shearer1509"},"content":"---","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"Shearer1509"},"content":"**Use case 6: Filter persons by time slot range**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"Shearer1509"},"content":"**MSS**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"Shearer1509"},"content":"1.  User requests to list persons.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"Shearer1509"},"content":"2.  EduTrack shows a list of persons.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"Shearer1509"},"content":"3.  User requests to filter the list by a time slot range (e.g., `filtertimeslot st/1500 et/1800`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"Shearer1509"},"content":"4.  EduTrack filters the list, showing only persons whose time slots are **fully contained** within the specified range (i.e., start time $\\geq$ `st/` and end time $\\leq$ `et/`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"Shearer1509"},"content":"5.  EduTrack shows a success message detailing the filter, e.g., `2 persons listed! with timeslots starting from 15:00 and ending by 18:00`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"Shearer1509"},"content":"    Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"Shearer1509"},"content":"**Extensions**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"Shearer1509"},"content":"* 3a. User provides a keyword for a date prefix (e.g., `filtertimeslot sd/now` or `filtertimeslot ed/today`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"Shearer1509"},"content":"    * 4a1. EduTrack parses `now` or `today` into the current system date and applies the filter.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"Shearer1509"},"content":"* 3b. User provides an invalid date format (e.g., `sd/20-11-2025`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"Shearer1509"},"content":"    * 3b1. EduTrack shows an error message, e.g., `Date should be in YYYY-MM-DD format.`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"Shearer1509"},"content":"* 3c. User provides an invalid date range (e.g., `sd/2025-11-20 ed/2025-11-19`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"Shearer1509"},"content":"    * 3c1. EduTrack shows an error message: `Start date must be before or on end date.`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"Shearer1509"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"Shearer1509"},"content":"* 5a. No persons are found within the filter range.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"Shearer1509"},"content":"    * 5a1. EduTrack shows a message `0 persons listed! with timeslots...` and displays an empty list.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"Shearer1509"},"content":"      Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"Shearer1509"},"content":"---","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"Shearer1509"},"content":"**Use case 7: Clear all past time slots**","lastModifiedDate":"2025-11-01T17:55:56","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"Shearer1509"},"content":"**MSS**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"Shearer1509"},"content":"1.  User requests to clear all past time slots by running `clearpast`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"Shearer1509"},"content":"2.  EduTrack gets the current system time (`now`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"Shearer1509"},"content":"3.  EduTrack identifies all contacts with time slots ending before `now`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"Shearer1509"},"content":"4.  For each identified contact:","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"Shearer1509"},"content":"    * If the contact does **not** have the `t/recurring` tag, it is **deleted** from the address book.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"Shearer1509"},"content":"    * If the contact **has** the `t/recurring` tag, EduTrack calculates the next weekly occurrence. It then attempts to update the contact to this new time slot.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"Shearer1509"},"content":"5.  EduTrack shows a multi-part success message summarizing the actions, e.g.:","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"Shearer1509"},"content":"    `ClearPast command successful.`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"Shearer1509"},"content":"    `Deleted 1 past contact(s): Charlie Goh`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"Shearer1509"},"content":"    `Updated 1 recurring contact(s): Diana Heng`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"Shearer1509"},"content":"    `Could not update 1 recurring contact(s) due to conflicts: Ethan Yeo (Conflict: This time slot conflicts with: Ben Lim [2025-11-06 1000-1200])`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"Shearer1509"},"content":"    Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"Shearer1509"},"content":"**Extensions**","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"Shearer1509"},"content":"* 1a. User provides unexpected arguments to the command (e.g., `clearpast 1` or `clearpast extra`).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"Shearer1509"},"content":"    * 1a1. EduTrack shows an error message: `Invalid command format! clearpast: Clears all past timeslots...`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"Shearer1509"},"content":"      Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"Shearer1509"},"content":"* 5a. No past time slots are found.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"Shearer1509"},"content":"    * 5a1. EduTrack shows the message: `No past time slots found to clear or update.`.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"Shearer1509"},"content":"      Use case ends.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"3.  Searching for a student or appointment slot should return results in under 1.6s.","lastModifiedDate":"2025-10-16T01:13:27","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"Shearer1509"},"content":"4.  Should load interface within 5 seconds of launch.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"Shearer1509"},"content":"5. Error messages must be clear and concise, and guide the user towards correcting their input.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"Shearer1509"},"content":"6. The app should consume less than 600MB of memory during its operation.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"* **Admin**: Administrative figure in charge of the app data, access and usage","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"* **Appointment slot**: The time frame in which the contact has booked an appointment","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09T15:37:20","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"* **Student**: The student of a tutor","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"* **Tutor**: A private hire tuition teacher","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"* **User logs/Audit trail**: Recorded details of user usage such as the editing of student records","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"* **Timeslot**: The specific period of time allocated to a student\u0027s lesson (e.g., 2025-10-12 1000-1200)","lastModifiedDate":"2025-10-30T23:20:52","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"* **Recurring lesson/Recurring timeslot**: A lesson or timeslot that automatically repeats at a fixed interval (e.g., weekly)","lastModifiedDate":"2025-10-30T23:06:37","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"* **Timeslot conflict**: A situation where two students have overlapping or identical lesson times","lastModifiedDate":"2025-10-30T23:06:37","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"* **Predicate**: A logical condition used by the system to filter or search for students (e.g., based on timeslot or name)","lastModifiedDate":"2025-10-30T23:06:37","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"* **Filter**: A command that limits the displayed student list based on specified criteria, such as timeslot ","lastModifiedDate":"2025-10-31T00:56:12","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"* **Command**: A line of text entered by the user into the CLI to perform an action","lastModifiedDate":"2025-10-30T23:06:37","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"* **Command parser**: A component responsible for interpreting user input and converting it into a command that the system can execute","lastModifiedDate":"2025-10-30T23:06:37","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"* **Parameter prefix**: A short label used before command arguments (e.g., n/ for name, st/ for start time) to identify their purpose","lastModifiedDate":"2025-10-30T23:47:57","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T16:57:52","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"### Extra notes on testing clearpast","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"Do note that clearpast is relatively hard to test due to the restriction on past timeslots.**","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"Here is the expected workflow for testing (if current time is 0900):","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"wuliyq"},"content":"* add n/ ... ts/current_date 0900-0902 (for the working product we will set it to 30 minutes, but for the sake of testing, we allow no gap for timeslots). Remember to set t/recurring depending on which scenario you are planning to test.","lastModifiedDate":"2025-10-31T11:36:06","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"* Wait for 1-2 minutes (test other features first etc)","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"* Now the timeslot you just added is in the past, and can be cleared by clearpast, or brought forward if recurring tag is present, to either cause a conflict or be a future timeslot.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:06:37","isFullCredit":false}],"authorContributionMap":{"wuliyq":1,"Shearer1509":136,"-":569}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# EduTrack User Guide","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shearer1509"},"content":"EduTrack is a **desktop app for private tutors to manage their students, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, EduTrack can help you with student scheduling (among other management tasks) faster than traditional GUI apps, allowing you to focus on teaching rather than mundane admin work.","lastModifiedDate":"2025-10-31T12:43:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"1.  Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25T13:19:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25T13:19:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shearer1509"},"content":"2.  Download the latest `.jar` file from [here](https://github.com/AY2526S1-CS2103T-T15-1/tp/releases/tag/v1.6).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"3.  Copy the file to the folder you want to use as the _home folder_ for EduTrack.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"4.  Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar edutrack.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    A GUI similar to the below should appear in a few seconds. Note how EduTrack already contains some sample students for ease of testing. \u003cbr\u003e","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"5.  Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Some example commands you can try:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Tip: if you are unsure about the format of a specific command, just enter the keyword (e.g. `add`), and the corresponding error message will show the correct format for that command.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts which are **sorted by time slot**.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * `add n/Alice Tan p/91234567 e/alice.t@email.com a/1 Orchard Road ts/2025-11-05 1400-1600 t/Sec3Math` : Adds a contact named `Alice Tan` with a specified tag `Sec3Math` and time slot `2025-11-05 1400-1600`, amongst other fields, to the Address Book.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    * `help` : Displays a message explaining how to access the help page","lastModifiedDate":"2025-10-29T22:56:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:56:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"6.  Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Alice Tan`.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items in square brackets `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2025-10-29T15:30:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/Alice Tan t/friend` or as `n/Alice Tan`.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) throw an error, but whitespace is allowed.\u003cbr\u003e","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help `, it will be interpreted as `help`, but `help 123` will fail.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03T23:17:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26T21:09:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"Opens a separate window explaining how to access the help page.","lastModifiedDate":"2025-10-29T23:25:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ts/YYYY-MM-DD HHMM-HHMM [t/TAG]…​`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* The `ts/` (time slot) parameter is mandatory for all new contacts.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Do note that you will be unable to add timeslots that start in the past (relative to current time).","lastModifiedDate":"2025-10-30T23:24:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"* The application will automatically check for scheduling conflicts and duplicate phone numbers. You will be prevented from adding a student if their specified time slot overlaps with an existing slot (showing the conflicting student\u0027s name and slot) or if the phone number is already in use (showing the name of the student using that number).","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"**Note:** A person can have any number of tags (including 0)","lastModifiedDate":"2025-10-29T15:30:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shearer1509"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shearer1509"},"content":"**Important:** The tag `recurring` (and its case variants like `Recurring`) is a special tag.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shearer1509"},"content":"* While most tags are just for filtering, the `recurring` tag has a special function:","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shearer1509"},"content":"* Students tagged with t/recurring will be ignored by the `clearpast` command. This is useful for contacts (like recurring clients) whose past timeslots you do not want to be automatically cleared.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shearer1509"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"* `add n/Alice Tan p/91234567 e/alice.t@email.com a/1 Orchard Road ts/2025-11-05 1400-1600 t/Sec3Math` (Adds Alice Tan with one subject tag)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"* `add n/Ben Lim p/92345678 e/ben.l@email.com a/2 Clementi Ave ts/2025-11-06 1000-1200 t/JC1Chem t/NeedsHelp` (Adds Ben Lim with two tags)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"* `add n/George Png p/97890123 e/george.p@email.com a/7 Pasir Ris Drive ts/2025-11-10 0900-1100` (Adds George Png with no tags)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"Example of timeslot-conflict (assuming Alice Tan was already added): ","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"`add n/New Student p/12341234 e/new@email.com a/Some Address ts/2025-11-05 1500-1700`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"![timeslot conflict with Alice Tan](images/timeslot-conflict-alicetan.png)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"Example of phone-conflict (assuming Alice Tan was already added): ","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"`add n/Another Student p/91234567 e/another@email.com a/Another Address ts/2025-11-11 1000-1200`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"![phone conflict with Alice Tan](images/phone-conflict-alicetan.png)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book, **sorted by their time slot**.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [ts/TIMESLOT] [t/TAG]…​`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Persons must be displayed to show their index numbers.","lastModifiedDate":"2025-10-29T23:25:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided, and the new overall value must be different from the old value. The command will show an error if no fields are provided or if the provided fields result in no overall change.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* If you edit the time slot (`ts/`) or phone number (`p/`), the application will check for scheduling or phone number conflicts, providing specific details if a conflict occurs.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2025-10-29T15:30:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Upon successful edit, the application will confirm the changes by listing the fields that were modified.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shearer1509"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shearer1509"},"content":"**Tip** Remember, you can add the special t/recurring tag using the edit command.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shearer1509"},"content":"* `edit 2 t/recurring`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shearer1509"},"content":"* This will protect the contact from having their past time slots cleared by the `clearpast` command.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shearer1509"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `edit 1 p/91112222 e/new.charlie@email.com` (Edits phone and email of the 1st student, Charlie Goh)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `edit 2 t/Urgent` (Edits the tags of the 2nd student, Diana Heng, replacing `Sec3Math` and `recurring` with Urgent)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* `edit 5 n/Alice Tan Updated ts/2025-11-05 1430-1630` (Edits the name and time slot of the 5th student, Alice Tan)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"![successful edit of Charlie](images/edit-success-message.png)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2025-10-29T22:50:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g. `lice` will match `Alice`","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The search looks for the keyword anywhere within the name (substring search). e.g. `lice` will match `Alice Pauline`","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Tan Ali` will match `Alice Tan`","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  e.g. `Ali Ben` will return `Alice Tan`, `Ben Lim`.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `find Ali` returns `Alice Tan`","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `find Tan Lim Goh` returns `Alice Tan`, `Ben Lim`, `Charlie Goh` \u003cbr\u003e","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Locating persons by tag: `findtag`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Finds contacts that match at least one of the given tags.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `findtag TAG [MORE_TAGS]…`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"* The search is case-insensitive.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Persons matching at least one tag will be returned (i.e. `OR` search).","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `findtag Sec3Math` returns `Alice Tan`, `Diana Heng`, `Fiona Wee`.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"* `findtag recurring` returns `Diana Heng`.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"* `findtag recurring needshelp` returns `Diana Heng`, `Ben Lim`","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"![multi-tag findtag](images/findtag_double.png)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Finding persons by time slot : `findtimeslot`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Finds contacts based on their scheduled time slots. This command supports three types of searches: by date, by time, or by both.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"Format: `findtimeslot [YYYY-MM-DD] [HHMM]`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"* At least one parameter (date or time) must be provided.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"* **Find by Date:** Lists all persons with a time slot on that specific date.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"* **Find by Time:** Lists all persons whose time slot starts at that specific time, regardless of date.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"* **Find by Date and Time:** If both keywords are provided, lists all persons with a time slot on that specific date *and* starting at that specific time.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"* **Important**: Unlike `filtertimeslot`, this command finds exact matches for the start time / date. It does not search within a range.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* The parser will reject any keywords that do not match these formats (e.g., `09:00` or `abcde` will show an error).","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"* `findtimeslot 2025-11-05` (Finds Alice Tan - matches date)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"* `findtimeslot 1000` (Finds Ben Lim - matches start time)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"* `findtimeslot 2025-11-06 1000` (Finds Ben Lim - matches both date AND start time)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"* `findtimeslot 2025-10-22 1600` (Finds no one - Charlie Goh matches the date but not the time; Diana Heng matches the time but not the date)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"![date_time search](images/findtimeslot_datetime.png)","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Filtering persons by time slot range : `filtertimeslot`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"Filters the student list to show only students whose time slots fall entirely within a specified date and/or time range. This command acts as a \"contains\" filter.","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"Format: `filtertimeslot [sd/START_DATE] [ed/END_DATE] [st/START_TIME] [et/END_TIME]`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"* You must provide at least one of the following prefixes:","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    * `sd/` (start date, e.g., `2025-10-27`)","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    * `ed/` (end date, e.g., `2025-10-28`)","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    * `st/` (start time, e.g., `0800`)","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    * `et/` (end time, e.g., `1200`)","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"* Dates are `YYYY-MM-DD`, times are `HHMM`.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"* All fields are optional, but at least one must be present.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"* **Special Keywords**: You can also use special keywords for date and time prefixes:","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    * `today` and `now` can be used for date prefixes (`sd/`, `ed/`) and will represent current day.","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    * `now` can be used for time prefixes (`st/`, `et/`) and will represent current time (nearest minute).","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    * `st/today` is not valid","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"* **Filter Logic**: If a start or end prefix is not provided, the filter is open on that side.","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    * `st/1400` filters for slots that start and end between 14:00 and 23:59.","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    * `et/2000` filters for slots that start and end between 00:00 and 20:00.","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * `sd/2025-10-31` filters for slots that start on or after 2025-10-31.","lastModifiedDate":"2025-10-30T18:34:09","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * `ed/2025-10-31` filters for slots that end on or before 2025-10-31.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"For easy reference, here is a list of people and timeslots we will use to illustrate this command.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"This is due to results being dependent on the current time of testing, which may cause confusion.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"| Name        | Timeslot               |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"|-------------|------------------------|","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"| Charlie Goh | 2025-10-22 15:00-17:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"| Diana Heng  | 2025-10-23 16:00-18:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"| Ethan Yeo   | 2025-10-30 10:00-12:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"| Alice Tan   | 2025-11-05 14:00-16:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"| Ben Lim     | 2025-11-06 10:00-12:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"| George Png  | 2025-11-10 09:00-11:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"| Fiona Wee   | 2025-11-12 11:00-13:00 |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"Examples (assuming current date is 2025-10-30 and current time is 15:30):","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"* `filtertimeslot st/1500 et/1800` ","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * **Result**: Shows `Charlie Goh` and `Diana Heng`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    * **Why**: Only Charlie\u0027s and Diana\u0027s slots are **fully contained** within 15:00 and 18:00.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* `filtertimeslot sd/2025-11-01 ed/2025-11-10`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    * **Result**: Shows `Alice Tan`, `Ben Lim` and `George Png`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"* `filtertimeslot sd/2025-11-05 ed/2025-11-12 st/1300 et/1700`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    * **Result**: Shows `Alice Tan`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    * **Why**: Only Alice\u0027s slot is between the two given dates, and contained within the given timeslots.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* `filtertimeslot sd/now` (or `sd/today`)","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    * **Result**: Shows `Ethan Yeo`, `Alice Tan`, `Ben Lim`, `George Png` and `Fiona Wee`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    * **Why**: This shows all slots on or after today\u0027s date (2025-10-30). It finds today + all future appointments.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* `filtertimeslot ed/now`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    * **Result**: Shows `Charlie Goh`, `Diana Heng` and `Ethan Yeo`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    * **Why**: This shows all slots on or before today\u0027s date (2025-10-30).","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"* `filtertimeslot st/now`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    * **Result**: Shows `Diana Heng`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    * **Why**: \"Now\" is 15:30. This finds slots that start and end after 15:30. Only Diana\u0027s slot (16:00-18:00) on any day matches.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"* `filtertimeslot sd/now st/now`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    * **Result**: No students found.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    * **Why**: This finds all slots on or after today (Oct 30) **AND** starting at or after 15:30. None of the future students (Alice, Ben, etc.) have slots starting this late in the day, so they are filtered out by the `st/now` time check.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"* Persons must be displayed to show their index numbers.","lastModifiedDate":"2025-10-29T23:25:35","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Clearing past appointments : `clearpast`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"Clears contacts with time slots that are in the past.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"Format: `clearpast`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"* This command uses the current system time to determine which time slots are in the past.","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Shearer1509"},"content":"* Contacts tagged as `recurring` will **not** be deleted. Do note that the search is case-insensitive (e.g. a student with t/Recurring will also be updated).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* Instead, for `recurring` contacts, the time slot is automatically updated in 7-day intervals until the new slot falls in the future relative to the system time.","lastModifiedDate":"2025-10-29T15:30:27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Shearer1509"},"content":"* The update will fail with an error message detailing the specific conflict (conflicting student\u0027s name and slot) if the new recurring time slot (that has been brought into the future) conflicts with an existing appointment.","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Shearer1509"},"content":"* Do note that our `clearpast` operation is only able to support weekly updates (students with lessons once a week).","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"Same as above, we will use the below data to showcase our command.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"Assume current day is 2025-10-30, time is 15:30.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"| Name        | Timeslot               | Tags      | Status       |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"|-------------|------------------------|-----------|--------------|","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"| Charlie Goh | 2025-10-22 15:00-17:00 |           | Past         |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"| Diana Heng  | 2025-10-23 16:00-18:00 | recurring | Past         |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"| Ethan Yeo   | 2025-10-30 10:00-12:00 | recurring | Past (Today) |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"| Alice Tan   | 2025-11-05 14:00-16:00 |           | Future       |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"| Ben Lim     | 2025-11-06 10:00-12:00 |           | Future       |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"| George Png  | 2025-11-10 09:00-11:00 |           | Future       |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"| Fiona Wee   | 2025-11-12 11:00-13:00 |           | Future       |","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Result displayed**:","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"* ClearPast command successful. ","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"* Deleted 1 past contact(s): Charlie Goh ","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* Updated 1 recurring contact(s): Diana Heng ","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* Could not update 1 recurring contact(s) due to conflicts: Ethan Yeo (Conflict: This time slot conflicts with: Ben Lim [2025-11-06 1000-1200])","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Why this happened**:","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"* Deleted (Charlie Goh): His timeslot (Oct 22) was in the past and he was not `recurring`.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* Updated (Diana Heng): Her timeslot (Oct 23) was in the past and `recurring`. Her next weekly slot (Oct 30 @ 16:00) was in the future (relative to 15:30) and had no conflicts, so she was updated.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"* Conflict (Ethan Yeo): His timeslot (Oct 30 @ 10:00) was in the past and `recurring`. His next weekly slot was calculated to be **Nov 6 @ 10:00-12:00**. This slot directly conflicts with **Ben Lim**. The update failed, and the specific conflict was reported.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"* Ignored (Alice, Ben, George, Fiona): Their slots were already in the future, so clearpast did not affect them.","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Note for testing: Do note that clearpast is relatively hard to test due to the restriction on past timeslots.**","lastModifiedDate":"2025-10-30T23:24:54","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"Here is the expected workflow for testing (if current time is 0900):","lastModifiedDate":"2025-10-30T23:24:54","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"* add n/ ... ts/current_date 0900-0902 (for the working product we will set it to 30 minutes, but for the sake of testing, we allow no gap for timeslots). Rmb to set t/recurring depending on which scenario you are planning to test.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"* Wait for 1-2 minutes (test other features first etc)","lastModifiedDate":"2025-10-30T23:24:54","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"* Now the timeslot you just added is in the past, and can be cleared by clearpast, or brought forward if recurring tag is present, to either cause a conflict or be a future timeslot.","lastModifiedDate":"2025-10-30T23:24:54","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:24:54","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"The data in EduTrack is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"The data in EduTrack is saved automatically as a JSON file `[JAR file location]/data/edutrack.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, EduTrack will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause EduTrack to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-10-30T01:01:12","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04T00:19:32","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous EduTrack home folder.","lastModifiedDate":"2025-10-31T01:15:49","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"1.  **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"2.  **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30T23:21:09","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Shearer1509"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ts/YYYY-MM-DD HHMM-HHMM [t/TAG]…​` \u003cbr\u003e e.g., `add n/Alice Tan p/91234567 e/alice.t@email.com a/1 Orchard Road ts/2025-11-05 1400-1600 t/Sec3Math`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [ts/TIMESLOT] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]…`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2025-10-25T15:48:50","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Shearer1509"},"content":"**Find by Tag**| `findtag TAG [MORE_TAGS]…` \u003cbr\u003e e.g., `findtag Math English`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Shearer1509"},"content":"**Find by Timeslot** | `findtimeslot [YYYY-MM-DD] [HHMM]` \u003cbr\u003e e.g. `findtimeslot 2025-10-27 1400`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Shearer1509"},"content":"**Filter by Timeslot** | `filtertimeslot [sd/START_DATE] [ed/END_DATE] [st/START_TIME] [et/END_TIME]` \u003cbr\u003e e.g `filtertimeslot sd/2025-10-27 ed/2025-10-27 st/0800 et/1200`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Shearer1509"},"content":"**Clear past Timeslots** | `clearpast`","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Exit** | `exit`","lastModifiedDate":"2025-10-30T21:55:26","isFullCredit":false}],"authorContributionMap":{"Shearer1509":26,"-":363}},{"path":"docs/diagrams/FilterTimeslotSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!theme plain","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shearer1509"},"content":"hide footbox","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"actor User","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant Logic","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant FilterTimeslotCommandParser","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant FilterTimeslotCommand","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant Model","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"User -\u003e Logic : execute(\"filtertimeslot sd/...\")","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate Logic","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Logic -\u003e FilterTimeslotCommandParser : parse(\"sd/...\")","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"activate FilterTimeslotCommandParser","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"Logic \u003c-- FilterTimeslotCommandParser : cmd:FilterTimeslotCommand","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"deactivate FilterTimeslotCommandParser","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Logic -\u003e FilterTimeslotCommand : execute(model)","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate FilterTimeslotCommand","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"FilterTimeslotCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Logic \u003c-- FilterTimeslotCommand : result:CommandResult","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"deactivate FilterTimeslotCommand","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"User \u003c-- Logic : result","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate Logic","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2025-10-28T01:41:19","isFullCredit":false}],"authorContributionMap":{"Shearer1509":1,"-":27}},{"path":"docs/diagrams/HighLevelClearPastActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shearer1509"},"content":"skinparam activityStartColor black","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shearer1509"},"content":"skinparam activityEndColor black","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shearer1509"},"content":"skinparam activityEndShape circle","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shearer1509"},"content":"","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":":Get current time (now);","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":":Get copy of person list;","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":":Categorize past contacts","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"(into \u0027toDelete\u0027 and \u0027toUpdate\u0027 lists);","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":":Perform deletions","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"(populates \u0027deletedNames\u0027);","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":":Perform updates","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"(populates \u0027updatedNames\u0027 and \u0027conflictNames\u0027);","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":":Update filtered person list;","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":":Build CommandResult","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"from name lists;","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":":Return CommandResult;","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2025-10-29T12:24:37","isFullCredit":false}],"authorContributionMap":{"Shearer1509":4,"-":22}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27T13:44:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03T00:39:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03T00:39:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03T00:39:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Timeslot","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27T13:44:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30T15:58:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person -left-\u003e \"*\" Tag","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e \"1\"Name","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e \"1\"Phone","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e \"1\"Email","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e \"1\"Address","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e \"1\"Timeslot","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T22:12:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shearer1509"},"content":"Timeslot *--\u003e \"1\"Date","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shearer1509"},"content":"Timeslot *--\u003e \"1\"StartTime","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shearer1509"},"content":"Timeslot *--\u003e \"1\"EndTime","lastModifiedDate":"2025-11-01T17:41:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27T13:44:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27T13:44:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27T13:44:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false}],"authorContributionMap":{"Shearer1509":3,"-":57}}]
