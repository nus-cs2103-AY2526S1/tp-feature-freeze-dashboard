[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tuto Developer Guide","lastModifiedDate":"2025-10-27T01:35:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"We follow the project design and documentation structure of the AddressBook-Level3 project by SE-EDU.   ","lastModifiedDate":"2025-10-28T21:36:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"In addition, the structure and certain sections of this Developer Guide were inspired by and adapted from [a team project developed by a previous cohort](https://ay2425s1-cs2103t-w08-1.github.io/tp/).","lastModifiedDate":"2025-10-30T22:31:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cb\u003eWarning:\u003c/b\u003e","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"For CS2103T practical exam purpose, the filename of the jar file might be different from the file name given in UG, e.g.: [CS2103T-F10-3][Tuto].jar","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"For MacOS and Linux users, use the command, java -jar \\[CS2103T-F10-3\\]\\[Tuto\\].jar to execute the jar file during PE if necessary.","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T22:38:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete s/0000`.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete s/0002\")` API call as an example.","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteStudentSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete s/0002` Command\" /\u003e","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-29T19:54:58","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T19:54:58","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"**Note on Extra Parameters:** When users provide extra parameters beyond what a command expects, the parser\u0027s `ArgumentTokenizer` treats any unrecognized text (including invalid parameter prefixes) as part of the value of the parameter that precedes it. This means that if an invalid or unrecognized parameter is added after a valid parameter, the validation error message will reference the valid parameter that comes immediately before the invalid input, rather than indicating that extra parameters were provided. Developers should be aware of this behavior when designing commands and crafting error messages, as it may affect how validation errors are communicated to users.","lastModifiedDate":"2025-10-29T19:54:58","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T19:54:58","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T19:54:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T19:54:58","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores a list of `ClassTag` objects (which are contained in a `UniqueClassTagList` object).","lastModifiedDate":"2025-10-27T01:56:18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* manages fee-related data through the `FeeTracker`, which records each student\u0027s monthly `FeeState` (`PAID` or `UNPAID`) and supports derived payment status queries.","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"* manages serialization of complex model data as part of the Address Book:","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    * The `UniqueClassTagList` is stored within the Address Book JSON file.  ","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"      Conversion is handled by `JsonAdaptedClassTag`, and `JsonSerializableAddressBook` includes the `classTags` list during serialization and deserialization.","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    * Each `Person` is serialized using `JsonAdaptedPerson`, which in turn serializes:","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        * `JsonAdaptedAttendance` — attendance data","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        * `JsonAdaptedFeeRecord` — fee payment records","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        * `JsonAdaptedPerformanceNote` — performance-related notes","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        * and associated class tags (`JsonAdaptedClassTag`)","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cbox type\u003d \"info\" seamless\u003e","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"Please note that certain aspects, such as UML classes, may have been simplified to fit within the diagram\u0027s constraints and maintain readability.","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Student Management","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"#### Overview","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"The Student Management feature allows tutors to manage student records efficiently.  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"Key operations include **adding, editing, and deleting students**.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"Each student is uniquely identified by a **Student ID** and can have associated attributes such as **name, phone, email, address, and ClassTags**.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Model Component:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"- `Person`: Represents a student with immutable fields:","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    - Name, Phone, Email, Address, ClassTags, StudentId, AttendanceList, EnrolledMonth, PerformanceList","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"- `StudentId`: Ensures uniqueness of students","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"- `Model` interface provides methods:","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    - `addPerson(Person)`: Adds a student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    - `setPerson(Person, Person)`: Updates a student record","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    - `deletePerson(Person)`: Deletes a student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    - `hasPerson(Person)`: Checks for duplicate student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    - `hasPersonWithId(StudentId)`: Checks existence of student by ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    - `getPersonById(StudentId)`: Retrieves student by ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"- `AttendanceList` and `PerformanceList` maintain attendance and performance records","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"**Storage Component:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"- `JsonAdaptedPerson`: Converts Person objects to/from JSON","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"- `JsonSerializableAddressBook`: Serializes the student list along with ClassTag references","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"- Deserialization restores each student’s data, including personal details, ClassTag references, and fee records.","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Logic Component:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"1. **AddCommand (`add`)**: Adds a new student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    - Validates all fields (Name, Phone, Email, Address, EnrolledMonth, ClassTags)  ","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    - Ensures no duplicate students","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    - Checks all ClassTags exist before assignment","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    - Automatically assigns a unique Student ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    - Updates the model with the new student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"2. **EditCommand (`edit`)**: Modifies existing student details","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    - Identifies student by Student ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    - Edits any combination of fields (Name, Phone, Email, Address, ClassTags)","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    - Validates all input fields and ClassTags","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    - Empty ClassTag list (`t/`) removes all ClassTag assignments","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    - Prevents duplicate records after editing","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"3. **DeleteCommand (`delete`)**: Removes a student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    - Identifies student by Student ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    - Ensures the student exists before deletion","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    - Updates model to remove the student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"4. **ListCommand (`list`)**: Displays all students","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    - Clears any active filters from previous `find` commands","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    - Shows the complete list of students stored in the model","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"5. **FindCommand (`find`)**: Searches for students by keywords","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    - Supports keyword-based matching on Name field","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    - Case-insensitive search","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    - Displays a filtered list of matching students","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"6. **ClearCommand (`clear`)**: Clears all student records","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    - Removes all students from the model","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"#### Activity Diagram: Adding a Student (`add`)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"This activity diagram shows the process flow when a user adds a new student using the `add` command, including validation, duplication checks, and successful addition to the system.","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/AddStudentActivityDiagram.puml\" alt\u003d\"AddStudentActivityDiagram\" /\u003e","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Editing a Student (`edit`)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"This sequence diagram illustrates the interactions between components when a user edits a student’s details using the `edit` command, covering validation, tag resolution, and model update.","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/EditStudentSequenceDiagram.puml\" alt\u003d\"EditStudentSequenceDiagram\" /\u003e","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Deleting a Student (`delete`)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"This sequence diagram demonstrates how the system processes the `delete` command, from identifying the student by ID to removing the student record and returning a success message.","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteStudentSequenceDiagram.puml\" alt\u003d\"DeleteStudentSequenceDiagram\" /\u003e","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Aspect: Phone Number Validation**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Limit to Singapore numbers (8 digits, starting with 6, 8, or 9)","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    * Pros: Ensures only valid Singapore phone numbers are accepted, prevents accidental entry of incorrect numbers","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    * Cons: Cannot accept overseas numbers","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* **Alternative 2:** Allow any numeric input of 8–10 digits","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    * Pros: More flexible, supports overseas or mobile numbers with country codes","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    * Cons: Less strict, may allow invalid or mistyped numbers","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"**Aspect: Name Validation**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Only alphabetic characters, spaces, hyphens, and apostrophes; max 200 characters","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    * Pros: Prevents invalid or malicious input, ensures readability and consistent formatting","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    * Cons: Cannot accept names with unusual symbols outside this set","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"* **Alternative 2:** Allow any Unicode characters, with length limit","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    * Pros: Supports all valid names globally","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"    * Cons: May allow emojis or unexpected symbols, harder to validate and may affect GUI display","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Aspect: Address Validation**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Accepts alphanumeric characters, `#`, `-`, `,`, `\u0027` and spaces","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    * Pros: Covers most Singapore addresses while keeping input simple and consistent","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    * Cons: Cannot accept exotic symbols or foreign address formats","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"* **Alternative 2:** Free-text input","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    * Pros: Maximum flexibility","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"    * Cons: Harder to validate and maintain consistent formatting and may cause GUI display issues","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"**Aspect: Email Validation**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Use detailed format rules — the part before “@” allows letters, numbers, and the symbols `+`, `_`, `.`, and `-`.  ","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"  The domain part after “@” is made up of labels separated by dots, and the last label must be at least 2 characters long.","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"    * Pros: Ensures proper email format, prevents invalid entries, aligns with common standards","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"    * Cons: Slightly complex regex, may reject rare valid emails, such as:","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"      - `john_doe@example.com` (underscore in local part)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"      - `\"john.doe\"@example.com` (quoted local part)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"      - `alice+mailbox/department@example.com` (slashes in local part)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"      - `a@b.c` (final domain label less than 2 characters)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"      - `test@sub_domain.example.com` (underscore in domain label)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"      - `üser@exämple.com` (non-ASCII characters)","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* **Alternative 2:** Simple regex `.+@.+\\..+`","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"    * Pros: Very permissive, easier to implement","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"    * Cons: Allows many invalid emails","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Aspect: Enrolled Month Validation and Handling**","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Accept input in `MMYY` format only, ensuring the month is valid and not in the future. The enrolled month field is optional — if not provided, it defaults to the current month. When specified, enrollment is assumed to occur on the first day of that month. Once set, the enrolled month cannot be edited afterwards.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"    * Pros: Prevents invalid or inconsistent enrolments, ensures every student has a valid month even if omitted, and simplifies data handling.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"    * Cons: Does not allow pre-entering future enrolments, assumes first-day enrolment, and requires deletion to correct wrong entries.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"* **Alternative 2:** Validate only the `MMYY` format and allow future months; permit editing of the enrolled month after creation.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    * Pros: More flexible for future scheduling and correction of mistakes.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    * Cons: Increases risk of data inconsistency and requires additional logic for validation across linked records.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"* **Alternative 3:** Use full date input (`ddMMyy`) instead of `MMYY`, allowing mid-month enrolments.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"    * Pros: Provides higher precision for analysis and reporting.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"    * Cons: More cumbersome for users and unnecessary if month-level accuracy is sufficient.","lastModifiedDate":"2025-10-31T01:05:11","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Aspect: ClassTag Validation**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Optional, must exist before assignment","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"    * Pros: Ensures referential integrity, prevents dangling class references","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    * Cons: Adds step to create tag first","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"* **Alternative 2:** Auto-create class tag if it does not exist","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    * Pros: Simplifies user workflow","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    * Cons: May create unintended tags, risk of typos creating duplicates","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Aspect: Student ID Assignment**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Auto-generate 4-digit IDs after validating all other fields","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"    * Pros: Guarantees unique IDs, simple format, avoids hitting maximum limit (9999), no JSON tracking needed","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    * Cons: Recycles the highest deleted ID only if it was the latest one and no other add/delete operations occurred before the next app launch","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"* **Alternative 2:** Store last assigned ID in JSON and always increment","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"    * Pros: Preserves historical uniqueness across launches","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    * Cons: Hits maximum limit faster, extra complexity in JSON handling","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"* **Alternative 3:** User-specified IDs","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"    * Pros: Flexibility, users can follow their own numbering system","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    * Cons: Higher risk of duplicates and input errors, more complex validation","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Aspect: Non-Duplication of Students**","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Uniqueness checked on phone number and name combination","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"    * Pros: Reduces accidental duplicates while allowing students with same name but different contact details","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"    * Cons: Cannot detect duplicates with incorrect phone numbers","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"* **Alternative 2:** Check uniqueness using all fields (name, phone, email, address)","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"    * Pros: Stronger duplicate detection","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"    * Cons: More restrictive, may prevent legitimate multiple students with similar details","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"#### Error Handling","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Adding Students:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"- Duplicate student record","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"- Invalid or missing field(s)","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"- Non-existent ClassTags","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"- Maximum number of students exceeded (StudentId \u003e 9999)","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Editing Students:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"- Student ID not found","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"- No fields provided to edit","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"- Invalid input fields or ClassTags","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"- Resulting record duplicates an existing student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Deleting Students:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"- Student ID not found","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"**General Validation Rules:**","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"- Fields are trimmed and validated according to their respective rules","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"- Commands reject extra/unrecognized input","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"- All validation errors provide **clear, actionable feedback** to the user","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Attendance Management","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"#### Overview","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"The Attendance Management feature enables tutors to track student attendance across different classes and dates. Each attendance record captures whether a student was present or absent for a specific class on a particular date.","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"Attendance management is implemented through several key components:","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Model Component:**","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"- `Attendance`: Represents a single attendance record with a date, ClassTag reference, and status (Present/Absent)","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"- `AttendanceList`: Maintains all attendance records for a student","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"- Each `Person` object contains an `AttendanceList` field that stores their attendance history","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"- The `Model` interface provides methods to retrieve students and validate ClassTags","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"**Storage Component:**","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"- `JsonAdaptedAttendance`: Converts Attendance objects to/from JSON format for persistence","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"- Attendance records are stored within each student\u0027s record in the JSON file","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"- During deserialization, ClassTag references in attendance records are validated against the system\u0027s ClassTag list","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"**Logic Component:**","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"The following commands handle attendance operations:","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"1. **AttendanceMarkPresentCommand (triggered by `att -p`)**: Marks a student as present for a class on a specific date","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"    - Validates student exists and ClassTag exists","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"    - Prevents duplicate \"Present\" records (throws error if already marked present)","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"    - Replaces any existing \"Absent\" record for the same date and class with a \"Present\" record","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"2. **AttendanceMarkAbsentCommand (triggered by `att -a`)**: Marks a student as absent for a class on a specific date","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"    - Validates student exists and ClassTag exists","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"    - Prevents duplicate \"Absent\" records (throws error if already marked absent)","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"    - Replaces any existing \"Present\" record for the same date and class with an \"Absent\" record","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"3. **AttendanceDeleteCommand (triggered by `att -d`)**: Completely removes an attendance record","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"    - Validates the attendance record exists","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"    - Removes the record from the student\u0027s AttendanceList","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"    - Useful for correcting mistakes or handling cancelled classes","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"4. **AttendanceViewCommand (triggered by `att -v`)**: Displays a student\u0027s attendance history","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"    - Retrieves all attendance records for a specific student","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"    - Records are sorted by date, then by ClassTag name alphabetically","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"#### Activity Diagram: Attendance Command Workflow","lastModifiedDate":"2025-10-30T21:06:28","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:06:28","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"The activity diagram below illustrates the high-level workflow for attendance management, showing how the system routes different attendance operations based on command flags:","lastModifiedDate":"2025-10-30T21:06:28","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:06:28","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/AttendanceActivityDiagram.puml\" alt\u003d\"Attendance Activity Diagram\" /\u003e","lastModifiedDate":"2025-10-30T23:06:28","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T21:06:28","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Marking Attendance as Present","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"The following sequence diagram illustrates the interactions when a tutor marks a student as present using the `att -p` command:","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/AttendanceMarkPresentSequenceDiagram.puml\" alt\u003d\"Attendance Mark Present Sequence Diagram\" /\u003e","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `AttendanceCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"**Aspect: How attendance data is stored:**","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Store attendance within each `Person` object","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"  * Pros: Natural encapsulation, easy to retrieve all attendance for a specific student, simpler deletion logic (student deletion automatically removes attendance)","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"  * Cons: Harder to query attendance across all students for a specific date/class, less efficient for class-centric reports","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"* **Alternative 2:** Store attendance in a centralized `AttendanceBook`","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"  * Pros: Easier to query by date/class across all students, better for class-level reports","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"  * Cons: More complex referential integrity, risk of orphaned records, attendance disconnected from student profiles","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"#### Error Handling","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"Attendance operations include comprehensive validation:","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"**Marking Attendance (Present/Absent):**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"- Student ID not found","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"- Invalid Student ID format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"- ClassTag does not exist","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"- ClassTag not assigned to the student","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"- Date in the future","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"- Date before student\u0027s enrolment month","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"- Invalid date format (e.g., 30th February, non-existent dates)","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"- Attempting to mark Present when already marked Present","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"- Attempting to mark Absent when already marked Absent","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"**Deleting Attendance:**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"- Student ID not found","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"- Invalid Student ID format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"- Invalid date format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"- Attendance record does not exist for the specified date and class","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"**Viewing Attendance:**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"- Student ID not found","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"- Invalid Student ID format","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"- No attendance records found for the student (informational message, not an error)","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"**General Validation Rules:**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"- All attendance commands enforce **strict parameter checking** — any extra text beyond the expected format is rejected","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"- Date validation ensures only real calendar dates are accepted","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"- ClassTag references are validated against both system-wide ClassTag list and student\u0027s assigned tags","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"- All validation errors provide **clear, actionable feedback** to guide users in correcting their input","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Performance Management","lastModifiedDate":"2025-10-29T22:07:57","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"#### Overview","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"The Performance Management feature lets tutors capture qualitative feedback about a student\u0027s progress for specific","lastModifiedDate":"2025-10-30T23:32:42","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"classes on particular dates. Each note records the class context, the date of the observation, and a short free-form remark","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"highlighting achievements or areas for improvement.","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"Performance note management is implemented through the following components:","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"**Model Component:**","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"- `PerformanceNote`: Represents a single performance entry consisting of a `Date`, `ClassTag`, and note body capped at 200 characters","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"- `PerformanceList`: Maintains all performance notes for a student, automatically sorting entries by date (ascending) then by class tag name, and preventing duplicate (date, class) pairs","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"- Each `Person` object embeds a `PerformanceList`, keeping performance history alongside other student attributes","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"- The `Model` interface exposes helpers to retrieve students, replace updated `Person` instances, and manage the list of performance notes currently shown in the UI (`setDisplayedPerformanceNotes`, `clearDisplayedPerformanceNotes`)","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"**Storage Component:**","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"- `JsonAdaptedPerformanceNote`: Serialises/deserializes `PerformanceNote` objects to and from JSON, validating date, class tag, and note length constraints during conversion","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"- Performance notes are persisted as part of each student\u0027s JSON record via `JsonAdaptedPerson`, ensuring notes stay in sync with the owning student","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"- During deserialization, class tags referenced in performance notes are re-validated against the student\u0027s tag set so that orphaned notes cannot be reconstructed","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"**Logic Component:**","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"The `perf` command word is a namespace for the following operations:","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. **PerfAddCommand (triggered by `perf -a`)**: Adds a new performance note","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"    - Validates the student exists and that the specified `ClassTag` belongs to the student","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"    - Rejects notes dated before the student\u0027s enrolment month or in the future","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"    - Prevents duplicate entries for the same date and class combination","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"    - Creates a new `PerformanceList` copy, appends the note, re-sorts it, and replaces the student in the model","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"2. **PerfEditCommand (triggered by `perf -e`)**: Edits an existing performance note\u0027s text","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"    - Validates the student and class tag as per the add command","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"    - Ensures the targeted note exists before applying the new content and re-validating constraints","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"    - Persists changes by replacing the student\u0027s `PerformanceList` with an updated copy","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"3. **PerfDeleteCommand (triggered by `perf -d`)**: Removes a performance note entirely","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"    - Validates the student and class tag and ensures the note exists for the given date/class pair","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"    - Updates the student\u0027s `PerformanceList` without mutating the original list instance","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"4. **PerfViewCommand (triggered by `perf -v`)**: Displays a student\u0027s performance history","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"    - Retrieves all performance notes for the student and exposes them through `Model#setDisplayedPerformanceNotes`","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"    - Returns a contextual message indicating whether notes were found, and allows the UI to render the sorted list","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Adding a Performance Note","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions when a tutor adds a performance note using the `perf -a` command:","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/PerformanceAddSequenceDiagram.puml\" alt\u003d\"Performance Add Sequence Diagram\" /\u003e","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `PerfCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"lifeline continues till the end of diagram.","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"**Aspect: Where performance notes are stored:**","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Embed performance notes within each `Person`","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"    * Pros: Keeps academic history co-located with the student profile, simplifies cloning and persistence, and makes student deletion automatically clean up notes","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"    * Cons: Less efficient for queries that aggregate performance across classes or cohorts, requires iterating through every student for global analytics","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"* **Alternative 2:** Maintain a central `PerformanceBook`","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"    * Pros: Facilitates global reporting (e.g. all notes for a class), makes it easier to enforce cross-student constraints","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"    * Cons: Complicates referential integrity, adds risk of orphaned notes if students are removed, and scatters student-related data","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"**Aspect: Command structure for performance operations:**","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Sub-command flags under `perf` (`-a`, `-e`, `-d`, `-v`)","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"    * Pros: Keeps related operations grouped, mirrors other feature families (`att`, `fee`), and reduces the number of top-level commands to memorise","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"    * Cons: Requires tutors to remember what each flag stands for and to supply the correct combination of prefixes","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"* **Alternative 2:** Dedicated verbs per action (`perfadd`, `perfedit`, etc.)","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"    * Pros: Self-descriptive command words, reduces reliance on flags","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"    * Cons: Bloats the command set and deviates from the app\u0027s namespace-based command organisation","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:10:48","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"### ClassTag Management","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"#### Overview","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"The ClassTag feature allows tutors to organize students into classes or groups. Each ClassTag represents a distinct class (e.g., \"Sec_3_A_Math\", \"P5_Science\") that can be assigned to multiple students.","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"ClassTag management is implemented through several key components:","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"**Model Component:**","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"- `ClassTag`: Represents a class with a unique name","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"- `UniqueClassTagList`: Maintains all ClassTags in the system, ensuring no duplicates","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"- The `Model` interface provides methods:","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"  - `hasClassTag(ClassTag)`: Checks if a ClassTag exists in the system","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"  - `addClassTag(ClassTag)`: Adds a new ClassTag to the system","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"  - `deleteClassTag(ClassTag)`: Removes a ClassTag from the system","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"  - `findClassTag(ClassTag)`: Finds and returns an `Optional` containing the canonical ClassTag instance from the UniqueClassTagList that matches the given ClassTag","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"  (case-insensitive). Returns `Optional.empty()` if not found. This ensures all references use the same ClassTag object with the original casing.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"  - `getClassTagList()`: Returns an unmodifiable list of all ClassTags","lastModifiedDate":"2025-10-29T13:00:09","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"  - `isClassTagInUse(ClassTag)`: Checks if any student is assigned the ClassTag","lastModifiedDate":"2025-10-30T01:14:27","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"- `Person` objects maintain a `Set\u003cClassTag\u003e` field that stores references to ClassTag instances from the central `UniqueClassTagList`, ensuring each student can be","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"assigned multiple unique classes","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"**Storage Component:**","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"- `JsonAdaptedClassTag`: Converts ClassTag objects to/from JSON format for persistence","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"- `JsonSerializableAddressBook`: Serializes both the central ClassTag list and student-ClassTag associations","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"- ClassTags are persisted in two ways:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"    1. As a complete list in the `classTags` field of the address book","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"    2. As references within each student\u0027s `tags` field","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"- During deserialization, ClassTags are loaded first into the UniqueClassTagList, then student records resolve their tag names to the corresponding ClassTag objects using","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"  case-insensitive matching","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"**Logic Component:**","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"The following commands handle ClassTag operations:","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. **AddClassTagCommand (triggered by `tag -a`)**: Creates a new ClassTag in the system","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"   - Validates the ClassTag name format (1-30 characters: alphanumeric and underscores only, no spaces)","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"   - Checks for duplicates via `Model#hasClassTag()` (case-insensitive)","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"   - Adds to `UniqueClassTagList` via `Model#addClassTag()`","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"2. **DeleteClassTagCommand (triggered by `tag -d`)**: Deletes an existing ClassTag","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"   - Validates the ClassTag name format","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"   - Checks that the ClassTag exists via `Model#findClassTag()`","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"   - Ensures no students are currently assigned to it via `Model#isClassTagInUse()`","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"   - Removes from `UniqueClassTagList` via `Model#deleteClassTag()`","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"3. **ListClassTagCommand (triggered by `tag -l`)**: Lists all ClassTags in the system","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"   - Retrieves all ClassTags from the Model via `Model#getClassTagList()`","lastModifiedDate":"2025-10-29T13:28:54","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"   - Displays them in a numbered list","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"   - If no tags exist, displays \"No class tags found.\"","lastModifiedDate":"2025-10-30T00:39:10","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"4. **ClassTagFilterCommand (triggered by `filter -t`)**: Filters students by ClassTag","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"   - Validates the ClassTag name format","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"   - Checks that the ClassTag exists via `Model#findClassTag()`","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"   - Creates a predicate to filter persons who have the ClassTag","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"   - Updates the filtered person list via `Model#updateFilteredPersonList(predicate)`","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"5. **AddCommand**: Adds a new student with optional ClassTag assignments","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"   - Validates the format of all specified ClassTags","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"   - Checks that all specified ClassTags exist before creating the student","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"   - Links student to ClassTags via references to canonical instances","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"6. **EditCommand**: Edits student details including ClassTag assignments","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"   - Can add, remove, or replace ClassTag assignments","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"   - Validates the format of all ClassTags specified","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"   - Checks that all ClassTags exist before updating","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"   - Empty ClassTag list (`t/`) removes all ClassTag assignments","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Adding a ClassTag","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"The following sequence diagram illustrates the interactions between components when a tutor creates a new ClassTag using the `tag -a` command:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/AddClassTagSequenceDiagram.puml\" alt\u003d\"AddClassTagSequenceDiagram\" /\u003e","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":" \u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"**Note:** The diagram shows the successful case where the ClassTag does not already exist. If `hasClassTag()` returns `true`, a `CommandException` is thrown with the ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"message \"This class tag already exists.\"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Filtering Students by ClassTag","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"The following sequence diagram illustrates how the system filters students by a specific ClassTag:","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ClassTagFilterSequenceDiagram.puml\" alt\u003d\"ClassTagFilterSequenceDiagram\" /\u003e","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"**Note:** The diagram shows the successful case where the ClassTag exists. If `findClassTag()` returns `Optional.empty()`, a `CommandException` is thrown with the message","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"\"Class tag not found\".","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"#### Activity Diagram: Editing Student ClassTags","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"The activity diagram below illustrates the workflow when a tutor edits a student\u0027s ClassTag assignments using the `edit` command:","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/EditClassTagOfExistingStudentActivityDiagram.puml\"/\u003e","lastModifiedDate":"2025-10-29T20:14:41","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T04:00:58","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"**Note:** The diagram simplifies some validation steps for clarity. In the actual implementation, tag format validation occurs before checking existence, and each ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"validation failure results in a specific error message being displayed to the user.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"**Aspect: ClassTag Storage Architecture:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Central storage in `UniqueClassTagList` with student references","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"        - Single source of truth for all ClassTags","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"        - Enforces uniqueness at system level","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"        - Prevents orphaned or duplicate ClassTag names","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"        - Easy to list all classes in the system","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"        - Referential integrity - can prevent deletion of in-use ClassTags","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"        - Requires additional existence validation when assigning ClassTags to students (must check tags exist in UniqueClassTagList first)","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"        - Slightly more complex implementation","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"* **Alternative 2:** Store ClassTags only within each Student object","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"        - Simpler data structure","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"        - No need for separate ClassTag list","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"        - Automatic cleanup when student is deleted","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"        - No centralized management or validation","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"        - Potential for duplicate ClassTag names with slight variations","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"        - Cannot list all classes without scanning all students","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"        - Cannot enforce consistent naming","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"        - No way to track which classes exist in the system","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"**Aspect: ClassTag Command Design:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Single `tag` command with flags (`-a`, `-d`, `-l`)","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"        - Consolidates related operations under one command word","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"        - Reduces the number of top-level commands users need to remember","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"        - Clear semantic grouping of ClassTag operations","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"        - Single ClassTagCommandParser handles all tag operations, reducing parser classes and maintaining consistency","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"        - More complex parsing logic to handle different flags","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"* **Alternative 2:** Separate commands (`addtag`, `deletetag`, `listtag`)","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"        - Simpler individual parsers","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"        - No flag parsing needed","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"        - More top-level commands to remember","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"        - Less semantic grouping","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"**Aspect: ClassTag Assignment Workflow:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Integrate with Add and Edit commands","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"        - Fewer commands for users to learn","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"        - Natural workflow - assign classes when creating/modifying students","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"        - Reduces command clutter","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"        - Add and Edit commands have more responsibilities","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"        - More complex command parsing","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"* **Alternative 2:** Separate AssignClassTag and UnassignClassTag commands","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"        - Single responsibility per command","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"        - Simpler individual command implementations","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"        - More commands for users to remember","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"        - Extra steps in workflow (create student, then assign classes)","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"        - Verbose for bulk operations","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"**Aspect: Case Sensitivity for ClassTag Comparison:**","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Case-insensitive comparison while preserving user input casing","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"  * Pros:","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"    - Prevents duplicate tags with different cases (e.g., \"Math\", \"math\", \"MATH\" are treated as the same tag)","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"    - More user-friendly - users don\u0027t need to remember exact casing when filtering or assigning tags","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"    - Preserves the tutor\u0027s preferred formatting/casing when they first create the tag (e.g., \"Sec_3_A_Math\" remains visible as entered)","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"    - Matches real-world expectations - class names are typically case-insensitive identifiers","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"  * Cons:","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"    - Slightly more complex implementation (requires overriding both `equals()` and `hashCode()` consistently for case-insensitive comparison)","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"    - Users cannot create tags that differ only in case (e.g., cannot have both \"Math\" and \"MATH\" as separate tags)","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"* **Alternative 2:** Normalize all ClassTag names to a single case (e.g., lowercase)","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"        - Simpler implementation - no need for special `equals()` and `hashCode()` overrides","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"        - Completely eliminates case ambiguity","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"        - Consistent display format across the system","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"        - Less flexible - tutors cannot use their preferred casing/formatting","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"        - May look less professional (e.g., \"sec_3_a_math\" vs \"Sec_3_A_Math\")","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"        - Loses semantic information conveyed through capitalization","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"* **Alternative 3:** Case-sensitive comparison (exact match required)","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"        - Simplest implementation - use default String comparison","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"        - Allows maximum flexibility for different naming schemes","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"        - User-unfriendly - requires remembering exact casing","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"        - Prone to duplicate tags with slight case variations","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"        - Could confuse users when \"Math\" and \"math\" are treated as different classes","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"        - More error-prone during filtering and assignment","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T15:58:05","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"#### Error Handling","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"ClassTag operations include comprehensive validation:","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"**Creating ClassTags:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"- Duplicate ClassTag names (case-insensitive)","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"- Invalid ClassTag name format (must be 1-30 alphanumeric characters with underscores, no spaces)","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"- Empty ClassTag name","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"- Missing or invalid flag","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"**Deleting ClassTags:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"- Non-existent ClassTag","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"- ClassTag still assigned to one or more students","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"- Invalid ClassTag format","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"**Assigning ClassTags to Students:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"- Non-existent ClassTag name when adding/editing students","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"- Invalid ClassTag format in student commands","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"**Filtering by ClassTag:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"- Non-existent ClassTag name","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"- Invalid command format","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"- Invalid ClassTag format","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"**General Validation Rules:**","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"- All tag commands enforce **strict parameter checking** — any extra text beyond the expected format is rejected","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"- When multiple flags are present, only the **first valid flag** determines the command type; subsequent flags are treated as invalid parameters and cause the command to fail","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"- Tag names are trimmed of leading/trailing whitespace before validation","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"Each validation error provides clear, actionable feedback to help users correct their input.","lastModifiedDate":"2025-10-29T00:11:16","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"### Fee Management","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"#### Overview","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"The Fee Management feature allows tutors to track, update, and review students’ monthly tuition fee payments.  ","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"Each student has a corresponding `FeeState` (**PAID** or **UNPAID**) for each month starting from their `enrolledMonth`.  ","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"This feature is managed by the central `FeeTracker` component within the `Model`.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T18:27:48","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"Fee Management is implemented through several key components:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"**Model Component:**","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"- `FeeTracker`: Serves as the central manager for all student fee records.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"    - Internally stores data in a nested structure: `Map\u003cStudentId, Map\u003cMonth, FeeState\u003e\u003e`, where each student’s fee history is organized by month.","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"    - The tracker only stores months that have been explicitly marked.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"      Any month after enrolment without a record is automatically considered UNPAID by default.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"      - Months before a student’s enrolledMonth are excluded from fee tracking, as no payment records exist prior to enrolment.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"      - Provides methods to generate payment history between two months.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"-"},"content":"      - This design avoids redundant data storage and enables on-demand computation of fee states, ensuring efficient lookups and minimal memory use.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"      - The `Model` interacts with the `FeeTracker` when marking payments, undoing payments, filtering Paid/Unpaid students, or retrieving historical fee data.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"- `FeeState`: Represents a student’s payment status for a particular month. (either PAID or UNPAID)","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"- `Month`: Represents a calendar month in `MMYY` format and provides utilities for date comparison and traversal.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"- `Person`: Each student stores an `enrolledMonth`, which defines when fee tracking begins.  ","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"  Fee states are only derived for months on or after this enrollment month.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"- The `Model` interface provides methods:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"    - `markPaid(StudentId, Month)`: Marks a student’s fee as Paid for a given month.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"    - `markUnpaid(StudentId, Month)`: Marks a student’s fee as Unpaid for a given month.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"    - `paidStudents(Month)`: Returns a predicate for filtering students who have Paid for the specified month.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"    - `unpaidStudents(Month)`: Returns a predicate for filtering students who have not Paid for the specified month.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"    - `getCurrentFeeState(Person)`: Returns the student’s fee state for the current month.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"    - `feeStateVersionProperty()`: Returns a read-only observable property that increments whenever fee data changes, allowing the UI to refresh automatically.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"**Storage Component:**","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"- `JsonAdaptedFeeRecord`: Converts fee records to and from JSON format for persistence. Each record stores:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"    - `studentId`: the unique identifier of the student,","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"-"},"content":"    - `monthString`: the month in `MMYY` format,","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"    - `feeState`: the payment status (`PAID` or `UNPAID`).","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":"- `JsonAdaptedPerson`: Serializes each student’s data, including their attendance, performance notes, class tags, and **associated fee records**.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"- `JsonSerializableAddressBook`: Handles serialization and deserialization of the entire address book, including all persons, class tags, and fee records.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"- During deserialization:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"    - The list of `feeRecords` is read first and each entry is re-registered into the in-memory `FeeTracker`.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"    - Each person’s `StudentId` is matched to their corresponding fee entries to rebuild accurate payment histories.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"    - Any student without explicit fee entries is assumed to have **no recorded payments**, and their post-enrolment months are treated as **UNPAID** by default.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"**Logic Component:**","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"The following commands handle Fee Management operations:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"1. **FeeMarkPaidCommand (triggered by `fee -p`)**: Marks a student’s fee as PAID for a specific month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"    - Validates that the student exists via `Model#getPersonById()`.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"    - Validates that the target month falls between the student’s enrolled month and the current month (inclusive).","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"    - Ensures all previous months up to the target month are already PAID. ","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"    - Attempts to mark future months or months before enrolment will be rejected.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"    - Updates the `FeeTracker` via `Model#markPaid()` and refreshes the UI.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"2. **FeeMarkUnpaidCommand (triggered by `fee -up`)**: Marks a student’s fee as UNPAID for a specific month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"    - Validates that the student exists via `Model#getPersonById()`.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"    - Validates that the target month falls between the student’s enrolled month and the current month (inclusive).","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"    - Tutors cannot mark future months or pre-enrolment months as Unpaid.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"    - Updates the `FeeTracker` via `Model#markUnpaid()` and refreshes the UI.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"3. **FeeFilterPaidCommand (triggered by `filter -p`)**: Filters students who have Paid for a specified month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"    - Validates that the input month is valid and not in the future.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"    - Updates the filtered student list to display only students marked as PAID for that month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"4. **FeeFilterUnpaidCommand (triggered by `filter -up`)**: Filters students who have not Paid (Unpaid) for a specified month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"    - Validates that the input month is valid and not in the future.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"    - Updates the filtered student list to display only students marked as UNPAID for that month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"5. **FeeViewCommand (triggered by `fee -v`)**: Displays a student’s payment history across a specified range of months.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"    - Validates that the student exists and that the month range is valid.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"    - Retrieves payment data using `FeeTracker#getPaymentHistory()`.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"    - Outputs a reverse-chronological list of months (latest month first), with corresponding fee states.","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"#### Sequence Diagram: Marking a Student as Paid","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"The following sequence diagram illustrates how the system processes the `fee -p` command to mark a student’s fee as Paid:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FeeMarkPaidSequenceDiagram.puml\" alt\u003d\"FeeMarkPaidSequenceDiagram\" /\u003e","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"**Aspect: Sequential Payment Enforcement (Marking later months as PAID)**","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Require all previous months to be PAID before a tutor can mark a later month as PAID.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"-"},"content":"      - Reflects real-world payment flow — students should settle earlier dues before paying for upcoming lessons.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"      - Prevents skipped or inconsistent payment sequences, such as marking August as PAID while July remains UNPAID.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"      - Ensures data integrity — once a month is marked PAID, all earlier months are guaranteed to be cleared.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"      - Simplifies validation and reporting, since the payment timeline always progresses forward without gaps.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"      - Makes it easy to determine a student’s most recent paid month at a glance.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"      - Tutors cannot record payments out of sequence (e.g., skipping July and paying for August directly).","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"-"},"content":"      - Adds a small validation step when marking multiple months.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"* **Alternative 2:** Allow tutors to mark any month as PAID, regardless of whether earlier months are still UNPAID.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"        - Provides maximum flexibility for unusual or irregular payment situations.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"        - Allows quick entry for multiple months without enforcing chronological checks.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"-"},"content":"      - Can result in gaps or inconsistencies in the payment timeline — e.g., later months marked PAID while earlier ones remain UNPAID.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"-"},"content":"      - Makes it easier for tutors to overlook unpaid months, leading to incomplete financial records.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"      - Reduces data reliability, since it becomes unclear whether all payments up to a given point have been fully settled.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"**Aspect: Future Month Restriction (Advance Payments)**","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Restrict marking months that are beyond the current calendar month.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"      - Prevents premature or speculative payments, maintaining realistic, time-based validation.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"-"},"content":"      - Keeps the system aligned with actual payment periods and avoids confusion with future billing.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"-"},"content":"      - Simplifies error handling and prevents data entry mistakes.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"-"},"content":"      - Tutors cannot record advance payments for future months, even if a student has pre-paid.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"      - May require future system updates to support legitimate early payments.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"* **Alternative 2:** Allow tutors to mark future months as PAID, provided that all previous months have already been settled.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"      - Supports prepaid tuition scenarios, where students pay several months in advance.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"      - Convenient for tutors managing long-term payment plans or scheduling future billing cycles in advance.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"      - Reduces repetitive data entry when tutors want to record multiple future payments at once.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"      - Increases the risk of accidental marking of future months, especially if tutors mistype the month or forget the current date.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"-"},"content":"      - Requires additional validation safeguards (e.g., confirmation prompts or warning messages) to prevent unintentional future entries.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"      - Adds complexity to the FeeViewCommand logic, since it must distinguish between completed months and prepaid future months when displaying fee history.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"**Aspect: Backdated Correction (Marking an earlier month as UNPAID)**","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Allow tutors to mark an earlier month as UNPAID, even if later months are already PAID.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"      - Supports real-world correction scenarios — e.g., the tutor realizes a payment was incorrectly recorded.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"-"},"content":"      - Allows quick edits without needing to unmark all subsequent months first.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"      - Keeps flexibility: once corrected, the tutor must still settle earlier UNPAID months before new payments are accepted.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"      - May cause a temporary inconsistency (e.g., later months PAID while an earlier one is UNPAID) until resolved.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"      - Might confuse tutors reviewing the timeline during the correction phase.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"* **Alternative 2:** Block marking an earlier month as UNPAID if any later month is already PAID.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"      - Maintains a strictly chronological payment timeline with no anomalies.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"      - Simplifies record validation and summary generation.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T01:01:46","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"      - Restrictive — tutors cannot fix genuine mis-entries without first unmarking all later months.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"**Aspect: Display Order of Payment History**","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Display payment history in reverse-chronological order (newest-first).  ","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"-"},"content":"  The computed range still spans from the effective start month (typically the enrolment month) up to the **current month**.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"-"},"content":"        - Places the most relevant and recent months at the top, matching tutor workflows.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"-"},"content":"        - Reduces scrolling effort for checking recent payments or following up on unpaid students.","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"        - Maintains consistency across panels (e.g., performance notes), which also prioritize recent data.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"        - Tutors reviewing long-term records need to scroll to the bottom to reach the **earliest (enrolment) months**.","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"-"},"content":"* **Alternative 2:** Display payment history in chronological order (oldest-first).  ","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"  The earliest month (enrolment) appears first, progressing toward the current month.","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"    * Pros:","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"-"},"content":"        - Provides a narratively intuitive timeline, helping tutors review payment history from the student’s start date.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"    * Cons:","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        - Recent months, which tutors most often need, appear at the bottom — requiring extra scrolling.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"        - Inconsistent with other panels that already emphasize newest-first ordering.","lastModifiedDate":"2025-10-30T23:01:22","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"#### Error Handling","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"Fee Management includes comprehensive validation across all operations:","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"**Marking Fees**","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"-"},"content":"- Invalid or missing `StudentId`","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"-"},"content":"- Month before enrolment or after the current month is invalid","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"-"},"content":"- Attempting to mark Paid when already Paid","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"-"},"content":"- Attempting to mark Unpaid when already Unpaid","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"-"},"content":"- Attempting to mark Paid while an earlier month remains Unpaid","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"-"},"content":"**Filtering Fees**","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"-"},"content":"- Invalid or future month input","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"-"},"content":"**Viewing Fee History**","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"-"},"content":"- Invalid `StudentId`","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"-"},"content":"- Invalid or future start month","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"- No payment data available","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"Each validation error produces clear and descriptive messages to guide user correction.","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T21:19:21","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"## **Planned Enhancements**","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"**Team size:** 5","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"Given below is a list of enhancements we plan to implement in future versions of Tuto:","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T16:48:47","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"1. **Bulk attendance marking for entire class:** Currently, tutors must mark attendance for each student individually using `att -p s/STUDENT_ID d/DATE t/CLASS`. For a class with 20-30 students, this becomes tedious and time-consuming. We plan to add a bulk marking feature that allows tutors to mark attendance for all students in a specific class at once. For example, `att -pA d/10112025 t/Math` would mark all students as present enrolled in the Math ClassTag as present for that date. This would significantly reduce the time needed to take attendance at the beginning of each lesson.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"2. **Bulk deletion of old attendance records:** Currently, attendance records accumulate indefinitely, and tutors can only delete them one by one using `att -d s/STUDENT_ID d/DATE t/CLASS`. For students enrolled for extended periods (e.g., multiple years), their attendance lists can become very long and cluttered with old records that are no longer relevant for day-to-day tutoring. We plan to add a bulk deletion feature that allows tutors to remove attendance records older than a specified date or within a date range. For example, `att -clear d/BEFORE_DATE` or `att -clear d/FROM_DATE d/TO_DATE` would remove old records in bulk. This would help tutors maintain clean, relevant data while preserving important recent attendance history, improving both performance and usability when viewing attendance records.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"3. **Individual class tag assignment and unassignment on top of current add/edit:** Currently, when editing a student\u0027s class tags using the edit command, all existing tags are replaced with the new list provided (or cleared if `t/` is empty). This makes it cumbersome to add or remove a single tag without re-specifying all others. We plan to introduce new commands `tag -assign s/STUDENT_ID t/TAG_NAME` and `tag -unassign s/STUDENT_ID t/TAG_NAME` that allow adding or removing individual tags without affecting previously assigned ones. For example, `tag -assign s/0001 t/Sec_3_A_Math` would add the `Sec_3_A_Math` tag to student 0001 if they don\u0027t already have it, leaving other tags intact. Similarly, `tag -unassign s/0001 t/Sec_3_A_Math` would remove only that tag. This enhancement addresses the frequent need for precise, incremental changes to student records, improving tutor workflow efficiency.","lastModifiedDate":"2025-10-31T00:31:20","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"meowzz28"},"content":"4. **Bulk ClassTag operations:** Currently, assigning or removing a ClassTag requires editing each student individually using the `edit` command. We plan to introduce bulk tag operations with two new commands: `tag -ba t/TAG_NAME s/ID1 s/ID2 ...` (bulk assign) to assign a single ClassTag to multiple students at once, and `tag -rall t/TAG_NAME` (remove from all) to remove a specific ClassTag from every student who currently has it. For example, `tag -ba t/Sec_3_A_Math s/0001 s/0002 s/0010` would assign the \"Sec_3_A_Math\" tag to students 0001, 0002, and 0010 in a single command, while `tag -rall t/Sec_3_A_Math` would remove that tag from all students currently assigned to it. This enhancement would significantly improve efficiency when managing class enrollments, course transitions, renaming classes and academic year updates.","lastModifiedDate":"2025-11-01T16:16:34","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"-"},"content":"5. **Introduce third fee state — WAIVED/SKIPPED:**  ","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"-"},"content":"   At present, fee tracking uses only two states: **PAID** and **UNPAID**.  ","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"-"},"content":"   In future releases, we plan to introduce a third state, **WAIVED** (or **SKIPPED**), to handle non-billable months such as holidays, term breaks, or periods without lessons.  ","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"-"},"content":"   This enhancement will:","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"-"},"content":"    - Accurately reflect months when no tuition fees are due.","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    - Allow tutors to “skip” months without breaking the sequential payment validation rule.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"-"},"content":"    - Improve clarity in fee reports by distinguishing “not billed” months from “unpaid” ones.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"-"},"content":"   This addition will also enhance flexibility in long-term record management and improve real-world applicability for tutoring scenarios involving variable schedules.","lastModifiedDate":"2025-10-29T22:13:21","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"-"},"content":"6. **Integrate Fee and Attendance Systems:**  ","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"-"},"content":"   Currently, fee tracking and attendance operate independently.  ","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"-"},"content":"   We plan to introduce light integration between both modules to make payment tracking more context-aware.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"    - When viewing a student’s fee history, tutors will also see the **number of lessons held** for each month.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    - When marking a month as **PAID** with no recorded attendance, the system will show a **confirmation prompt** to avoid mistakes.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"-"},"content":"    - When marking a month as **UNPAID** while lessons are recorded, a **reminder** will appear to alert the tutor of possible inconsistencies.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"-"},"content":"    - Months **without any recorded attendance** will automatically be assigned a **WAIVED** status instead of UNPAID, ensuring skipped months (e.g., holidays or term breaks) do not block future payments.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"-"},"content":"   This enhancement improves **accuracy** and **consistency** between financial and attendance records, while keeping full flexibility for tutors to override when necessary.","lastModifiedDate":"2025-10-29T22:39:37","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"-"},"content":"7. **Unified student history view (view s/STUDENT_ID):** Introduce a consolidated view command that shows every performance note, attendance record, and fee transaction for the specified student, allowing tutors to review a learner’s full journey without hopping between modules.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"-"},"content":"8. **Targeted performance and attendance filters (perf -v / att -v):** Extend the existing view flags to accept optional m/MMYY or t/CLASS_TAG parameters so tutors can zero in on a specific month or class when analysing historical performance or attendance data.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"-"},"content":"* Freelance Secondary School Tutor in Singapore","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26T01:11:10","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"-"},"content":"**Value proposition**: Helps freelance tutors organise students, track attendance and performance, and manage tuition fees, all in one platform designed to reduce admin work so they can focus on teaching.","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                              | So that I can…​                                                        |","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"-"},"content":"|----------|------------------------------------------- |-----------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"-"},"content":"| `* * * ` | tutor handling lesson fees                 | tag a student as paid for a given month                   | keep track of students who have settled their tuition fees             |","lastModifiedDate":"2025-10-08T23:36:23","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"-"},"content":"| `* * *`  | tutor handling lesson fees                 | tag a student as unpaid for a given month                 | fix mistakes and keep payment records accurate                         |","lastModifiedDate":"2025-10-30T04:37:08","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"-"},"content":"| `* * *`  | tutor handling lesson fees                 | filter students who have paid by month                    | view all students who have completed payment for that month at a glance |","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"-"},"content":"| `* * *`  | tutor handling lesson fees                 | filter students who have not paid by month                | follow up with students who have outstanding tuition fees              |","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"-"},"content":"| `* * *`  | tutor handling lesson fees                 | view a student\u0027s payment history up to the current month  | review their past payment behaviour and identify missed months         |","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | create a class tag                                        | keep track of a new class I am teaching                                |","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | assign class tags to a student during creation or editing | manage all students of the same class together                         |","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | remove class tags from a student through editing          | remove students not in a particular class                              |","lastModifiedDate":"2025-10-28T12:28:52","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | filter students by class tag (eg. Sec_3_A_Math)           | easily find students in a specific class                               |","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | list all the class tags                                   | know what classes I am teaching                                        |","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | delete a class tag                                        | keep track of the classes I am still teaching                          |","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"-"},"content":"| `* * * ` | tutor     | add a performance note for a student on a given date      | I can record their progress                                            |","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"-"},"content":"| `* * * ` | tutor     | view all performance notes for a student                  | I can review their progress                                            |","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"-"},"content":"| `* * * ` | tutor     | edit a specific performance note for a student            | I can correct or update it                                             |","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"-"},"content":"| `* * * ` | tutor     | delete a specific performance note for a student          | I can remove it if needed                                              |","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | take attendance of each student                           | I can track their attendance record                                    |","lastModifiedDate":"2025-10-08T23:10:35","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | view students\u0027 attendance history                         | I can track if students are consistently attending lessons             |","lastModifiedDate":"2025-10-29T02:03:25","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | mark a student\u0027s attendance as absent                     | correct mistakes or changes if attendance was marked wrongly           |","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"-"},"content":"| `* * *`  | tutor who teaches multiple classes         | delete an attendance record                               | remove records for cancelled classes or fix erroneous entries          |","lastModifiedDate":"2025-10-30T00:39:10","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"-"},"content":"| `* *`    | new tutor user                                           | view sample data                                          | understand how the app looks when populated                            |","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"-"},"content":"| `* *`    | tutor starting fresh                                     | purge sample/old data                                     | start fresh with only my real student info                             |                                                                  |","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"-"},"content":"| `* * *`  | tutor managing students                                  | add students                                              | quickly add my students into the address book                          |","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"-"},"content":"| `* * *`  | tutor managing students                                  | view students                                             | see all the students I am teaching and their details at a glance       |","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"-"},"content":"| `* *`    | tutor managing students                                  | delete students                                           | remove students who are no longer taking lessons                       |","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"-"},"content":"| `* * *`  | tutor handling many students across classes and subjects | edit student information                                  | update my contact list                                                 |","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"-"},"content":"| `* * *`  | tutor handling many students across classes and subjects | search for a student by name                              | quickly locate their information                                       |","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `Tuto` and the **Actor** is the `Tutor`, unless specified otherwise)","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"-"},"content":"**Use case: Create a new class tag**","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1126,"author":{"gitId":"-"},"content":" **MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1127,"author":{"gitId":"-"},"content":" 1. Tutor requests to create a new class tag, providing a tag name.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1128,"author":{"gitId":"-"},"content":" 2. Tuto validates the class tag name format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1129,"author":{"gitId":"-"},"content":" 3. Tuto checks that no class tag with the same name (case-insensitive) exists.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1130,"author":{"gitId":"-"},"content":" 4. Tuto creates the new class tag.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1131,"author":{"gitId":"-"},"content":" 5. Tuto shows a success message.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1132,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1133,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1134,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1135,"author":{"gitId":"-"},"content":" **Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1136,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1138,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1140,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1141,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1142,"author":{"gitId":"-"},"content":" * 2a. The provided class tag name is invalid.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1143,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1144,"author":{"gitId":"-"},"content":"     * 2a1.  Tuto shows an error message indicating invalid class tag format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1145,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1146,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1147,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1148,"author":{"gitId":"-"},"content":" * 3a. A class tag with the same name already exists (case-insensitive match).","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1149,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1150,"author":{"gitId":"-"},"content":"     * 3a1. Tuto shows an error message indicating the tag already exists.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1151,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1152,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-08T22:42:59","isFullCredit":false},{"lineNumber":1153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1154,"author":{"gitId":"-"},"content":"**Use case: Delete a class tag**","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1156,"author":{"gitId":"-"},"content":" **MSS**","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1157,"author":{"gitId":"-"},"content":" 1. Tutor requests to delete a class tag, providing its name.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1158,"author":{"gitId":"-"},"content":" 2. Tuto validates the class tag name format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1159,"author":{"gitId":"-"},"content":" 3. Tuto checks that the class tag exists.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1160,"author":{"gitId":"-"},"content":" 4. Tuto checks that the class tag is not assigned to any students.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1161,"author":{"gitId":"-"},"content":" 5. Tuto deletes the class tag.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1162,"author":{"gitId":"-"},"content":" 6. Tuto shows a success message.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1163,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1164,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1165,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1166,"author":{"gitId":"-"},"content":" **Extensions**","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1167,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1169,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1171,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1172,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1173,"author":{"gitId":"-"},"content":" * 2a. The provided class tag name format is invalid.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1174,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1175,"author":{"gitId":"-"},"content":"     * 2a1.  Tuto shows an error message indicating invalid class tag format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1176,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1177,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1178,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1179,"author":{"gitId":"-"},"content":" * 3a. The specified class tag does not exist.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1180,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1181,"author":{"gitId":"-"},"content":"     * 3a1. Tuto shows an error message indicating the class tag was not found.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1182,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1183,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1184,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1185,"author":{"gitId":"-"},"content":" * 4a. The specified class tag is still assigned to one or more students.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1186,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1187,"author":{"gitId":"-"},"content":"     * 4a1. Tuto shows an error message suggesting to unassign the tag from all students before deletion.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1188,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1189,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1190,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1191,"author":{"gitId":"-"},"content":" **Use case: List all class tags**","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1192,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1193,"author":{"gitId":"-"},"content":" **MSS**","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1194,"author":{"gitId":"-"},"content":" 1. Tutor requests to list all class tags.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1195,"author":{"gitId":"-"},"content":" 2. Tuto retrieves all existing class tags.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1196,"author":{"gitId":"-"},"content":" 3. Tuto displays the tags in a numbered list.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1197,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1199,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1200,"author":{"gitId":"-"},"content":" **Extensions**","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1201,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid (extra parameters provided).","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1203,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1205,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1206,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1207,"author":{"gitId":"-"},"content":" * 2a. No class tags exist in the system.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1208,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1209,"author":{"gitId":"-"},"content":"     * 2a1. Tuto shows a message indicating that no tags have been created.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1210,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1211,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-08T22:59:32","isFullCredit":false},{"lineNumber":1212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1214,"author":{"gitId":"-"},"content":"**Use case: Filter students by class tag**","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1216,"author":{"gitId":"-"},"content":" **MSS**","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1217,"author":{"gitId":"-"},"content":" 1. Tutor requests to filter students by a specific class tag name.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1218,"author":{"gitId":"-"},"content":" 2. Tuto validates class tag name format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1219,"author":{"gitId":"-"},"content":" 3. Tuto checks that the class tag exists.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1220,"author":{"gitId":"-"},"content":" 4. Tuto filters the student list to show only those assigned to the class tag.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1221,"author":{"gitId":"-"},"content":" 5. Tuto displays the filtered list.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1222,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1223,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1224,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1225,"author":{"gitId":"-"},"content":" **Extensions**","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1226,"author":{"gitId":"-"},"content":" * 1a. The command format is invalid.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1227,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1228,"author":{"gitId":"-"},"content":"     * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1229,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1230,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1231,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1232,"author":{"gitId":"-"},"content":" * 2a. The class tag name format is invalid.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1233,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1234,"author":{"gitId":"-"},"content":"     * 2a1. Tuto shows an error message indicating invalid class tag format.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1235,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1236,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1237,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1238,"author":{"gitId":"-"},"content":" * 3a. The specified class tag does not exist.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1239,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1240,"author":{"gitId":"-"},"content":"     * 3a1. Tuto shows an error message indicating the class tag was not found.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1241,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1242,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1243,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1244,"author":{"gitId":"-"},"content":" * 5a. No students are assigned to the specified class tag.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1245,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1246,"author":{"gitId":"-"},"content":"     * 5a1. Tuto displays an empty list.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1247,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1248,"author":{"gitId":"-"},"content":"       Use case ends.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1250,"author":{"gitId":"-"},"content":"**Use case: Add a performance note**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1252,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1253,"author":{"gitId":"-"},"content":"1. Tutor requests to add a performance note for a student on a specific date for a specific class.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1254,"author":{"gitId":"-"},"content":"2. Tuto adds the performance note for the student.","lastModifiedDate":"2025-10-08T23:20:40","isFullCredit":false},{"lineNumber":1255,"author":{"gitId":"-"},"content":"3. Tuto shows a success message indicating the note has been added.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1257,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1259,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1260,"author":{"gitId":"-"},"content":"* 1a. The provided student ID does not match any existing student.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1262,"author":{"gitId":"-"},"content":"  * 1a1. Tuto shows an error message indicating student not found.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1263,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1264,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1265,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1266,"author":{"gitId":"-"},"content":"* 1b. The command format is invalid (e.g. missing prefixes).","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1268,"author":{"gitId":"-"},"content":"  * 1b1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1269,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1270,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1272,"author":{"gitId":"-"},"content":"* 1c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1274,"author":{"gitId":"-"},"content":"  * 1c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1275,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1276,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1278,"author":{"gitId":"-"},"content":"* 1d. The specified class tag does not exist.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1280,"author":{"gitId":"-"},"content":"  * 1d1. Tuto shows an error message indicating class tag not found.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1281,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1282,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1284,"author":{"gitId":"-"},"content":"* 1e. The specified class tag is not assigned to the student.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1286,"author":{"gitId":"-"},"content":"  * 1e1. Tuto shows an error message indicating class tag not assigned to student.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1287,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1288,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1290,"author":{"gitId":"-"},"content":"* 1f. The provided date fails validation.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1292,"author":{"gitId":"-"},"content":"    * 1f1. The date is in the future.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1294,"author":{"gitId":"-"},"content":"        * 1f1a. Tuto shows an error message indicating date cannot be in the future.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1296,"author":{"gitId":"-"},"content":"          Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1298,"author":{"gitId":"-"},"content":"    * 1f2. The date format is earlier than the student\u0027s enrolment month.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1300,"author":{"gitId":"-"},"content":"        * 1f2a. Tuto shows an error message indicating date cannot be before enrolment month.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1302,"author":{"gitId":"-"},"content":"            Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1304,"author":{"gitId":"-"},"content":"    * 1f3. The date does not correspond to a real calendar day (e.g. 30th February).","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1306,"author":{"gitId":"-"},"content":"        * 1f3a. Tuto shows an error message indicating invalid date.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1308,"author":{"gitId":"-"},"content":"            Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1309,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1310,"author":{"gitId":"-"},"content":"* 1g. Performance note exceeds the 200-character limit.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1312,"author":{"gitId":"-"},"content":"  * 1g1. Tuto shows an error message indicating character limit.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1313,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1314,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1315,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1316,"author":{"gitId":"-"},"content":"* 1h. A performance note already exists for the same student on the same date for the same class.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1318,"author":{"gitId":"-"},"content":"  * 1h1. Tuto shows an error message.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1319,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1320,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1321,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1322,"author":{"gitId":"-"},"content":"**Use case: View performance notes of a student**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1324,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1325,"author":{"gitId":"-"},"content":"1. Tutor requests to view all performance notes of a student.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1326,"author":{"gitId":"-"},"content":"2. Tuto displays all performance notes of the student in chronological order, with newest at the top.","lastModifiedDate":"2025-10-08T23:20:40","isFullCredit":false},{"lineNumber":1327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1328,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1330,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1331,"author":{"gitId":"-"},"content":"* 1a. The provided student ID does not match any existing student.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1333,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message indicating student not found.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1335,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1337,"author":{"gitId":"-"},"content":"* 1b. The command format is invalid (e.g. missing prefixes).","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1339,"author":{"gitId":"-"},"content":"    * 1b1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1341,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1343,"author":{"gitId":"-"},"content":"* 1c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1345,"author":{"gitId":"-"},"content":"    * 1c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1347,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1349,"author":{"gitId":"-"},"content":"* 1d. The student has no performance notes.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1351,"author":{"gitId":"-"},"content":"    * 1d1. Tuto shows a message indicating that the student has no performance notes.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1352,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1353,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1355,"author":{"gitId":"-"},"content":"**Use case: Edit a performance note**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1357,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1358,"author":{"gitId":"-"},"content":"1. Tutor requests to edit a specific performance note of a student on a specific date for a specific class.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1359,"author":{"gitId":"-"},"content":"2. Tuto updates the performance note with the new content.","lastModifiedDate":"2025-10-08T23:20:40","isFullCredit":false},{"lineNumber":1360,"author":{"gitId":"-"},"content":"3. Tuto shows a success message.","lastModifiedDate":"2025-10-08T23:20:40","isFullCredit":false},{"lineNumber":1361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1362,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1364,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1365,"author":{"gitId":"-"},"content":"* 1a. The provided student ID does not match any existing student.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1367,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message indicating student not found.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1369,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1371,"author":{"gitId":"-"},"content":"* 1b. The command format is invalid (e.g. missing prefixes).","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1373,"author":{"gitId":"-"},"content":"    * 1b1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1375,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1377,"author":{"gitId":"-"},"content":"* 1c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1379,"author":{"gitId":"-"},"content":"    * 1c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1381,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1383,"author":{"gitId":"-"},"content":"* 1d. The provided date fails validation.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1385,"author":{"gitId":"-"},"content":"    * 1d1. The date does not correspond to a real calendar day (e.g. 30th February).","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1387,"author":{"gitId":"-"},"content":"        * 1e3a. Tuto shows an error message indicating invalid date.","lastModifiedDate":"2025-10-30T00:30:12","isFullCredit":false},{"lineNumber":1388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1389,"author":{"gitId":"-"},"content":"          Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1391,"author":{"gitId":"-"},"content":"* 1e. Performance note exceeds the 200-character limit.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1393,"author":{"gitId":"-"},"content":"    * 1e1. Tuto shows an error message indicating character limit.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1395,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1397,"author":{"gitId":"-"},"content":"* 1f. Performance note does not exist for the specified student on the given date for the given class.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1399,"author":{"gitId":"-"},"content":"    * 1f1. Tuto shows an error message.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1401,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1403,"author":{"gitId":"-"},"content":"**Use case: Delete a performance note**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1405,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1406,"author":{"gitId":"-"},"content":"1. Tutor requests to delete a specific performance note of a student on a specific date for a specific class.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1407,"author":{"gitId":"-"},"content":"2. Tuto deletes the performance note.","lastModifiedDate":"2025-10-08T23:20:40","isFullCredit":false},{"lineNumber":1408,"author":{"gitId":"-"},"content":"3. Tuto shows a success message.","lastModifiedDate":"2025-10-08T23:20:40","isFullCredit":false},{"lineNumber":1409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1410,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1412,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1413,"author":{"gitId":"-"},"content":"* 1a. The provided student ID does not match any existing student.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1415,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message indicating student not found.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1417,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1419,"author":{"gitId":"-"},"content":"* 1b. The command format is invalid (e.g. missing prefixes).","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1421,"author":{"gitId":"-"},"content":"    * 1b1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:10:10","isFullCredit":false},{"lineNumber":1422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1423,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1425,"author":{"gitId":"-"},"content":"* 1c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1427,"author":{"gitId":"-"},"content":"    * 1c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:43:06","isFullCredit":false},{"lineNumber":1429,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-07T15:16:06","isFullCredit":false},{"lineNumber":1431,"author":{"gitId":"-"},"content":"* 1d. The provided date fails validation.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1433,"author":{"gitId":"-"},"content":"    * 1d1. The date does not correspond to a real calendar day (e.g. 30th February).","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1435,"author":{"gitId":"-"},"content":"        * 1d1a. Tuto shows an error message indicating invalid date.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1437,"author":{"gitId":"-"},"content":"          Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1439,"author":{"gitId":"-"},"content":"* 1e. A performance note does not exist for the same student on the same date for the same class.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:10:56","isFullCredit":false},{"lineNumber":1441,"author":{"gitId":"-"},"content":"    * 1e1. Tuto shows an error message.","lastModifiedDate":"2025-10-30T13:14:32","isFullCredit":false},{"lineNumber":1442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1443,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1445,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1446,"author":{"gitId":"-"},"content":"**Use case: Mark Student as Paid**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1448,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1449,"author":{"gitId":"-"},"content":"1. Tutor requests to mark a student as **PAID** for a specific month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1450,"author":{"gitId":"-"},"content":"2. Tuto validates the request: student exists, command format is valid, and the month is **between the enrolled month and the current month (inclusive)**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1451,"author":{"gitId":"-"},"content":"3. Tuto verifies that **all earlier months** (from enrolment up to the previous month) are already **PAID**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1452,"author":{"gitId":"-"},"content":"4. Tuto records the **PAID** status for the month and displays a success message.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1454,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1456,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1457,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1458,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1459,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1461,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1462,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1463,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1465,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1466,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1467,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1469,"author":{"gitId":"-"},"content":"* 2d. The selected month is **before enrolment** or **after the current month**.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1470,"author":{"gitId":"-"},"content":"    * 2d1. Tuto shows an error that the month is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1471,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1473,"author":{"gitId":"-"},"content":"* 2e. The selected month is **already marked as PAID**.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1474,"author":{"gitId":"-"},"content":"    * 2e1. Tuto indicates that the payment has already been recorded.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1475,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1477,"author":{"gitId":"-"},"content":"* 3a. An **earlier month** is **UNPAID**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1478,"author":{"gitId":"-"},"content":"    * 3a1. Tuto shows an error indicating the earliest unpaid month that blocks the operation.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1479,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1481,"author":{"gitId":"-"},"content":"**Use case: Mark Student as Unpaid**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1483,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1484,"author":{"gitId":"-"},"content":"1. Tutor requests to mark a student as **UNPAID** for a specific month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1485,"author":{"gitId":"-"},"content":"2. Tuto validates the request: student exists, command format is valid, and the month is **between the enrolled month and the current month (inclusive)**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1486,"author":{"gitId":"-"},"content":"3. Tuto records the **UNPAID** status and displays a success message.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1488,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1490,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1491,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1492,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1493,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1495,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1496,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1497,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:33:08","isFullCredit":false},{"lineNumber":1499,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1500,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1501,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1503,"author":{"gitId":"-"},"content":"* 2d. The selected month is **before enrolment** or **after the current month**.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1504,"author":{"gitId":"-"},"content":"    * 2d1. Tuto shows an error that the month is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1505,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1507,"author":{"gitId":"-"},"content":"* 2e. The selected month is **already marked as UNPAID**.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1508,"author":{"gitId":"-"},"content":"    * 2e1. Tuto indicates that the month is already unpaid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1509,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1511,"author":{"gitId":"-"},"content":"**Use case: Filter Paid Students by Month**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1513,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1514,"author":{"gitId":"-"},"content":"1. Tutor requests to filter students marked **PAID** for a specific month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1515,"author":{"gitId":"-"},"content":"2. Tuto validates the request: command format is valid and the month is **not in the future**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1516,"author":{"gitId":"-"},"content":"3. Tuto applies the predicate to the model to filter students by **PAID** status for that month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1517,"author":{"gitId":"-"},"content":"4. Tuto displays the filtered list.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1519,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1521,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1522,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1523,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1524,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1526,"author":{"gitId":"-"},"content":"* 2b. The month is **in the future**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1527,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that future months cannot be filtered.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1528,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:33:08","isFullCredit":false},{"lineNumber":1530,"author":{"gitId":"-"},"content":"* 2c. The month format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1531,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid month format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1532,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1534,"author":{"gitId":"-"},"content":"**Use case: Filter Unpaid Students by Month**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1536,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1537,"author":{"gitId":"-"},"content":"1. Tutor requests to filter students marked **UNPAID** for a specific month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1538,"author":{"gitId":"-"},"content":"2. Tuto validates the request: command format is valid and the month is **not in the future**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1539,"author":{"gitId":"-"},"content":"3. Tuto applies the predicate to the model to filter students by **UNPAID** status for that month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1540,"author":{"gitId":"-"},"content":"4. Tuto displays the filtered list.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1542,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1544,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1545,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1546,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1547,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1549,"author":{"gitId":"-"},"content":"* 2b. The month is **in the future**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1550,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that future months cannot be filtered.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1551,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1553,"author":{"gitId":"-"},"content":"* 2c. The month format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1554,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid month format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1555,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:14:37","isFullCredit":false},{"lineNumber":1557,"author":{"gitId":"-"},"content":"**Use case: View Payment History of a Student**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1559,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1560,"author":{"gitId":"-"},"content":"1. Tutor requests to view a student\u0027s payment history (optionally with a start month).","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1561,"author":{"gitId":"-"},"content":"2. Tuto validates the request: command format is valid, the student exists, and the provided start month (if any) is **not in the future**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1562,"author":{"gitId":"-"},"content":"3. Tuto determines the effective start month:","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1563,"author":{"gitId":"-"},"content":"    * If a start month is provided, the range starts from the **later** of the provided month and the **enrolled month**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1564,"author":{"gitId":"-"},"content":"    * Otherwise, the range starts from the **enrolled month**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1565,"author":{"gitId":"-"},"content":"4. Tuto retrieves the month-by-month history from the effective start to the current month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1566,"author":{"gitId":"-"},"content":"5. Tuto displays the history in reverse-chronological order (current month at the top, effective start at the bottom), indicating whether each month is an **explicit** mark or a **default** (unmarked → UNPAID).","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":1567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1568,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1570,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1571,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1572,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1573,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:33:08","isFullCredit":false},{"lineNumber":1575,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1576,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1577,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1579,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1580,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1581,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1583,"author":{"gitId":"-"},"content":"* 2d. The provided start month is **after the current month**.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1584,"author":{"gitId":"-"},"content":"    * 2d1. Tuto shows an error that future months cannot be displayed.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1585,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1587,"author":{"gitId":"-"},"content":"* 2e. The month format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1588,"author":{"gitId":"-"},"content":"    * 2e1. Tuto shows an error message indicating invalid month format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1589,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1591,"author":{"gitId":"-"},"content":"* 3a. The provided start month is **before enrolment**.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1592,"author":{"gitId":"-"},"content":"    * 3a1. Tuto automatically adjusts the start to the enrolment month.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1593,"author":{"gitId":"-"},"content":"      Use case continues at Step 4.","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:50:05","isFullCredit":false},{"lineNumber":1595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:33:08","isFullCredit":false},{"lineNumber":1596,"author":{"gitId":"-"},"content":"**Use case: Mark Student as Present**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1598,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1599,"author":{"gitId":"-"},"content":"1. Tutor requests to mark a student as **Present** for a specific date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1600,"author":{"gitId":"-"},"content":"2. Tuto validates the request: student exists, command format is valid, date is valid, and class tag exists and is assigned to the student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1601,"author":{"gitId":"-"},"content":"3. Tuto checks that the attendance is not already marked as **Present** for that date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1602,"author":{"gitId":"-"},"content":"4. Tuto records the **Present** attendance and displays a success message.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1604,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1606,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1607,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1608,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1609,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:10:35","isFullCredit":false},{"lineNumber":1611,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1612,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1613,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:10:35","isFullCredit":false},{"lineNumber":1614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1615,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1616,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1617,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1619,"author":{"gitId":"-"},"content":"* 2d. The specified class tag does not exist.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1620,"author":{"gitId":"-"},"content":"    * 2d1. Tuto shows an error message indicating class tag not found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1621,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1623,"author":{"gitId":"-"},"content":"* 2e. The specified class tag is not assigned to the student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1624,"author":{"gitId":"-"},"content":"    * 2e1. Tuto shows an error message indicating class tag not assigned to student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1625,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-09T00:33:08","isFullCredit":false},{"lineNumber":1627,"author":{"gitId":"-"},"content":"* 2f. The provided date is in the future.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1628,"author":{"gitId":"-"},"content":"    * 2f1. Tuto shows an error message indicating date cannot be in the future.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1629,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1631,"author":{"gitId":"-"},"content":"* 2g. The provided date is before the student\u0027s enrolment month.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1632,"author":{"gitId":"-"},"content":"    * 2g1. Tuto shows an error message indicating date cannot be before enrolment.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1633,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1635,"author":{"gitId":"-"},"content":"* 2h. The date does not correspond to a real calendar day (e.g. 30th February).","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1636,"author":{"gitId":"-"},"content":"    * 2h1. Tuto shows an error message indicating invalid date.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1637,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1639,"author":{"gitId":"-"},"content":"* 3a. The attendance is already marked as **Present** for that date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1640,"author":{"gitId":"-"},"content":"    * 3a1. Tuto shows an error message indicating the student is already marked present.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1641,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1643,"author":{"gitId":"-"},"content":"**Use case: Mark Student as Absent**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1645,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1646,"author":{"gitId":"-"},"content":"1. Tutor requests to mark a student as **Absent** for a specific date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1647,"author":{"gitId":"-"},"content":"2. Tuto validates the request: student exists, command format is valid, date is valid, and class tag exists and is assigned to the student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1648,"author":{"gitId":"-"},"content":"3. Tuto checks that the attendance is not already marked as **Absent** for that date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1649,"author":{"gitId":"-"},"content":"4. Tuto records the **Absent** attendance and displays a success message.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1651,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1653,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1654,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1655,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1656,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1658,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1659,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1660,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1662,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1663,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1664,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:10:35","isFullCredit":false},{"lineNumber":1666,"author":{"gitId":"-"},"content":"* 2d. The specified class tag does not exist.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1667,"author":{"gitId":"-"},"content":"    * 2d1. Tuto shows an error message indicating class tag not found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1668,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:10:35","isFullCredit":false},{"lineNumber":1669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1670,"author":{"gitId":"-"},"content":"* 2e. The specified class tag is not assigned to the student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1671,"author":{"gitId":"-"},"content":"    * 2e1. Tuto shows an error message indicating class tag not assigned to student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1672,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1674,"author":{"gitId":"-"},"content":"* 2f. The provided date is in the future.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1675,"author":{"gitId":"-"},"content":"    * 2f1. Tuto shows an error message indicating date cannot be in the future.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1676,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1678,"author":{"gitId":"-"},"content":"* 2g. The provided date is before the student\u0027s enrolment month.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1679,"author":{"gitId":"-"},"content":"    * 2g1. Tuto shows an error message indicating date cannot be before enrolment.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1680,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1682,"author":{"gitId":"-"},"content":"* 2h. The date does not correspond to a real calendar day (e.g. 30th February).","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1683,"author":{"gitId":"-"},"content":"    * 2h1. Tuto shows an error message indicating invalid date.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1684,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1686,"author":{"gitId":"-"},"content":"* 3a. The attendance is already marked as **Absent** for that date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1687,"author":{"gitId":"-"},"content":"    * 3a1. Tuto shows an error message indicating the student is already marked absent.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1688,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1690,"author":{"gitId":"-"},"content":"**Use case: Delete an Attendance Record**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1692,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1693,"author":{"gitId":"-"},"content":"1. Tutor requests to delete an attendance record for a student on a specific date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1694,"author":{"gitId":"-"},"content":"2. Tuto validates the request: student exists, command format is valid, date is valid, and attendance record exists for that date and class.","lastModifiedDate":"2025-10-30T23:32:42","isFullCredit":false},{"lineNumber":1695,"author":{"gitId":"-"},"content":"3. Tuto verifies that an attendance record exists for that date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1696,"author":{"gitId":"-"},"content":"4. Tuto deletes the attendance record and displays a success message.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1698,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1700,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1701,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1702,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1703,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1705,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1706,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1707,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1709,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1710,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1711,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1713,"author":{"gitId":"-"},"content":"* 2d. The date does not correspond to a real calendar day (e.g. 30th February).","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1714,"author":{"gitId":"-"},"content":"    * 2d1. Tuto shows an error message indicating invalid date.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1715,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1717,"author":{"gitId":"-"},"content":"* 3a. No attendance record exists for the specified date and class.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1718,"author":{"gitId":"-"},"content":"    * 3a1. Tuto shows an error message indicating no attendance record found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1719,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":1721,"author":{"gitId":"-"},"content":"**Use case: View a Student\u0027s Attendance History**","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1723,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1724,"author":{"gitId":"-"},"content":"1. Tutor requests to view the attendance history of a student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1725,"author":{"gitId":"-"},"content":"2. Tuto validates the request: student exists and command format is valid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1726,"author":{"gitId":"-"},"content":"3. Tuto retrieves all attendance records for the student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1727,"author":{"gitId":"-"},"content":"4. Tuto displays the attendance history sorted by date (newest first), then by class tag name alphabetically.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1729,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1731,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1732,"author":{"gitId":"-"},"content":"* 2a. Command format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1733,"author":{"gitId":"-"},"content":"    * 2a1. Tuto shows the correct usage format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1734,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1736,"author":{"gitId":"-"},"content":"* 2b. Student ID does not exist.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1737,"author":{"gitId":"-"},"content":"    * 2b1. Tuto shows an error that the student cannot be found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1738,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1740,"author":{"gitId":"-"},"content":"* 2c. The student ID format is invalid.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1741,"author":{"gitId":"-"},"content":"    * 2c1. Tuto shows an error message indicating invalid student ID format.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1742,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1744,"author":{"gitId":"-"},"content":"* 3a. No attendance records exist for the student.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1745,"author":{"gitId":"-"},"content":"    * 3a1. Tuto shows a message indicating no attendance records found.","lastModifiedDate":"2025-10-30T20:41:39","isFullCredit":false},{"lineNumber":1746,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T21:51:03","isFullCredit":false},{"lineNumber":1747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1748,"author":{"gitId":"-"},"content":"**Use case: Add Student**","lastModifiedDate":"2025-10-08T23:48:27","isFullCredit":false},{"lineNumber":1749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1750,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1752,"author":{"gitId":"-"},"content":"1. Tutor requests to create a new student, providing all required details and one or more optional class tags.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1753,"author":{"gitId":"-"},"content":"2. Tuto adds student to records.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1754,"author":{"gitId":"-"},"content":"3. The new student record is successfully created.","lastModifiedDate":"2025-10-30T02:30:35","isFullCredit":false},{"lineNumber":1755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1756,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1758,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1760,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1761,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1763,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1765,"author":{"gitId":"-"},"content":"* 1b. Duplicate student detected.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1766,"author":{"gitId":"-"},"content":"    * 1b1. Tuto shows an error message.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1768,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1769,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1770,"author":{"gitId":"-"},"content":"* 1c. One or more of the provided class tag names do not exist.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1772,"author":{"gitId":"-"},"content":"  * 1c1. Tuto shows an error message.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1774,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1776,"author":{"gitId":"-"},"content":"**Use case: View Students**","lastModifiedDate":"2025-10-08T23:48:27","isFullCredit":false},{"lineNumber":1777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1778,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1780,"author":{"gitId":"-"},"content":"1. Tutor retrieves student list.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1781,"author":{"gitId":"-"},"content":"2. Tuto displays the list of students.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1783,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1785,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1787,"author":{"gitId":"-"},"content":"* 1a. No student exist.","lastModifiedDate":"2025-10-09T00:21:46","isFullCredit":false},{"lineNumber":1788,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows a message indicating no students exist.","lastModifiedDate":"2025-10-09T00:21:46","isFullCredit":false},{"lineNumber":1789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1790,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1792,"author":{"gitId":"-"},"content":"**Use case: Edit Student**","lastModifiedDate":"2025-10-08T23:48:27","isFullCredit":false},{"lineNumber":1793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1794,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1796,"author":{"gitId":"-"},"content":"1. Tutor requests to edit a student\u0027s details, providing the student\u0027s ID and at least one new field to update.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1797,"author":{"gitId":"-"},"content":"2. Tuto updates all specified fields for the student.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1798,"author":{"gitId":"-"},"content":"3. Tuto confirms the student\u0027s info has been updated.","lastModifiedDate":"2025-10-09T00:21:46","isFullCredit":false},{"lineNumber":1799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1800,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1802,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1804,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1805,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1807,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1809,"author":{"gitId":"-"},"content":"* 1b. One or more of the given class tag names do not exist.","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1811,"author":{"gitId":"-"},"content":"    * 1b1. Tuto shows an error message","lastModifiedDate":"2025-10-22T16:24:15","isFullCredit":false},{"lineNumber":1812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1813,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1815,"author":{"gitId":"-"},"content":"**Use case: Delete Student**","lastModifiedDate":"2025-10-08T23:48:27","isFullCredit":false},{"lineNumber":1816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1817,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1819,"author":{"gitId":"-"},"content":"1. Tutor deletes student.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1820,"author":{"gitId":"-"},"content":"2. Tuto removes student from records.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1821,"author":{"gitId":"-"},"content":"3. Tuto confirms the student\u0027s has been deleted.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1823,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1825,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1827,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1828,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1830,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1832,"author":{"gitId":"-"},"content":"**Use case: Search Student**","lastModifiedDate":"2025-10-08T23:48:27","isFullCredit":false},{"lineNumber":1833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1834,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1836,"author":{"gitId":"-"},"content":"1. Tutor searches student by name.","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1837,"author":{"gitId":"-"},"content":"2. Tuto searches records for matching students.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1838,"author":{"gitId":"-"},"content":"3. Tuto outputs search results.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1840,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1842,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1844,"author":{"gitId":"-"},"content":"* 1a. The command format is invalid","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1845,"author":{"gitId":"-"},"content":"    * 1a1. Tuto shows an error message with the correct usage format.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1847,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1849,"author":{"gitId":"-"},"content":"* 2a. No matching students.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1850,"author":{"gitId":"-"},"content":"    * 2a. Tuto shows a message indicating no students found.","lastModifiedDate":"2025-10-09T00:21:46","isFullCredit":false},{"lineNumber":1851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1852,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-10-08T23:18:42","isFullCredit":false},{"lineNumber":1853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1854,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1856,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":1857,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1858,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-10-09T00:21:46","isFullCredit":false},{"lineNumber":1859,"author":{"gitId":"-"},"content":"4.  The application should operate entirely offline, without requiring a database server or internet connection.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1860,"author":{"gitId":"-"},"content":"5.  The system should operate without requiring additional libraries.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1861,"author":{"gitId":"-"},"content":"6.  Data integrity must be maintained, ensuring no loss or duplication of records after operations or application restarts.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1862,"author":{"gitId":"-"},"content":"7.  The application should run locally on the user’s device.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1863,"author":{"gitId":"-"},"content":"8.  The system should be packaged into a single executable JAR file ≤ 200 MB, requiring no installer.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1864,"author":{"gitId":"-"},"content":"9.  User documentation should be clear and concise for beginners.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1865,"author":{"gitId":"-"},"content":"10. The application shall follow object-oriented design principles, allowing new commands or modules to be added with minimal changes to existing code.","lastModifiedDate":"2025-10-08T21:37:14","isFullCredit":false},{"lineNumber":1866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1867,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1869,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2025-10-30T14:56:53","isFullCredit":false},{"lineNumber":1870,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1871,"author":{"gitId":"-"},"content":"* **Student ID**: A 4-digit unique numeric identifier (0000–9999) assigned to each student when added to the system.","lastModifiedDate":"2025-10-08T18:59:11","isFullCredit":false},{"lineNumber":1872,"author":{"gitId":"-"},"content":"* **Payment History**: A record covering a range from a start month (either the student’s enrolment month or an explicitly provided m/MMYY) up to the current month (inclusive). The UI displays this range in reverse-chronological order (newest month first). Months after enrolment with no explicit record are derived as UNPAID by default.","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":1873,"author":{"gitId":"-"},"content":"* **Performance note**: A short textual record of a student\u0027s performance on a given date","lastModifiedDate":"2025-10-09T00:16:32","isFullCredit":false},{"lineNumber":1874,"author":{"gitId":"-"},"content":"* **Class Tag/ClassTag**: A label representing a class or subject that can be assigned to students (e.g. \"Sec3_Maths\")","lastModifiedDate":"2025-10-30T23:46:01","isFullCredit":false},{"lineNumber":1875,"author":{"gitId":"-"},"content":"* **Attendance History**: A complete record of student\u0027s attendance across all dates and classes from the time of enrolment, with no time limit on historical data.","lastModifiedDate":"2025-10-30T23:32:42","isFullCredit":false},{"lineNumber":1876,"author":{"gitId":"-"},"content":"* **Executable JAR**: A Java Archive file that contains all compiled classes and resources, which can be run directly without installation.","lastModifiedDate":"2025-10-09T00:21:46","isFullCredit":false},{"lineNumber":1877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1878,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1880,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1882,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1884,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":1885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":1886,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":1887,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1889,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":1890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1891,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1893,"author":{"gitId":"-"},"content":"#### Steps for testing a tP JAR file (please follow closely)","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1895,"author":{"gitId":"-"},"content":"1. **Prepare a writable folder**","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1896,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1897,"author":{"gitId":"-"},"content":"   Put the JAR file in an empty folder where the app is allowed to create files (i.e., do not use a write-protected folder).","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1899,"author":{"gitId":"-"},"content":"2. **Verify Java version (must be Java 17)**","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1900,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1901,"author":{"gitId":"-"},"content":"   Open a command window/terminal and run:","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1902,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1903,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1904,"author":{"gitId":"-"},"content":"   java -version","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1905,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1906,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1907,"author":{"gitId":"-"},"content":"   Do this even if you checked before, as your OS may have auto-updated the default Java version.","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1909,"author":{"gitId":"-"},"content":"3. **Check the User Guide (UG) for prerequisites**","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1910,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1911,"author":{"gitId":"-"},"content":"   See if there are extra steps before launching (e.g., downloading another file). You may also visit the team\u0027s GitHub Releases page for any additional files provided.","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1913,"author":{"gitId":"-"},"content":"4. **Launch from the command line (recommended)**","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1914,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1915,"author":{"gitId":"-"},"content":"   Use `java -jar` to ensure the JAR runs with the Java version you verified. Double-click only as a last resort.","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1916,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1917,"author":{"gitId":"-"},"content":"   * Surround the JAR filename with quotes in case it contains special characters:","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1918,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1919,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1920,"author":{"gitId":"-"},"content":"     java -jar \"[CS2103-F18-1][Task Pro].jar\"","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1921,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1922,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1923,"author":{"gitId":"-"},"content":"   * **Windows:** Use Command Prompt or PowerShell (not the WSL terminal).","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1924,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1925,"author":{"gitId":"-"},"content":"   * **Linux (Wayland):** If you see a Gdk-CRITICAL error, try:","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1926,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1927,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1928,"author":{"gitId":"-"},"content":"     GDK_BACKEND\u003dx11 java -jar jar_file_name.jar","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1929,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1931,"author":{"gitId":"-"},"content":"5. **Saving window preferences**","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1932,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1933,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1934,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1935,"author":{"gitId":"-"},"content":"   2. Re-launch the app using the command line method above.\u003cbr\u003e","lastModifiedDate":"2025-10-31T00:49:54","isFullCredit":false},{"lineNumber":1936,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1938,"author":{"gitId":"-"},"content":"### Managing Students","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1940,"author":{"gitId":"-"},"content":"#### Adding a Student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1942,"author":{"gitId":"-"},"content":"1. Adding a new student with valid fields","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1944,"author":{"gitId":"-"},"content":"    1. Prerequisites: Ensure the ClassTags you intend to assign exist (`tag -l` to list tags). The student does **not** need to exist yet.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1946,"author":{"gitId":"-"},"content":"    1. Test case: `add n/John Doe p/91234567 e/johndoe@example.com a/123, Clementi Rd t/Sec3_Maths`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1947,"author":{"gitId":"-"},"content":"       **Expected:** New student is added. Status message confirms addition, Student ID auto-generated (e.g., `0001`), student appears in the list.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1949,"author":{"gitId":"-"},"content":"1. Adding a student with missing required fields","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1950,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":1951,"author":{"gitId":"-"},"content":"    1. Test case: `add n/ p/91234567`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1952,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message explains missing Name, Email, or Address.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1954,"author":{"gitId":"-"},"content":"1. Adding a student with non-existent ClassTags","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1956,"author":{"gitId":"-"},"content":"    1. Test case: `add n/John Doe p/91234567 e/johndoe@example.com a/123, Clementi Rd t/NonExistentTag`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1957,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates ClassTag does not exist.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1959,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1961,"author":{"gitId":"-"},"content":"#### Editing a Student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1963,"author":{"gitId":"-"},"content":"1. Editing a student with a valid Student ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1965,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student must already exist in the system. For example, Student ID `0001` exists (from previous `add` test). Use `list` to verify.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1967,"author":{"gitId":"-"},"content":"    1. Test case: `edit s/0001 p/98765432 e/john.doe@newmail.com`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1968,"author":{"gitId":"-"},"content":"       **Expected:** Student’s phone and email updated. Status message confirms edit.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1970,"author":{"gitId":"-"},"content":"1. Editing with empty ClassTag (`t/`) to remove all tags","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1972,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student must already exist (e.g., Student ID `0001`).","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1974,"author":{"gitId":"-"},"content":"    1. Test case: `edit s/0001 t/`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1975,"author":{"gitId":"-"},"content":"       **Expected:** All ClassTags removed for this student. Status message confirms edit.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1976,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1977,"author":{"gitId":"-"},"content":"1. Editing with invalid Student ID","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1979,"author":{"gitId":"-"},"content":"    1. Test case: `edit s/9999 p/91234567`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1980,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates Student ID not found.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1981,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1982,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1983,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1984,"author":{"gitId":"-"},"content":"#### Deleting a Student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1985,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1986,"author":{"gitId":"-"},"content":"1. Deleting an existing student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1987,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1988,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student must already exist. For example, Student ID `0001`.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1990,"author":{"gitId":"-"},"content":"    1. Test case: `delete s/0001`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1991,"author":{"gitId":"-"},"content":"       **Expected:** Student with ID `0001` deleted. Status message confirms deletion. List updates.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1993,"author":{"gitId":"-"},"content":"1. Deleting a non-existent student","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1994,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1995,"author":{"gitId":"-"},"content":"    1. Test case: `delete s/9999`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1996,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates Student ID not found. List unchanged.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1998,"author":{"gitId":"-"},"content":"1. Attempting invalid delete commands","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":1999,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":2000,"author":{"gitId":"-"},"content":"    1. Test case: `delete`, `delete abc`, `delete 10000`  ","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":2001,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message explains invalid or missing Student ID.","lastModifiedDate":"2025-10-29T12:26:31","isFullCredit":false},{"lineNumber":2002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2003,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2004,"author":{"gitId":"-"},"content":"### Managing ClassTags","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2006,"author":{"gitId":"-"},"content":"#### Creating ClassTags","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2007,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2008,"author":{"gitId":"-"},"content":"1. Creating a new class tag with a valid name","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2010,"author":{"gitId":"-"},"content":"    1. Prerequisites: The tag name must be 1-30 characters, alphanumeric with underscores allowed.","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2012,"author":{"gitId":"-"},"content":"    1. Test case: `tag -a t/Sec_3_A_Math`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2013,"author":{"gitId":"-"},"content":"       **Expected:** New class tag created. Status message confirms creation, tag appears in list.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2015,"author":{"gitId":"-"},"content":"1. Creating a duplicate class tag","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2016,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2017,"author":{"gitId":"-"},"content":"    1. Prerequisites: Class tag `Sec_3_A_Math` already exists (from previous test).","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2019,"author":{"gitId":"-"},"content":"    1. Test case: `tag -a t/Sec_3_A_Math`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2020,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates tag already exists.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2022,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2024,"author":{"gitId":"-"},"content":"#### Listing ClassTags","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2026,"author":{"gitId":"-"},"content":"1. Listing all class tags","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2028,"author":{"gitId":"-"},"content":"    1. Prerequisites: At least one class tag exists (e.g., `Sec_3_A_Math` from previous test).","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2030,"author":{"gitId":"-"},"content":"    1. Test case: `tag -l`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2031,"author":{"gitId":"-"},"content":"       **Expected:** Displays numbered list of all existing class tags.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2032,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2033,"author":{"gitId":"-"},"content":"--- ","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2034,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2035,"author":{"gitId":"-"},"content":"#### Filtering Students by ClassTag","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2037,"author":{"gitId":"-"},"content":"1. Filtering students with an existing class tag","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2038,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2039,"author":{"gitId":"-"},"content":"    1. Prerequisites: Class tag exists and is assigned to at least one student (e.g., assign `Sec_3_A_Math` to a student via `add` or `edit`).","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2040,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2041,"author":{"gitId":"-"},"content":"    1. Test case: `filter -t t/Sec_3_A_Math`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2042,"author":{"gitId":"-"},"content":"       **Expected:** List shows only students with that class tag. Status message indicates number of students listed.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2044,"author":{"gitId":"-"},"content":"1. Filtering with non-existent class tag","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2046,"author":{"gitId":"-"},"content":"    1. Test case: `filter -t t/NonExistentTag`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2047,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates tag does not exist.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2049,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2051,"author":{"gitId":"-"},"content":"#### Deleting ClassTags","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2052,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2053,"author":{"gitId":"-"},"content":"1. Deleting an unused class tag","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2054,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2055,"author":{"gitId":"-"},"content":"    1. Prerequisites: Class tag exists but is not assigned to any students (remove from all students first via `edit`).","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2056,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2057,"author":{"gitId":"-"},"content":"    1. Test case: `tag -d t/Sec_3_A_Math`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2058,"author":{"gitId":"-"},"content":"       **Expected:** Class tag deleted. Status message confirms deletion.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2059,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2060,"author":{"gitId":"-"},"content":"1. Deleting a class tag still in use","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2062,"author":{"gitId":"-"},"content":"    1. Prerequisites: Class tag is assigned to at least one student.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2064,"author":{"gitId":"-"},"content":"    1. Test case: `tag -d t/Sec_3_A_Math`  ","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2065,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates tag is still in use by students.","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":2066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2067,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2068,"author":{"gitId":"-"},"content":"### Managing Fees","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2070,"author":{"gitId":"-"},"content":"#### Marking a Student as Paid","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2072,"author":{"gitId":"-"},"content":"1. Marking a student as PAID for a valid month","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2074,"author":{"gitId":"-"},"content":"    1. Prerequisites: The student exists and has an enrolled month earlier than the target month (e.g., enrolled in August 2025).","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2076,"author":{"gitId":"-"},"content":"    1. Test case: `fee -p s/0001 m/0925`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2077,"author":{"gitId":"-"},"content":"       **Expected:** The student\u0027s payment status for September 2025 is marked as **PAID**.  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2078,"author":{"gitId":"-"},"content":"       A success message appears confirming the update.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2080,"author":{"gitId":"-"},"content":"1. Attempting to mark a month **before the student’s enrolled month**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2082,"author":{"gitId":"-"},"content":"    1. Test case: `fee -p s/0001 m/0725`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2083,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message states that months before the student’s enrolment cannot be marked.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2085,"author":{"gitId":"-"},"content":"1. Attempting to mark a **future month**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2086,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2087,"author":{"gitId":"-"},"content":"    1. Test case: `fee -p s/0001 m/1225` (if the current month is October 2025)  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2088,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message states that future months cannot be marked as paid.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2090,"author":{"gitId":"-"},"content":"1. Attempting to skip an unpaid month","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2091,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2092,"author":{"gitId":"-"},"content":"    1. Prerequisites: Ensure the student has an unpaid month before the target month (e.g., September 2025 is unpaid).","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2093,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2094,"author":{"gitId":"-"},"content":"    1. Test case: `fee -p s/0001 m/1025`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2095,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that earlier unpaid months must be marked first.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2096,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2097,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2098,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2099,"author":{"gitId":"-"},"content":"#### Marking a Student as Unpaid","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2101,"author":{"gitId":"-"},"content":"1. Marking a previously paid month as **UNPAID**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2103,"author":{"gitId":"-"},"content":"    1. Prerequisites: The student has been marked as paid for a month (e.g., September 2025).","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2105,"author":{"gitId":"-"},"content":"    1. Test case: `fee -up s/0001 m/0925`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2106,"author":{"gitId":"-"},"content":"       **Expected:** The payment status for September 2025 changes to **UNPAID**.  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2107,"author":{"gitId":"-"},"content":"       A success message confirms the correction.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2109,"author":{"gitId":"-"},"content":"1. Attempting to mark a **future month** as unpaid","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2111,"author":{"gitId":"-"},"content":"    1. Test case: `fee -up s/0001 m/1225` (if the current month is October 2025)  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2112,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message states that future months cannot be marked.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2114,"author":{"gitId":"-"},"content":"1. Attempting to mark a month **before enrolment**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2116,"author":{"gitId":"-"},"content":"    1. Test case: `fee -up s/0001 m/0725`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2117,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that months before enrolment cannot be marked.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2119,"author":{"gitId":"-"},"content":"1. Attempting to mark an already **UNPAID** month","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2121,"author":{"gitId":"-"},"content":"    1. Test case: `fee -up s/0001 m/0925` (if it is already unpaid)  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2122,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that the month is already unpaid.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2124,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2126,"author":{"gitId":"-"},"content":"#### Viewing a Student’s Payment History","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2128,"author":{"gitId":"-"},"content":"1. Viewing complete payment history from enrolment","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2130,"author":{"gitId":"-"},"content":"    1. Test case: `fee -v s/0001`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2131,"author":{"gitId":"-"},"content":"       **Expected:** Displays all months from the enrolment month up to the current month, ordered from newest to oldest (current month first, enrolment month last). Each row shows the payment status (e.g., PAID or UNPAID) and whether it was **explicitly marked** or **set by default**.","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":2132,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2133,"author":{"gitId":"-"},"content":"1. Viewing payment history with a **custom start month**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2135,"author":{"gitId":"-"},"content":"    1. Test case: `fee -v s/0001 m/0525`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2136,"author":{"gitId":"-"},"content":"       **Expected:** Displays payment history starting from the given month (or enrolment month if the given month is before enrolment),  ordered newest to oldest.   ","lastModifiedDate":"2025-10-30T03:38:35","isFullCredit":false},{"lineNumber":2137,"author":{"gitId":"-"},"content":"       The system automatically adjusts the start month.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2139,"author":{"gitId":"-"},"content":"1. Attempting to view **future month history**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2141,"author":{"gitId":"-"},"content":"    1. Test case: `fee -v s/0001 m/1225` (if the current month is October 2025)  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2142,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message states that future months cannot be displayed.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2144,"author":{"gitId":"-"},"content":"1. Attempting to view payment history of a **non-existent student**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2146,"author":{"gitId":"-"},"content":"    1. Test case: `fee -v s/9999`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2147,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that the student ID was not found.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2149,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2151,"author":{"gitId":"-"},"content":"#### Filtering Students by Payment Status","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2153,"author":{"gitId":"-"},"content":"1. Filtering students who have **Paid**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2155,"author":{"gitId":"-"},"content":"    1. Test case: `filter -p m/0925`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2156,"author":{"gitId":"-"},"content":"       **Expected:** Displays only students who have been marked as **PAID** for September 2025.  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2157,"author":{"gitId":"-"},"content":"       Status message confirms the number of students listed.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2159,"author":{"gitId":"-"},"content":"1. Filtering students who are **Unpaid**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2161,"author":{"gitId":"-"},"content":"    1. Test case: `filter -up m/0925`  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2162,"author":{"gitId":"-"},"content":"       **Expected:** Displays only students who are **UNPAID** for September 2025.  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2163,"author":{"gitId":"-"},"content":"       Status message confirms the number of students listed.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2165,"author":{"gitId":"-"},"content":"1. Attempting to filter using a **future month**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2167,"author":{"gitId":"-"},"content":"    1. Test case: `filter -p m/1225` (if the current month is October 2025)  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2168,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message states that future months cannot be filtered.","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2170,"author":{"gitId":"-"},"content":"1. Filtering with **no matching students**","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2172,"author":{"gitId":"-"},"content":"    1. Test case: `filter -p m/0925` (when no students are paid for that month)  ","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2173,"author":{"gitId":"-"},"content":"       **Expected:** Displays message: “No matching students found.”","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:26:56","isFullCredit":false},{"lineNumber":2175,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2176,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2178,"author":{"gitId":"-"},"content":"### Managing Performance Notes","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2180,"author":{"gitId":"-"},"content":"#### Adding a Performance Note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2182,"author":{"gitId":"-"},"content":"1. Adding a new performance note for an existing student","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2184,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student exists with the specified Student ID (e.g., `0001`) and is assigned the relevant class tag (e.g., `Sec3_Maths`).\u003cbr\u003e","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2185,"author":{"gitId":"-"},"content":"       Use `add`/`edit` commands beforehand to set up the student and class tag if necessary.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2187,"author":{"gitId":"-"},"content":"    1. Test case: `perf -a s/0001 d/18092025 t/Sec3_Maths pn/Scored 85% on mock test`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2188,"author":{"gitId":"-"},"content":"       **Expected:** Performance note added. Status message confirms success and the note appears in the performance panel.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2190,"author":{"gitId":"-"},"content":"1. Adding a duplicate performance note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2192,"author":{"gitId":"-"},"content":"    1. Prerequisites: Performance note already exists for the same student, date, and class tag as above.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2194,"author":{"gitId":"-"},"content":"    1. Test case: `perf -a s/0001 d/18092025 t/Sec3_Maths pn/Scored 85% on mock test`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2195,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates a note already exists for that date and class tag.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2197,"author":{"gitId":"-"},"content":"1. Adding a performance note that exceeds the note length limit","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2199,"author":{"gitId":"-"},"content":"    1. Test case: `perf -a s/0001 d/18092025 t/Sec3_Maths pn/` followed by a note longer than 200 characters  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2200,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the performance note exceeds the maximum length.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2202,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2204,"author":{"gitId":"-"},"content":"#### Viewing Performance Notes","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2206,"author":{"gitId":"-"},"content":"1. Viewing performance notes for a student with existing notes","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2208,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` has at least one performance note.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2210,"author":{"gitId":"-"},"content":"    1. Test case: `perf -v s/0001`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2211,"author":{"gitId":"-"},"content":"       **Expected:** Performance panel updates to show all notes for the student in chronological order. Status message confirms number of notes shown.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2213,"author":{"gitId":"-"},"content":"1. Viewing performance notes for a student without notes","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2215,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0002` exists but has no performance notes.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2217,"author":{"gitId":"-"},"content":"    1. Test case: `perf -v s/0002`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2218,"author":{"gitId":"-"},"content":"       **Expected:** Command succeeds. Status message indicates no performance notes found, and the performance panel is empty.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2220,"author":{"gitId":"-"},"content":"1. Viewing performance notes for a non-existent student","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2222,"author":{"gitId":"-"},"content":"    1. Test case: `perf -v s/9999`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2223,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the student cannot be found.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2225,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2227,"author":{"gitId":"-"},"content":"#### Editing a Performance Note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2229,"author":{"gitId":"-"},"content":"1. Editing an existing performance note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2231,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` has a performance note on `18092025` for `Sec3_Maths` with any content.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2233,"author":{"gitId":"-"},"content":"    1. Test case: `perf -e s/0001 d/18092025 t/Sec3_Maths pn/Improved to 90% after review`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2234,"author":{"gitId":"-"},"content":"       **Expected:** Performance note updated. Status message confirms edit and performance panel reflects new note text.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2236,"author":{"gitId":"-"},"content":"1. Editing a non-existent performance note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2238,"author":{"gitId":"-"},"content":"    1. Test case: `perf -e s/0001 d/19092025 t/Sec3_Maths pn/Test`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2239,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates no matching performance note exists for the given date and class tag.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2241,"author":{"gitId":"-"},"content":"1. Editing with a note exceeding the length limit","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2243,"author":{"gitId":"-"},"content":"    1. Test case: `perf -e s/0001 d/18092025 t/Sec3_Maths pn/` followed by a note longer than 200 characters  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2244,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the performance note exceeds the maximum length.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2246,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2248,"author":{"gitId":"-"},"content":"#### Deleting a Performance Note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2250,"author":{"gitId":"-"},"content":"1. Deleting an existing performance note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2252,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` has a performance note on `18092025` for `Sec3_Maths`.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2254,"author":{"gitId":"-"},"content":"    1. Test case: `perf -d s/0001 d/18092025 t/Sec3_Maths`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2255,"author":{"gitId":"-"},"content":"       **Expected:** Performance note removed. Status message confirms deletion and the note disappears from the performance panel.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2257,"author":{"gitId":"-"},"content":"1. Deleting a non-existent performance note","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2259,"author":{"gitId":"-"},"content":"    1. Test case: `perf -d s/0001 d/19092025 t/Sec3_Maths`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2260,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates no matching performance note exists.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2262,"author":{"gitId":"-"},"content":"1. Deleting a performance note for a non-existent student","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2264,"author":{"gitId":"-"},"content":"    1. Test case: `perf -d s/9999 d/18092025 t/Sec3_Maths`  ","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2265,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the student cannot be found.","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T00:54:13","isFullCredit":false},{"lineNumber":2267,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T23:02:34","isFullCredit":false},{"lineNumber":2268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2269,"author":{"gitId":"-"},"content":"### Managing Attendance","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2271,"author":{"gitId":"-"},"content":"#### Marking Attendance as Present","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2273,"author":{"gitId":"-"},"content":"1. Marking a student as present for a valid class and date","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2275,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student exists with the specified Student ID (e.g., `0001`) and is assigned the relevant class tag (e.g., `Sec3_Math`).","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2277,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/0001 d/18092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2278,"author":{"gitId":"-"},"content":"       **Expected:** Attendance marked as present. Status message confirms the attendance has been recorded.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2280,"author":{"gitId":"-"},"content":"1. Marking a student as present when already marked present","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2282,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` already has a present attendance record for `18092025` and `Sec3_Math`.","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2284,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/0001 d/18092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2285,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the student is already marked as present for that date and class.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2287,"author":{"gitId":"-"},"content":"1. Attempting to mark attendance for a future date","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2289,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/0001 d/31122025 t/Sec3_Math` (assuming current date is before 31 Dec 2025)\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2290,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that attendance cannot be marked for future dates.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2292,"author":{"gitId":"-"},"content":"1. Attempting to mark attendance before student\u0027s enrolled month","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2294,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` is enrolled in September 2025 (enrolled month: `0925`).","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2296,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/0001 d/15082025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2297,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that attendance cannot be marked before the student\u0027s enrollment month.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2299,"author":{"gitId":"-"},"content":"1. Attempting to mark attendance with invalid date","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2301,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/0001 d/30022025 t/Sec3_Math` (30th February does not exist)\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2302,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the date is invalid.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2304,"author":{"gitId":"-"},"content":"    2. Test case: `att -p s/0001 d/2025-02-28 t/Sec3_Math` (wrong format, should be DDMMYYYY)\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2305,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the date format is invalid.","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2307,"author":{"gitId":"-"},"content":"1. Marking attendance for a class tag not assigned to the student","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2309,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` exists but is not assigned to class tag `Sec3_Science`.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2311,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/0001 d/18092025 t/Sec3_Science`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2312,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the class tag is not assigned to the student.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2314,"author":{"gitId":"-"},"content":"1. Marking attendance for a non-existent student","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2316,"author":{"gitId":"-"},"content":"    1. Test case: `att -p s/9999 d/18092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2317,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the student cannot be found.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2319,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2321,"author":{"gitId":"-"},"content":"#### Marking Attendance as Absent","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2323,"author":{"gitId":"-"},"content":"1. Marking a student as absent for a valid class and date","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2325,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student exists with the specified Student ID (e.g., `0001`) and is assigned the relevant class tag (e.g., `Sec3_Math`).","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2327,"author":{"gitId":"-"},"content":"    1. Test case: `att -a s/0001 d/19092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2328,"author":{"gitId":"-"},"content":"       **Expected:** Attendance marked as absent. Status message confirms the attendance has been recorded.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2330,"author":{"gitId":"-"},"content":"1. Changing attendance from present to absent","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2332,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` is currently marked as present for `18092025` and `Sec3_Math`.","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2334,"author":{"gitId":"-"},"content":"    1. Test case: `att -a s/0001 d/18092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2335,"author":{"gitId":"-"},"content":"       **Expected:** Attendance status updated from present to absent. Status message confirms the change.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2337,"author":{"gitId":"-"},"content":"1. Attempting to mark attendance as absent for a future date","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2339,"author":{"gitId":"-"},"content":"    1. Test case: `att -a s/0001 d/31122025 t/Sec3_Math` (assuming current date is before 31 Dec 2025)\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2340,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that attendance cannot be marked for future dates.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2342,"author":{"gitId":"-"},"content":"1. Attempting to mark attendance as absent before student\u0027s enrolled month","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2344,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` is enrolled in September 2025 (enrolled month: `0925`).","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2346,"author":{"gitId":"-"},"content":"    1. Test case: `att -a s/0001 d/15082025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2347,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates that attendance cannot be marked before the student\u0027s enrollment month.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2349,"author":{"gitId":"-"},"content":"1. Attempting to mark attendance as absent with invalid date","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2351,"author":{"gitId":"-"},"content":"    1. Test case: `att -a s/0001 d/32012025 t/Sec3_Math` (32nd January does not exist)\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2352,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the date is invalid.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2354,"author":{"gitId":"-"},"content":"    2. Test case: `att -a s/0001 d/2025-01-31 t/Sec3_Math` (wrong format, should be DDMMYYYY)\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2355,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the date format is invalid.","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2357,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2359,"author":{"gitId":"-"},"content":"#### Viewing Attendance History","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2361,"author":{"gitId":"-"},"content":"1. Viewing attendance history for a student with existing records","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2363,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` has at least one attendance record.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2365,"author":{"gitId":"-"},"content":"    1. Test case: `att -v s/0001`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2366,"author":{"gitId":"-"},"content":"       **Expected:** Attendance panel updates to show all attendance records for the student sorted by date (newest first), then by class tag alphabetically. Status message confirms number of records shown.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2368,"author":{"gitId":"-"},"content":"1. Viewing attendance history for a student without records","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2370,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0002` exists but has no attendance records.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2372,"author":{"gitId":"-"},"content":"    1. Test case: `att -v s/0002`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2373,"author":{"gitId":"-"},"content":"       **Expected:** Command succeeds. Status message indicates no attendance records found.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2375,"author":{"gitId":"-"},"content":"1. Viewing attendance history for a non-existent student","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2377,"author":{"gitId":"-"},"content":"    1. Test case: `att -v s/9999`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2378,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the student cannot be found.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2380,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2382,"author":{"gitId":"-"},"content":"#### Deleting an Attendance Record","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2384,"author":{"gitId":"-"},"content":"1. Deleting an existing attendance record","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2386,"author":{"gitId":"-"},"content":"    1. Prerequisites: Student `0001` has an attendance record on `18092025` for `Sec3_Math`.","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2388,"author":{"gitId":"-"},"content":"    1. Test case: `att -d s/0001 d/18092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2389,"author":{"gitId":"-"},"content":"       **Expected:** Attendance record deleted. Status message confirms deletion and the record disappears from the attendance panel.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2391,"author":{"gitId":"-"},"content":"1. Deleting a non-existent attendance record","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2393,"author":{"gitId":"-"},"content":"    1. Test case: `att -d s/0001 d/20092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2394,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates no matching attendance record exists for the given date and class tag.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2396,"author":{"gitId":"-"},"content":"1. Deleting an attendance record for a non-existent student","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2398,"author":{"gitId":"-"},"content":"    1. Test case: `att -d s/9999 d/18092025 t/Sec3_Math`\u003cbr\u003e","lastModifiedDate":"2025-10-30T19:46:10","isFullCredit":false},{"lineNumber":2399,"author":{"gitId":"-"},"content":"       **Expected:** Command rejected. Error message indicates the student cannot be found.","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2401,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T19:38:15","isFullCredit":false},{"lineNumber":2403,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2405,"author":{"gitId":"-"},"content":"1.\tDealing with missing data files","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2406,"author":{"gitId":"-"},"content":"      1.\tSimulate a missing data file:","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2407,"author":{"gitId":"-"},"content":"      - Close the application.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2408,"author":{"gitId":"-"},"content":"      - Navigate to the data directory where the application stores its data files.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2409,"author":{"gitId":"-"},"content":"      - Delete the data file (e.g., addressbook.json).","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2410,"author":{"gitId":"-"},"content":"      2.\tRe-launch the application.   ","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2411,"author":{"gitId":"-"},"content":"      Expected: The application starts with an empty data set. A new data file is created automatically.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2412,"author":{"gitId":"-"},"content":"      2.\tDealing with corrupted data files","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2413,"author":{"gitId":"-"},"content":"      1.\tSimulate a corrupted data file:","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2414,"author":{"gitId":"-"},"content":"      - Close the application.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2415,"author":{"gitId":"-"},"content":"      -\tOpen the data file (e.g., addressbook.json) with a text editor.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2416,"author":{"gitId":"-"},"content":"      -\tIntroduce invalid JSON syntax (e.g., delete a closing brace or add random text).","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2417,"author":{"gitId":"-"},"content":"      -\tSave the file.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2418,"author":{"gitId":"-"},"content":"      2.\tRe-launch the application.  ","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2419,"author":{"gitId":"-"},"content":"      Expected: The application detects the corrupted data file and displays an error message in the terminal. It will then start with an empty data set.","lastModifiedDate":"2025-10-30T22:01:54","isFullCredit":false},{"lineNumber":2420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:04:36","isFullCredit":false}],"authorContributionMap":{"meowzz28":1,"-":2419}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    title: \"User Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tuto User Guide","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Welcome to Tuto—your all-in-one solution designed to help freelance tutors focus on what truly matters: **teaching**.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## 1. Introduction","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"### 1.1 What is Tuto?","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Tuto is a **desktop application specifically designed for freelance tutors** who need an efficient way to manage their students, track attendance and performance, and handle tuition fee payments—all in one centralized platform.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"As a freelance tutor, you juggle multiple students across different classes, track various schedules, and manage administrative tasks that take time away from teaching. Tuto simplifies these challenges by providing a powerful Command Line Interface (CLI) that allows you to quickly execute commands while enjoying the benefits of a clean Graphical User Interface (GUI) for visualizing your student data.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Whether you\u0027re teaching one-on-one or managing multiple group classes, Tuto is built to reduce your administrative workload so you can dedicate more time and energy to your students\u0027 success.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"### 1.2 Main Features","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"Tuto offers comprehensive features tailored to the needs of freelance tutors:","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"**Student Management**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"- Add, edit, find, and delete student records with ease","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"- Each student is automatically assigned a unique **4-digit Student ID** (e.g., `0234`, `5832`) upon creation","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"- Store essential contact information including name, phone numbers, emails, and addresses","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"- Optionally set an enrollment month to prevent recording attendance, performance, or fees before the student joined","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Class Tag Management**","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"- Create and manage class tags to categorize students by the classes they attend (e.g., `Math_Sec3`, `JC1_Physics`)","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"- Easily assign multiple class tags to students for better organization","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"- List all existing class tags for quick reference","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"- Filter students by class tags","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Attendance Management**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"- Mark students as present or absent for each date and class","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"- View complete attendance history for any student","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Performance Management**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"- Record performance notes for each student based on class and date","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"- Document achievements, areas for improvement, and progress over time","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"- View comprehensive performance history to track student development","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**Fee Management**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"- Mark monthly tuition payments as paid or unpaid","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"- Track payment history from enrollment month to current month","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"- Filter students by payment status for a specific month to easily view who has paid or not paid","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"## 2. Getting Started","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"### 2.1 Installation","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25T13:19:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25T13:19:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2526S1-CS2103T-F10-3/tp/releases).","lastModifiedDate":"2025-10-30T05:39:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Tuto.","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar tuto.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01T16:03:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    * `list` : Lists all students.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a student named `John Doe` to Tuto.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"6. Refer to the [Command section](#3-commands) below for details of all commands supported by Tuto.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"### 2.2 How to Use Tuto Commands","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Tuto operates primarily through text-based commands. Before we explore the specific commands in detail in the Commands section, let\u0027s familiarize ourselves with the basic components and format of a command.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"**Important:** All command words are case-sensitive!","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"`add` is different from `ADD` or `Add`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"#### 2.2.1 Parameter Prefixes","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"In Tuto, a parameter prefix acts as a delimiter for specifying different types of parameters in commands. Here\u0027s a reference table for common parameter prefixes and their corresponding parameters:","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"| Parameter Prefix | Corresponding Parameter             |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"|------------------|-------------------------------------|","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"| `n/`             | NAME                                |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"| `s/`             | STUDENT_ID                          |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"| `p/`             | PHONE                               |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"| `e/`             | EMAIL                               |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"| `a/`             | ADDRESS                             |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"| `m/`             | ENROLLED_MONTH or MMYY (month/year) |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"| `t/`             | CLASS_TAG                           |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"| `d/`             | DATE (DDMMYYYY format)              |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"| `pn/`            | PERFORMANCE_NOTE                    |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"#### 2.2.2 Parameters","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"In Tuto, a parameter represents a placeholder where users input data. Parameters typically follow immediately after their corresponding Parameter Prefixes. Essentially, they are to be supplied by the user.","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"eesyuen09"},"content":"**Note:**","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"eesyuen09"},"content":"- All user inputs including parameters will be trimmed (all leading and trailing whitespaces will be ignored).","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"eesyuen09"},"content":"- Every parameter (a prefix and its value, e.g. n/John Doe) must be separated from the next prefix by at least one space.","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"**Parameter Details:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"| Parameter                   | Prefix | Description                                                                                                                                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"|-----------------------------|--------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"| `NAME`                      | `n/`   | Specifies the name of a student.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Names must contain only alphabetic characters, apostrophes (\u0027), hyphens (-), and whitespace.\u003cbr\u003e• Names with only whitespace are not allowed.\u003cbr\u003e• Must start with a letter.\u003cbr\u003e• Maximum length: 100 characters.                                                                                                                       |","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"| `STUDENT_ID`                | `s/`   | Specifies the Student ID of a student.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• IDs are automatically assigned in 4-digit format (e.g., `0234`, `5832`).\u003cbr\u003e• Cannot be blank.                                                                                                                                                                                                                                    |","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"| `PHONE`                     | `p/`   | Specifies the phone number of a student.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Phone numbers must contain only numeric digits.\u003cbr\u003e• Must be exactly 8 digits long.\u003cbr\u003e• Must start with 6, 8, or 9 (Singapore mobile/landline format).                                                                                                                                                                         |","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"| `EMAIL`                     | `e/`   | Specifies the email address of a student.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Format: `local-part@domain`.\u003cbr\u003e• Local part can contain alphanumeric characters and special characters `+`, `_`, `.`, `-`.\u003cbr\u003e• Local part cannot start or end with special characters.\u003cbr\u003e• Domain must end with a label at least 2 characters long.\u003cbr\u003e• Each domain label must start and end with alphanumeric characters. |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"| `ADDRESS`                   | `a/`   | Specifies the residential address of a student.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Can contain letters, digits, spaces, and the symbols `#`, `,`, `-`, `\u0027`.\u003cbr\u003e• Cannot be blank.\u003cbr\u003e• First character cannot be a whitespace.                                                                                                                                                                              |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"| `MMYY` and `ENROLLED_MONTH` | `m/`   | Specifies a month and year for enrollment or payment tracking.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Format: Exactly 4 digits in `MMYY` (e.g., `0825` for August 2025).\u003cbr\u003e• MM must be 01-12 (January - December). Leading zero is required (e.g., 08 for August).\u003cbr\u003e • YY must be 00–99, interpreted as years 2000–2099.                                                                                    |                                                                                                                                                                                              |","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"| `CLASS_TAG`                 | `t/`   | Specifies a class tag to categorize students.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Must be 1-30 characters long.\u003cbr\u003e• Can only contain alphanumeric characters and underscores (`_`).\u003cbr\u003e• Tags must exist in the system before assignment to students.                                                                                                                                                       |","lastModifiedDate":"2025-10-30T18:08:06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"| `DATE`                      | `d/`   | Specifies a date for attendance or performance tracking.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Format: `DDMMYYYY` (e.g., `15092025` for 15 September 2025).\u003cbr\u003e                                                                                                                                                                                                                                                |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"| `PERFORMANCE_NOTE`          | `pn/`  | Specifies a performance note for a student.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cbr\u003e• Can be any text under 200 characters.\u003cbr\u003e                                                                                                                                                                                                                                                                                    |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"#### 2.2.3 Command Format","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"To understand how a full command is interpreted, let\u0027s examine the following example.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"**Example:** `add n/NAME p/PHONE e/EMAIL a/ADDRESS [m/ENROLLED_MONTH] [t/CLASS_TAG]...`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"**Tip:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"Adding class tags before enrolling students makes the process more efficient! Create your class tags first using `tag -a t/CLASS_TAG`, then you can assign them to students when adding them.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"**Key Points:**\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/CLASS_TAG]` can be used as `n/John Doe t/Math` or as `n/John Doe`.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  e.g. `[t/CLASS_TAG]…​` can be used as ` ` (i.e. 0 times), `t/Math`, `t/Math t/Science` etc.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters and flags (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03T23:17:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03T23:17:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26T21:09:58","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"eesyuen09"},"content":"* If you type an extra or unrecognised parameter (or forget to put a space), the app will append it to the previous field’s value instead of treating it as a separate parameter.","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"**General Notes about Tuto Commands:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"A command can be categorized into four formats:","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. **COMMAND + FLAG + PARAMETER_PREFIX + PARAMETER**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    - Example: `tag -a t/Math_Sec3`, `fee -p s/0001 m/0925`, `att -p s/0001 d/15092025 t/Math_Sec3`","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    - Common flags include:","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        - `-a` (add for class tag/ mark as absent), `-d` (delete), `-l` (list), `-e` (edit), `-v` (view)","lastModifiedDate":"2025-10-31T00:32:52","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        - `-p` (paid/mark as present), `-up` (unpaid)","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        - `-t` (tag filter)\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"          \u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"2. **COMMAND + PARAMETER_PREFIX + PARAMETER**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    - Example: `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"3. **COMMAND + PARAMETER**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    - Example: `find John David`\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"      \u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"4. **COMMAND**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    - Example: `list`, `help`, `exit`, `clear`\u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"      \u003cbr\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"## 3. Commands","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"### 3.1 Student Management","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"The Student Management commands allow you to **add, edit, find, delete, and list students** in the address book.  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"Each student added is automatically assigned a unique **Student ID** (in 4-digit format, e.g. 0234, 5832),  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"which is used in other commands such as fees, attendance, and performance tracking.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"**Overview of Student Management Commands**","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"| Command                                                                       | Description                             |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"|-------------------------------------------------------------------------------|-----------------------------------------|","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"| `add n/NAME p/PHONE e/EMAIL a/ADDRESS [m/ENROLLED_MONTH] [t/CLASS_TAG]...`    | Add a new student to the address book   |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"| `edit s/STUDENT_ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/CLASS_TAG]...` | Edit details of an existing student     |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"| `find KEYWORD [MORE_KEYWORDS]`                                                | Find students by name                   |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"| `delete s/STUDENT_ID`                                                         | Delete a student using their Student ID |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"| `list`                                                                        | List all students                       |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"| `clear`                                                                       | Clear all student entries               |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"#### 3.1.1 Adding a student : `add`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Adds a new student to the address book.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Format:** `add n/NAME p/PHONE e/EMAIL a/ADDRESS [m/ENROLLED_MONTH] [t/CLASS_TAG]...`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"* Creates a new student record with the specified name, phone number, email, and address.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"* The `ENROLLED_MONTH` and `CLASS_TAG` fields are optional.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"* If `ENROLLED_MONTH` is not provided, it automatically defaults to the **current month**, and the student is assumed to be enrolled on the **first day of that month**.","lastModifiedDate":"2025-10-31T00:55:11","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* The `ENROLLED_MONTH` cannot be edited after creation.","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"* The student is automatically assigned a unique 4-digit `STUDENT_ID` upon creation.","lastModifiedDate":"2025-10-31T00:55:11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"* A student can have multiple class tags or none at all.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"* Tags must exist in the system. If a specified tag does not exist, the command will be rejected.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-31T00:55:11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"You can add multiple tags by specifying `t/CLASS_TAG1 t/CLASS_TAG2 ...`.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T15:31:12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"A student can also be added without any tags.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"- `add n/John Doe p/98765432 m/0825 e/johnd@example.com a/John street, block 123, #01-01` — adds a student with no tags.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"  `New student added: John Doe; Phone: 98765432; Email: johnd@example.com; Address: John street, block 123, #01-01; Tags: -`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"- `add n/Betsy Crowe t/Math_Sec3 e/betsycrowe@example.com a/Clementi p/12345678 t/English_J1` — adds a student with two tags: `Math_Sec3` and `English_J1`.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"  `New student added: Betsy Crowe; Phone: 12345678; Email: betsycrowe@example.com; Address: Clementi; Tags: [Math_Sec3][English_J1]`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"#### 3.1.2 Editing a student : `edit`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"Edits the details of an existing student in the address book using their Student ID.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"**Format:** `edit s/STUDENT_ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/CLASS_TAG]...`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* Updates the student identified by the given `STUDENT_ID`.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* At least one optional field must be provided.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* Existing details will be replaced by the new input values.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* When editing class tags:","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"meowzz28"},"content":"    * To edit tags: specify `t/CLASS_TAG1 t/CLASS_TAG2 ...` (existing tags replaced with new tags).","lastModifiedDate":"2025-11-01T16:02:28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    * To clear all tags: use `t/` with no tags provided.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"You can update multiple fields in a single command.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"- `edit s/0006 p/91234567 e/johndoe@example.com` — edits the phone number and email of the student with ID `2042`.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"  `Edited student: John Doe; Phone: 91234567; Email: johndoe@example.com; Address: John street, block 123, #01-01; Tags: -`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"- `edit s/0006 n/Betsy Crower t/Math_Sec3 t/English_J1` — changes the name of student `2042` and updates the student’s tags to `Math_Sec3` and `English_J1`.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"  `Edited student: Betsy Crower; Phone: 91234567; Email: johndoe@example.com; Address: John street, block 123, #01-01; Tags: [Math_Sec3][English_J1]`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"- `edit s/0006 t/` — clears all tags.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"  `Edited student: Betsy Crower; Phone: 91234567; Email: johndoe@example.com; Address: John street, block 123, #01-01; Tags: -`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"#### 3.1.3 Finding students : `find`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"**Format:** `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"* The search is **case-insensitive** (e.g. `hans` matches `Hans`).","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"* The order of keywords does not matter (e.g. `Hans Bo` matches `Bo Hans`).","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"* Only full words are matched (e.g. `Han` will not match `Hans`).","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* Students matching at least one keyword will be displayed in the GUI.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"Use multiple keywords to perform an OR search.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"- `find alex david` — displays all students with names containing “Alex” or “David”.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"  `2 persons listed!`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T13:54:21","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"#### 3.1.4 Deleting a student : `delete`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"Deletes a specified student from the address book using their Student ID.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Format:** `delete s/STUDENT_ID`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"* Removes the student with the matching Student ID from the address book.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"* The Student ID must correspond to an existing student.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"- `delete s/0007` — deletes the student with ID `0007`.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"  `Deleted student: Betsy Crowe; Phone: 1234567; Email: betsycrowe@example.com; Address: Newgate Prison; Tags: [Math_Sec3][English_J1]`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"#### 3.1.5 Listing all students : `list`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"Displays all students currently stored in the address book.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Format:** `list`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T13:59:36","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"* Shows a list of all students in the GUI panel.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"* Each student entry displays their name, Student ID, enrolled month, phone number, email address, address, tags, and current month payment status.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"* The list updates automatically whenever students are added, edited, or deleted.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003e**Expected output:**  ","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"`Listed all students`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"#### 3.1.6 Clearing all entries : `clear`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"Clears all student records from the address book.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"**Format:** `clear`","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"* Removes all student entries permanently from the address book.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"* This action cannot be undone.","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003e**Expected output:**  ","lastModifiedDate":"2025-10-29T22:19:51","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"`All students have been cleared!`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"### 3.2 Class Tag Management","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"The Class Tag commands allow you to **create, delete, and list class tags** in the system.  ","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"Class tags are useful for organizing students by the classes they attend (e.g. `Math_Sec3`, `JC1_Physics`).","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Overview of Class Tag Management Commands**","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"| Command              | Description                  |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"|----------------------|------------------------------|","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"| `tag -a t/CLASS_TAG` | Add a new class tag          |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"| `tag -d t/CLASS_TAG` | Delete an existing class tag |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"| `tag -l`             | List all existing class tags |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"#### 3.2.1 Adding a class tag : `tag -a`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"Adds a new class tag to the system. This allows you to categorize students by the classes they attend.","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Format:** `tag -a t/CLASS_TAG`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"* This command creates a new class tag with the specified `CLASS_TAG`.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"* If a tag with the same name (case-insensitive) already exists, the command will not create a duplicate and will inform the user.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"* Tag names must be 1\\-30 characters long and can only contain alphanumeric characters and underscores (`_`). Spaces or other special characters are not allowed.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* Tag names are case\\-insensitive when checking for duplicates, but the original casing is preserved when added.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"meowzz28"},"content":"* Tag names are also character sensitive (eg. `MathSec3` and `Math_Sec3` are considered different tags).","lastModifiedDate":"2025-11-01T16:02:28","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"- `tag -a t/Math_Sec3` — Adds a class tag named `Math_Sec3`.","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `New class tag added: Math_Sec3`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"- `tag -a t/JC1_Physics` — Adds a class tag named `JC1_Physics`.","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `New class tag added: JC1_Physics`","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"#### 3.2.2 Deleting a class tag : `tag -d`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"Deletes an existing class tag from the system.","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"**Format:** `tag -d t/CLASS_TAG`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003cb\u003eWarning:\u003c/b\u003e","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"You can only delete a class tag that is not currently assigned to any students in the address book. Remove the tag from all students first before deleting.","lastModifiedDate":"2025-10-30T18:08:06","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* This command removes the class tag with the specified `CLASS_TAG` from the system.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"* If the specified tag does not exist, the command will inform the user.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"* If the tag is currently assigned to one or more students, the command will not delete the tag and will inform the user to first remove the tag from all students.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"* Tag name matching is case\\-insensitive.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"- `tag -d t/Math_Sec3` — Deletes the class tag named `Math_Sec3`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003e**Expected output:** `Tag deleted: Math_Sec3`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"- `tag -d t/jc1_physics` — Deletes the class tag named `JC1_Physics`, regardless of case (if JC1_Physics exists in this casing).","lastModifiedDate":"2025-10-29T22:41:24","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003e**Expected output:** `Tag deleted: JC1_Physics`","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"#### 3.2.3 Listing all class tags : `tag -l`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"Shows a list of all class tags currently created in the address book.","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Format:** `tag -l`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"- `tag -l`: If class tags `JC1_Physics` and `Math_Sec3` exist in the system.","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"\u003e**Expected output:**\u003cbr\u003e","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"`Listed all class tags:`\u003cbr\u003e","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"`1. JC1_Physics`\u003cbr\u003e","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"`2. Math_Sec3`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"- `tag -l`: If no class tags exist in the system.","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"\u003e**Expected output:**","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"`No class tags found. You can add one using the \u0027tag -a\u0027 command.`","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-22T23:26:24","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"### 3.3 Fee Management","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"The Fee Management Commands allows you to **record, update, and view student payment statuses**.  ","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"This helps tutors and administrators track monthly tuition fee payments efficiently and keep student records up to date.","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"**Overview of fee commands**","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"| Command                        | Description                                         |","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"|--------------------------------|-----------------------------------------------------|","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"| `fee -p s/STUDENT_ID m/MMYY`   | Marks a student as **PAID** for a specified month   |","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"| `fee -up s/STUDENT_ID m/MMYY`  | Marks a student as **UNPAID** for a specified month |","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"| `fee -v s/STUDENT_ID [m/MMYY]` | Views a student’s **payment history**               |","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"eesyuen09"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"eesyuen09"},"content":"If a student has never been explicitly marked as PAID, their status is treated as UNPAID by default.","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"eesyuen09"},"content":"","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"eesyuen09"},"content":"The fee tag shows PAID only if every month from the student’s enrolled month to the current month has been paid. Otherwise, it shows UNPAID indicates the student has outstanding fees.","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"eesyuen09"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-11-01T17:31:59","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:37:14","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"#### 3.3.1 Marking a student as paid: `fee -p`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"Marks a student’s payment status as **PAID** for a specific month.","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"**Format:** `fee -p s/STUDENT_ID m/MMYY`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"* Tutors can only mark payments for months **between the student’s enrollment month and the current month (inclusive)**.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"* Payments must follow **chronological order** — earlier months must be settled before marking later ones.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"* Payments **before enrollment** or **in future months** are not allowed.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"* If a month is already marked as PAID, duplicate payment attempts will be rejected.","lastModifiedDate":"2025-10-30T18:09:23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"- `fee -p s/0001 m/0925` — marks student `0001` (Bernice Yu) as **PAID** for **September 2025**.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"  \u003e **Expected output:** `Bernice Yu has been successfully marked as Paid for September 2025.`","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"#### 3.3.2 Marking a student as unpaid: `fee -up`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T15:59:58","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"Marks a student’s payment status as **UNPAID** for a specific month.  ","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"Use this command for corrections or when a payment was mistakenly marked as PAID.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"**Format:**  ","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"`fee -up s/STUDENT_ID m/MMYY`","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"* Tutors can only mark payments for months **between the student’s enrollment month and the current month (inclusive)**.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"* If the month is already marked as UNPAID, the command will be rejected.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"* Payments **before enrollment** or **in future months** are not allowed.","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"* Once corrected, the tutor must re-mark earlier unpaid months before recording new payments for later months.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"- `fee -up s/0001 m/0925` — marks student `0001` (Bernice Yu) as **UNPAID** for **September 2025**.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"  \u003e **Expected output:** `Bernice Yu has been successfully marked as Unpaid for September 2025.`","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T12:37:14","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"#### 3.3.4 Viewing a student’s payment history: `fee -v`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"Displays a student’s **payment history** from a specified starting month up to the **current month**,  with records shown from **newest to oldest**.","lastModifiedDate":"2025-10-30T15:48:20","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"**Format:**  ","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"`fee -v s/STUDENT_ID [m/MMYY]`","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"* Tutors can view payment history **starting from any valid month** between the student’s enrollment month and the current month (inclusive).","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"* If the starting month is not provided, or it precedes the student’s enrollment month, the history will automatically start from the **enrollment month**.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"* If the starting month is **after the current month**, the command will return an error message.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"* The displayed history includes both **explicitly marked** months (via `fee -p` or `fee -up`) and **default UNPAID** months that were not manually recorded.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"- `fee -v s/0001` — shows payment history for student `0001` from their enrollment month to the current month.","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"  \u003e **Expected Output:**  ","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"  ![FeeViewHistoryEx1.png](images/FeeViewHistoryEx1.png)","lastModifiedDate":"2025-10-30T15:48:20","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"    - `fee -v s/0001 m/0725` — shows payment history starting **July 2025** to the current month.","lastModifiedDate":"2025-10-30T15:48:20","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"  \u003e **Expected Output:**","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"  ![FeeViewHistoryEx2.png](images/FeeViewHistoryEx2.png)","lastModifiedDate":"2025-10-30T15:48:20","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"**Interpreting the results:**","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"- `marked` — the payment was explicitly set via `fee -p` or `fee -up`.","lastModifiedDate":"2025-10-29T23:57:54","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"- `default` — the month had no explicit record and is assumed **UNPAID**.","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T08:25:27","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"### 3.4 Attendance management","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"The `att` command family allows you to **record, update, and view student attendance**.","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"Each attendance record is tied to both a date and a class tag, allowing tutors to manage students who attend multiple classes efficiently.","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"**Overview of Attendance Management Commands**","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"| Command                                  | Description                                                                           |","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"|------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"| `att -p s/STUDENT_ID d/DATE t/CLASS_TAG` | Mark a student as present for a given date and class tag                              |","lastModifiedDate":"2025-10-30T15:34:27","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"| `att -a s/STUDENT_ID d/DATE t/CLASS_TAG` | Mark a student as absent for a given date and class tag or undoes a marked attendance |","lastModifiedDate":"2025-10-30T15:34:27","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"| `att -d s/STUDENT_ID d/DATE t/CLASS_TAG` | Delete an attendance record for a student on a specific date and class                |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"| `att -v s/STUDENT_ID`                    | View a student\u0027s attendance records                                                   |","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"#### 3.4.1 Marking a student as present : `att -p`","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"Marks a student\u0027s attendance as **PRESENT** for a specific date and class.","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"**Format:** `att -p s/STUDENT_ID d/DATE t/CLASS_TAG`","lastModifiedDate":"2025-10-30T15:34:27","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"* This command records that a student attended a specific class on a specific date.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"* The student must have the specified class tag assigned to them.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"* If the student doesn\u0027t have the tag, the command will be rejected with an error message.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"* The date must be in `DDMMYYYY` format (e.g., `15092025` for 15 September 2025).","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"- `att -p s/0001 d/15092025 t/Math` — Marks student `0001` (Bernice Yu) as present for 15 September 2025 in Math class.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `Marked Bernice Yu as present on 15-09-2025 for class Math.`","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"#### 3.4.2  Marking a student as absent : `att -a`","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"Marks a student\u0027s attendance as **ABSENT** for a specific date and class.","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"Use this to record absences or to undo a previously marked **PRESENT** attendance by changing it to **ABSENT**.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"**Format:** `att -a s/STUDENT_ID d/DATE t/CLASS_TAG`","lastModifiedDate":"2025-10-30T15:34:27","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"* This command records that a student was absent from a specific class on a specific date.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"* This command can also be used to undo a **PRESENT** attendance by changing it to **ABSENT**.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"* The student must have the specified class tag assigned to them.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"* If the student doesn\u0027t have the tag, the command will be rejected with an error message.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"* The date must be in `DDMMYYYY` format (e.g., `15092025` for 15 September 2025).","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"- `att -a s/0001 d/15092025 t/Math` — Marks student `0001` (Bernice Yu) as absent for 15 September 2025 in Math class.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `Marked Bernice Yu as absent on 15-09-2025 for class Math.`","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"#### 3.4.3 Deleting an attendance record : `att -d`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"Deletes an attendance record for a student on a specific date and class.","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"Use this to remove attendance records that were marked by mistake or are no longer needed.","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"**Format:** `att -d s/STUDENT_ID d/DATE t/CLASS_TAG`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"* This command removes an existing attendance record for a student.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"* An attendance record must exist for the given date and class for the deletion to succeed.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"* The student does **not** need to currently have the specified class tag assigned. This allows you to delete historical attendance records even after a student has left a class and the tag has been removed.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"* The class tag does **not** need to exist in the system anymore. This allows you to clean up orphaned attendance records after deleting a class tag.","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"* The date must be in `DDMMYYYY` format (e.g., `15092025` for 15 September 2025).","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"- `att -d s/0001 d/15092025 t/Math` — Deletes the attendance record for student `0001` (Bernice Yu) on 15 September 2025 in Math class.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `Deleted attendance for: Bernice Yu on 15-09-2025 for class Math`","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"- `att -d s/0003 d/25082025 t/Science` — Attempts to delete an attendance record that doesn\u0027t exist.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `No attendance record found for David Li on 25-08-2025 for class Science`","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"#### 3.4.4 Viewing a student\u0027s attendance records : `att -v`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"Displays all attendance records for a specific student across all their classes.","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"**Format:** `att -v s/STUDENT_ID`","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"* This command shows all attendance records for a student, organized by date and class.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"* If no attendance records exist for the student, a message will be displayed indicating no records were found.","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T21:55:55","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"- `att -v s/0001` — Shows all attendance records for student `0001` (Bernice Yu).","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**\u003cbr\u003e","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"  ![AttendanceViewHistoryEx1.png](images/AttendanceViewHistoryEx1.png)","lastModifiedDate":"2025-10-31T00:32:52","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"- `att -v s/0003` — If no attendance record for student `0003` (David Li).","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**\u003cbr\u003e","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"  `No attendance record found for: David Li`\u003cbr\u003e","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T23:23:10","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"### 3.5 Performance Management","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:14:20","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"The `perf` command family allows you to track students\u0027 performance in class by **adding performance notes**.","lastModifiedDate":"2025-10-29T21:35:54","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"Each performance note is tied to both a date and a class tag, allowing tutors to document specific achievements or areas for improvement for each student.","lastModifiedDate":"2025-10-29T21:35:54","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:35:54","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-29T21:35:54","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"**Overview of perf commands**","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"| Command                                                       | Description                                  |","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"|---------------------------------------------------------------|----------------------------------------------|","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"| `perf -a s/STUDENT_ID d/DATE t/CLASS_TAG pn/PERFORMANCE_NOTE` | Add performance data for a student           |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"| `perf -v s/STUDENT_ID`                                        | View performance data for a student          |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"| `perf -e s/STUDENT_ID d/DATE t/CLASS_TAG pn/PERFORMANCE_NOTE` | Edit existing performance data for a student |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"| `perf -d s/STUDENT_ID d/DATE t/CLASS_TAG`                     | Delete performance data for a student        |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-29T21:35:54","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"#### 3.5.1 Adding a performance note for a student : `perf -a`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"Adds a performance note for a student in a specific class on a specific date.","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"**Format:** `perf -a s/STUDENT_ID d/DATE t/CLASS_TAG pn/PERFORMANCE_NOTE`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"* Adds a performance note for the student identified by the given `STUDENT_ID`.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"* The `DATE` must not be before the student\u0027s enrollment date and cannot be a future date.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"* The `CLASS_TAG` must correspond to an existing class tag assigned to the student.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"* The `PERFORMANCE_NOTE` can be any text under 200 characters.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"* If a performance note already exists for the same date and class tag, the command will reject the addition and show an error message.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"- `perf -a s/0001 d/18092025 t/Math_Sec3 pn/Scored 85% on mock test`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `Performance note successfully added for John Tan in Math_Sec3","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"     \u003e on 18-09-2025.`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"#### 3.5.2 Editing a performance note for a student : `perf -e`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"Edits an existing performance note for a student.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"**Format:** `perf -e s/STUDENT_ID d/DATE t/CLASS_TAG pn/PERFORMANCE_NOTE`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"* Edits the performance note for the student identified by the given `STUDENT_ID`, `DATE`, and `CLASS_TAG`.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"* The `PERFORMANCE_NOTE` can be any text under 200 characters.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"* If no performance note exists for the specified date and class tag, the command will reject the edit and show an error message.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"- `perf -e s/0001 d/18092025 t/Math_Sec3 pn/Scored 90% on mock test after re-evaluation`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `Performance note for John Tan in Math_Sec3","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"     \u003e on 18-09-2025 successfully edited.`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"#### 3.5.3 Deleting a performance note for a student : `perf -d`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"Deletes a performance note for a student.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"**Format:** `perf -d s/STUDENT_ID d/DATE t/CLASS_TAG`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"* Deletes the performance note for the student identified by the given `STUDENT_ID`, `DATE`, and `CLASS_TAG`.","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"* If no performance note exists for the specified date and class tag, the command will reject the deletion and show an error message.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"- `perf -d s/0001 d/18092025 t/Math_Sec3`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"  \u003e**Expected output:** `Performance note for John Tan in Math_Sec3","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"     \u003e on 18-09-2025 successfully deleted.`","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"#### 3.5.4 Viewing performance notes for a student : `perf -v`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"Displays all performance notes for a student.","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"**Format:** `perf -v s/STUDENT_ID`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"* Displays all performance notes for the student identified by the given `STUDENT_ID`.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"* If no performance notes exist for the student, a message will be displayed indicating no notes were found.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"* Performance notes are displayed in chronological order based on the date.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"* Each note shows the date, class tag, and the performance note content.","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"- `perf -v s/0001`","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"  \u003e**Expected output:**","lastModifiedDate":"2025-10-31T00:27:18","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"  ![performanceGUI](images/performanceGUI.png)","lastModifiedDate":"2025-10-31T00:27:18","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-29T22:14:20","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"### 3.6 Filter students: `filter`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"The `filter` command allows you to quickly find students based on specific criteria such as **payment status** or **class tags**.  ","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"This is useful for tutors and administrators who want to check which students","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"have paid or are unpaid for a given month, or to focus on a specific class group.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"**Overview of Filter Commands**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T21:47:10","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"Filtering supports three main types of criteria:","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"| Command                 | Description                                                            |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"|-------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2025-10-30T18:09:23","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"| `filter -p m/MMYY`      | Show students marked as **PAID** for a specific month                  |","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"| `filter -up m/MMYY`     | Show students marked (or defaulted) as **UNPAID** for a specific month |","lastModifiedDate":"2025-10-30T18:09:23","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"| `filter -t t/CLASS_TAG` | Show students belonging to a particular **CLASS_TAG**                  |","lastModifiedDate":"2025-10-30T19:58:53","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"You can only use **one flag** per command.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"Each filter updates the main student list view to display only matching entries.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"#### 3.6.1 Filter by paid status : `filter -p`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"Shows all students whose payment status is **PAID** for a given month.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"You can only filter up to the **current month** (future months are not allowed).","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"`filter -p m/MMYY`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"- `filter -p m/1025`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"  \u003e **Expected Output:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"  ![FilterPaidExample.png](images/FilterPaidExample.png)","lastModifiedDate":"2025-10-30T15:48:20","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"#### 3.6.2 Filter by unpaid status : `filter -up`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"Shows all students whose payment status is **UNPAID** for a given month.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"You can only filter up to the **current month** (future months are not allowed).","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"`filter -up m/MMYY`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"- `filter -up m/1025`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"  \u003e **Expected Output:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"  ![FilterUnpaidExample.png](images/FilterUnpaidExample.png)","lastModifiedDate":"2025-10-30T15:48:20","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"#### 3.6.3 Filter by class tag : `filter -t`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"Filters the main list to show only persons who are assigned the specified class tag.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"**Format:** `filter -t t/CLASS_TAG`","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"**Command Details and Constraints:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"* The class tag must already exist in the system.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"* Tag name matching is case-insensitive.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"- `filter -t t/Math_Sec3` — Shows only students who have the `Math_Sec3` tag.","lastModifiedDate":"2025-10-30T18:08:06","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"\u003e **Expected output:**","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"![filterByClassTag.png](images/filterByClassTag.png)","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"### 3.7 Viewing help : `help`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"**Format:** `help`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"### 3.8 Exiting the program : `exit`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"**Format:** `exit`","lastModifiedDate":"2025-10-30T04:01:49","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"### 3.9 Saving the data","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-10-30T18:08:06","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T18:08:06","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"### 3.10 Editing the data file","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"Notes:","lastModifiedDate":"2025-10-30T04:12:06","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"* When editing the class tags, ensure the class tags are in valid format (1-30 characters long and can only contain alphanumeric characters and underscores, no extra spaces before or after the class tag).","lastModifiedDate":"2025-10-30T04:45:00","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"* When editing class tags assigned to a student, ensure that the class tags exist in the system (i.e., in the `classTags` list in the JSON file).","lastModifiedDate":"2025-10-30T04:12:06","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:12:06","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T04:12:06","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30T23:21:09","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"| Action                      | Format, Examples                                                                                                                                                                     |","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"|-----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"| **Add**                     | `add n/NAME p/PHONE e/EMAIL a/ADDRESS [m/ENROLLED_MONTH] t/CLASS_TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 m/0825 t/Math t/Science` |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"| **Clear**                   | `clear`                                                                                                                                                                              |","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"| **Delete**                  | `delete s/STUDENT_ID`\u003cbr\u003e e.g., `delete s/0230`                                                                                                                                      |","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"| **Edit**                    | `edit s/STUDENT_ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit s/1234 n/James Lee e/jameslee@example.com`                                              |","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"| **Find**                    | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                           |","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"| **List**                    | `list`                                                                                                                                                                               |","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"| **Help**                    | `help`                                                                                                                                                                               |","lastModifiedDate":"2025-10-23T23:37:36","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"| **Class Tag (ADD)**         | `tag -a t/CLASS_TAG`\u003cbr\u003e e.g., `tag -a t/Math_Sec3`                                                                                                                                  |","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"| **Class Tag (DELETE)**      | `tag -d t/CLASS_TAG`\u003cbr\u003e e.g., `tag -d t/Math_Sec3`                                                                                                                                  |","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"| **Class Tag (LIST)**        | `tag -l`\u003cbr\u003e e.g., `tag -l`                                                                                                                                                          |","lastModifiedDate":"2025-10-28T21:05:14","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"| **Mark as PAID**            | `fee -p s/STUDENT_ID m/MMYY` \u003cbr\u003e e.g., `fee -p s/0001 m/0925`                                                                                                                       |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"| **Mark as UNPAID**          | `fee -up s/STUDENT_ID m/MMYY` \u003cbr\u003e e.g., `fee -up s/0001 m/0925`                                                                                                                     |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"| **View payment history**    | `fee -v s/STUDENT_ID [m/MMYY]` \u003cbr\u003e e.g., `fee -v s/0001 m/0525`                                                                                                                     |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"| **Mark as PRESENT**         | `att -p s/STUDENT_ID d/DDMMYYYY t/CLASS_TAG` \u003cbr\u003e e.g., `att -p s/0001 d/15092025 t/Math`                                                                                            |","lastModifiedDate":"2025-10-30T15:34:27","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"| **Mark as ABSENT**          | `att -a s/STUDENT_ID d/DDMMYYYY t/CLASS_TAG` \u003cbr\u003e e.g., `att -a s/0001 d/15092025 t/Math`                                                                                            |","lastModifiedDate":"2025-10-30T15:34:27","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"| **Delete attendance**       | `att -d s/STUDENT_ID d/DDMMYYYY t/CLASS_TAG` \u003cbr\u003e e.g., `att -d s/0001 d/15092025 t/Math`                                                                                            |","lastModifiedDate":"2025-10-30T13:44:50","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"-"},"content":"| **View attendance**         | `att -v s/STUDENT_ID` \u003cbr\u003e e.g., `att -v s/0001`                                                                                                                                     |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"| **Filter by PAID status**   | `filter -p m/MMYY` \u003cbr\u003e e.g., `filter -p m/1025`                                                                                                                                     |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"| **Filter by UNPAID status** | `filter -up m/MMYY` \u003cbr\u003e e.g., `filter -up m/1025`                                                                                                                                   |","lastModifiedDate":"2025-10-24T01:24:36","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"| **Filter by class tag**     | `filter -t t/CLASS_TAG` \u003cbr\u003e e.g., `filter -t t/Math_Sec3`                                                                                                                      |","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"| **Add performance note**    | `perf -a s/STUDENT_ID d/DATE t/CLASS_TAG pn/PERFORMANCE_NOTE` \u003cbr\u003e e.g., `perf -a s/0001 d/18092025 t/Math_Sec3\u003cbr/\u003e pn/Scored 85% on mock test`                                     |","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"| **View performance notes**  | `perf -v s/STUDENT_ID` \u003cbr\u003e e.g., `perf -v s/0001`                                                                                                                                   |","lastModifiedDate":"2025-10-23T00:24:23","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"| **Edit performance note**   | `perf -e s/STUDENT_ID d/DATE t/CLASS_TAG pn/PERFORMANCE_NOTE` \u003cbr\u003e e.g., `perf -e s/0001 d/18092025 t/Math_Sec3\u003cbr/\u003e pn/Scored 90% on mock test after re-evaluation`                 |","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"| **Delete performance note** | `perf -d s/STUDENT_ID d/DATE t/CLASS_TAG` \u003cbr\u003e e.g., `perf -d s/0001 d/18092025 t/Math_Sec3\u003cbr/\u003e`                                                                                    |","lastModifiedDate":"2025-10-30T17:55:58","isFullCredit":false}],"authorContributionMap":{"meowzz28":2,"eesyuen09":9,"-":837}},{"path":"src/main/java/seedu/address/logic/commands/attendance/AttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.attendance;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTAG;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2025-10-14T18:42:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.ClassTag;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.time.Date;","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-14T18:42:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Manages attendance for students in the class.","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports marking present, absent, viewing and deleting attendance records.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public abstract class AttendanceCommand extends Command {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"att\";","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \": Manages attendance for the students.\\n\"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Requires a flag to specify the action.\\n\"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Actions:\\n\"","lastModifiedDate":"2025-10-28T14:28:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Mark Present: -p \" + PREFIX_STUDENTID + \"STUDENT_ID \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"CLASS_TAG\\n\"","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Mark Absent: -a \" + PREFIX_STUDENTID + \"STUDENT_ID \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"CLASS_TAG\\n\"","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"View Attendance History: -v \" + PREFIX_STUDENTID + \"STUDENT_ID\\n\"","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Delete Attendance Record: -d \" + PREFIX_STUDENTID + \"STUDENT_ID \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"CLASS_TAG\\n\"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + COMMAND_WORD + \" -p \" + PREFIX_STUDENTID + \"0123 \" + PREFIX_DATE + \"15092025 \"","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"Sec3_AMath\\n\"","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + COMMAND_WORD + \" -a \" + PREFIX_STUDENTID + \"0123 \" + PREFIX_DATE + \"15092025 \"","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"Sec3_AMath\\n\"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + COMMAND_WORD + \" -v \" + PREFIX_STUDENTID + \"0123 \\n\"","lastModifiedDate":"2025-10-28T14:43:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + COMMAND_WORD + \" -d \" + PREFIX_STUDENTID + \"0123 \" + PREFIX_DATE + \"15092025 \"","lastModifiedDate":"2025-10-28T14:43:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"Sec3_AMath\\n\";","lastModifiedDate":"2025-10-28T14:43:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FUTURE_DATE \u003d \"Cannot mark attendance for future date: %1$s\";","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_BEFORE_ENROLLMENT \u003d","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \"Cannot mark attendance for %1$s on %2$s. Student enrolled in %3$s.\";","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_STUDENT_DOES_NOT_HAVE_TAG \u003d \"Student %1$s does not have the class tag: %2$s\";","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected final StudentId studentId;","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates an AttendanceCommand with the specified student ID.","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param studentId The student ID of the student.","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AttendanceCommand(StudentId studentId) {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Validates that the attendance date is valid (not in the future and not before enrollment).","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param date The date to validate.","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param person The person whose enrollment date to check against.","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws CommandException if the date is in the future or before the person\u0027s enrollment month.","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    protected void validateAttendanceDate(Date date, Person person) throws CommandException {","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        LocalDate attendanceDate \u003d date.toLocalDate();","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (attendanceDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_FUTURE_DATE, date.getFormattedDate()));","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        LocalDate enrollmentStartDate \u003d person.getEnrolledMonth().toYearMonth().atDay(1);","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (attendanceDate.isBefore(enrollmentStartDate)) {","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_BEFORE_ENROLLMENT,","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    person.getName(), date.getFormattedDate(),","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    person.getEnrolledMonth().toHumanReadable()));","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yijiechong13"},"content":"     * Validates that attendance can be marked/edited for the given class tag and date.","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yijiechong13"},"content":"     * Allows editing if an attendance record exists, even if the tag has been removed from the student","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yijiechong13"},"content":"     * or deleted from the model. For new records, validates that the tag exists and student has it.","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param model The model to check for class tag existence.","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yijiechong13"},"content":"     * @param person The person to check for class tag membership or attendance record.","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param classTag The class tag to validate.","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yijiechong13"},"content":"     * @param date The date to check for existing attendance record.","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yijiechong13"},"content":"     * @throws CommandException if validation fails.","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yijiechong13"},"content":"    protected void validateClassTagForAttendanceEdit(Model model, Person person, ClassTag classTag, Date date)","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throws CommandException {","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yijiechong13"},"content":"        // If attendance record exists, allow editing regardless of current tag status","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yijiechong13"},"content":"        if (person.getAttendanceList().hasAttendanceRecord(date, classTag)) {","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yijiechong13"},"content":"            return;","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yijiechong13"},"content":"        }","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yijiechong13"},"content":"","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yijiechong13"},"content":"        // For new records, validate tag exists in model and student has it","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!model.hasClassTag(classTag)) {","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yijiechong13"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_TAG_NOT_FOUND, classTag.tagName));","lastModifiedDate":"2025-11-01T14:49:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!person.getTags().contains(classTag)) {","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_STUDENT_DOES_NOT_HAVE_TAG,","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    person.getName(), classTag.tagName));","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false}],"authorContributionMap":{"yijiechong13":14,"-":102}},{"path":"src/main/java/seedu/address/logic/commands/attendance/AttendanceMarkAbsentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.attendance;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTAG;","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-22T04:58:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.ClassTag;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.time.Date;","lastModifiedDate":"2025-10-28T00:20:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Marks a student as absent on a specific date for a specific class.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * If the student was previously marked as present on that date for that class, the record is updated to absent.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * If the attendance is already marked as absent for that date and class, an exception is thrown.","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AttendanceMarkAbsentCommand extends AttendanceCommand {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_FLAG \u003d \"-a\";","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"Marks a student\u0027s attendance as absent.\\n\"","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \" + PREFIX_STUDENTID + \"STUDENT_ID \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"CLASS_TAG\\n\"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + COMMAND_FLAG + \" \" + PREFIX_STUDENTID + \"0123 \"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"15092025 \" + PREFIX_CLASSTAG + \"Sec3_AMath\";","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_MARK_ABSENT_SUCCESS \u003d \"Marked %1$s as absent on %2$s for class %3$s.\";","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ALREADY_MARKED_ABSENT \u003d \"%1$s is already marked absent on %2$s for class %3$s.\";","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Date date;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final ClassTag classTag;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AttendanceMarkAbsentCommand to mark the specified student as absent.","lastModifiedDate":"2025-10-31T00:08:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AttendanceMarkAbsentCommand(StudentId studentId, Date date, ClassTag classTag) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(studentId);","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.classTag \u003d classTag;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d model.getPersonById(studentId)","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .orElseThrow(() -\u003e new CommandException(","lastModifiedDate":"2025-10-22T04:58:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        String.format(Messages.MESSAGE_STUDENT_ID_NOT_FOUND, studentId)));","lastModifiedDate":"2025-10-22T04:58:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        validateAttendanceDate(date, personToEdit);","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yijiechong13"},"content":"        validateClassTagForAttendanceEdit(model, personToEdit, classTag, date);","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (personToEdit.getAttendanceList().hasAttendanceMarkedAbsent(date, classTag)) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_MARKED_ABSENT,","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    personToEdit.getName(), date.getFormattedDate(), classTag.tagName));","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.markAttendanceAbsent(studentId, date, classTag);","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ABSENT_SUCCESS, personToEdit.getName(),","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                date.getFormattedDate(), classTag.tagName));","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof AttendanceMarkAbsentCommand)) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AttendanceMarkAbsentCommand otherCommand \u003d (AttendanceMarkAbsentCommand) other;","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return studentId.equals(otherCommand.studentId)","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 date.equals(otherCommand.date)","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 classTag.equals(otherCommand.classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return java.util.Objects.hash(studentId, date, classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false}],"authorContributionMap":{"yijiechong13":1,"-":90}},{"path":"src/main/java/seedu/address/logic/commands/attendance/AttendanceMarkPresentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.attendance;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTAG;","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-22T04:58:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.ClassTag;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.time.Date;","lastModifiedDate":"2025-10-28T00:20:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Marks a student as present on a specific date for a specific class.","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * If the attendance is already marked as present for that date and class, an exception is thrown.","lastModifiedDate":"2025-10-26T11:02:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AttendanceMarkPresentCommand extends AttendanceCommand {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_FLAG \u003d \"-p\";","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"Marks a student\u0027s attendance as present.\\n\"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \" + PREFIX_STUDENTID + \"STUDENT_ID \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2025-10-31T00:47:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_CLASSTAG + \"CLASS_TAG\\n\"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + COMMAND_FLAG + \" \" + PREFIX_STUDENTID + \"0123 \"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"15092025 \" + PREFIX_CLASSTAG + \"Sec3_AMath\";","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T13:02:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_MARK_PRESENT_SUCCESS \u003d \"Marked %1$s as present on %2$s for class %3$s.\";","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ALREADY_MARKED_PRESENT \u003d \"%1$s is already marked present on %2$s \"","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"for class %3$s.\";","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Date date;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final ClassTag classTag;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AttendanceMarkPresentCommand to mark the specified student as present.","lastModifiedDate":"2025-10-31T00:08:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AttendanceMarkPresentCommand(StudentId studentId, Date date, ClassTag classTag) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(studentId);","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.classTag \u003d classTag;","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d model.getPersonById(studentId)","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .orElseThrow(() -\u003e new CommandException(","lastModifiedDate":"2025-10-22T04:58:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        String.format(Messages.MESSAGE_STUDENT_ID_NOT_FOUND, studentId)));","lastModifiedDate":"2025-10-22T04:58:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        validateAttendanceDate(date, personToEdit);","lastModifiedDate":"2025-10-30T17:22:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yijiechong13"},"content":"        validateClassTagForAttendanceEdit(model, personToEdit, classTag, date);","lastModifiedDate":"2025-11-01T16:46:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (personToEdit.getAttendanceList().hasAttendanceMarkedPresent(date, classTag)) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_MARKED_PRESENT,","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    personToEdit.getName(), date.getFormattedDate(), classTag.tagName));","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.markAttendancePresent(studentId, date, classTag);","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_PRESENT_SUCCESS, personToEdit.getName(),","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                date.getFormattedDate(), classTag.tagName));","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AttendanceMarkPresentCommand)) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AttendanceMarkPresentCommand otherCommand \u003d (AttendanceMarkPresentCommand) other;","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return studentId.equals(otherCommand.studentId)","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 date.equals(otherCommand.date)","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 classTag.equals(otherCommand.classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return java.util.Objects.hash(studentId, date, classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T17:13:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-10-13T21:36:37","isFullCredit":false}],"authorContributionMap":{"yijiechong13":1,"-":90}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08T21:45:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-13T23:52:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.attendance.AttendanceHistoryEntry;","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.attendance.AttendanceHistorySummary;","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.fee.FeeHistoryEntry;","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.fee.FeeHistorySummary;","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.fee.FeeState;","lastModifiedDate":"2025-10-15T00:07:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.fee.FeeTracker;","lastModifiedDate":"2025-10-15T00:07:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2025-10-13T23:52:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.performance.PerformanceNote;","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.ClassTag;","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.time.Date;","lastModifiedDate":"2025-10-28T00:20:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.time.Month;","lastModifiedDate":"2025-10-28T00:20:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09T23:15:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final FeeTracker feeTracker;","lastModifiedDate":"2025-10-16T21:24:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerformanceNote\u003e displayedPerformanceNotes;","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cFeeHistoryEntry\u003e displayedFeeHistory;","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cAttendanceHistoryEntry\u003e displayedAttendanceHistory;","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final javafx.beans.property.ObjectProperty\u003cFeeHistorySummary\u003e feeHistorySummary \u003d","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new javafx.beans.property.SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final javafx.beans.property.ObjectProperty\u003cAttendanceHistorySummary\u003e attendanceHistorySummary \u003d","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new javafx.beans.property.SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final javafx.beans.property.IntegerProperty feeStateVersion \u003d","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        new javafx.beans.property.SimpleIntegerProperty(0);","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.feeTracker \u003d this.addressBook.getFeeTracker();","lastModifiedDate":"2025-10-16T21:24:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.displayedPerformanceNotes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.displayedFeeHistory \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.displayedAttendanceHistory \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public javafx.beans.property.ReadOnlyIntegerProperty feeStateVersionProperty() {","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return feeStateVersion;","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void bumpFeeStateVersion() {","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        feeStateVersion.set(feeStateVersion.get() + 1);","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15T21:32:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15T21:32:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15T21:32:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07T12:49:51","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean hasClassTag(ClassTag classTag) {","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(classTag);","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return addressBook.hasClassTag(classTag);","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void addClassTag(ClassTag classTag) {","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        addressBook.addClassTag(classTag);","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void deleteClassTag(ClassTag classTag) {","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        addressBook.deleteClassTag(classTag);","lastModifiedDate":"2025-10-13T21:14:24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T15:05:25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-26T01:52:55","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public Optional\u003cClassTag\u003e findClassTag(ClassTag classTag) {","lastModifiedDate":"2025-10-26T01:52:55","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(classTag);","lastModifiedDate":"2025-10-26T01:52:55","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return addressBook.findClassTag(classTag);","lastModifiedDate":"2025-10-30T00:39:10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-26T01:52:55","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-26T01:52:55","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-29T13:00:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public List\u003cClassTag\u003e getClassTagList() {","lastModifiedDate":"2025-10-29T13:00:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return addressBook.getClassTagList();","lastModifiedDate":"2025-10-29T13:00:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T13:00:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T13:00:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T01:14:27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public boolean isClassTagInUse(ClassTag classTag) {","lastModifiedDate":"2025-10-30T01:14:27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return addressBook.isClassTagInUse(classTag);","lastModifiedDate":"2025-10-30T21:43:41","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T01:14:27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T01:14:27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Retrieves a {@link Person} from the filtered list by their {@link StudentId}.","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public Optional\u003cPerson\u003e getPersonById(StudentId studentId) {","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return this.addressBook.getPersonList().stream()","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .filter(p -\u003e p.getStudentId().equals(studentId)).findFirst();","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Checks if the address book contains a {@link Person} with the specified {@link StudentId}.","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public boolean hasPersonWithId(StudentId studentId) {","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return this.addressBook.getPersonList().stream()","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .anyMatch(p -\u003e p.getStudentId().equals(studentId));","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T18:46:29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void markPaid(StudentId studentId, Month month) {","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        requireNonNull(month);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Person person \u003d getPersonById(studentId)","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            .orElseThrow(() -\u003e new IllegalArgumentException(\"Student ID not found: \" + studentId));","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Month enrolled \u003d person.getEnrolledMonth();","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        FeeState current \u003d feeTracker.getDerivedStatusOfMonth(person, month).orElse(null);","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (current \u003d\u003d FeeState.PAID) {","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new IllegalStateException(month.toHumanReadable() + \" is already marked as Paid.\");","lastModifiedDate":"2025-10-26T18:40:13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Month prevMonth \u003d enrolled;","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        while (prevMonth.isBefore(month)) {","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            FeeState prior \u003d feeTracker.getDerivedStatusOfMonth(person, prevMonth).orElse(FeeState.UNPAID);","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (prior !\u003d FeeState.PAID) {","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"                throw new IllegalStateException(","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    \"Cannot mark \" + month.toHumanReadable() + \" as Paid.\\n\"","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"                        + prevMonth.toHumanReadable() + \" is not Paid yet.\");","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            prevMonth \u003d prevMonth.plusMonths(1);","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        feeTracker.markPaid(studentId, month);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        bumpFeeStateVersion();","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void markUnpaid(StudentId studentId, Month month) {","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        requireNonNull(month);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Person person \u003d getPersonById(studentId)","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            .orElseThrow(() -\u003e new IllegalArgumentException(\"Student ID not found: \" + studentId));","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        FeeState current \u003d feeTracker.getDerivedStatusOfMonth(person, month).orElse(FeeState.UNPAID);","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (current \u003d\u003d FeeState.UNPAID) {","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            throw new IllegalStateException(month.toHumanReadable() + \" is already unpaid.\");","lastModifiedDate":"2025-10-28T23:48:26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-26T16:48:24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        feeTracker.markUnpaid(studentId, month);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        bumpFeeStateVersion();","lastModifiedDate":"2025-10-29T13:59:17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void markAttendancePresent(StudentId studentId, Date date, ClassTag classTag) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        requireAllNonNull(studentId, date, classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Person person \u003d getPersonById(studentId)","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Student ID not found: \" + studentId));","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yijiechong13"},"content":"        // Try to get the original ClassTag with correct casing from the address book.","lastModifiedDate":"2025-11-01T16:58:36","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yijiechong13"},"content":"        // If not found (e.g., tag was deleted), use the provided tag to allow editing past records.","lastModifiedDate":"2025-11-01T16:58:36","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yijiechong13"},"content":"        ClassTag originalClassTag \u003d findClassTag(classTag).orElse(classTag);","lastModifiedDate":"2025-11-01T16:58:36","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:00:32","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        AttendanceList updatedAttendance \u003d new AttendanceList(","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"                person.getAttendanceList().asUnmodifiableList());","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        updatedAttendance.markAttendancePresent(date, originalClassTag);","lastModifiedDate":"2025-10-30T17:00:32","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Person updatedPerson \u003d person.withAttendanceList(updatedAttendance);","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        addressBook.setPerson(person, updatedPerson);","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void markAttendanceAbsent(StudentId studentId, Date date, ClassTag classTag) {","lastModifiedDate":"2025-10-30T15:27:32","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireAllNonNull(studentId, date, classTag);","lastModifiedDate":"2025-10-22T00:19:20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Person person \u003d getPersonById(studentId)","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Student ID not found: \" + studentId));","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"yijiechong13"},"content":"        // Try to get the original ClassTag with correct casing from the address book.","lastModifiedDate":"2025-11-01T16:58:36","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yijiechong13"},"content":"        // If not found (e.g., tag was deleted), use the provided tag to allow editing past records.","lastModifiedDate":"2025-11-01T16:58:36","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yijiechong13"},"content":"        ClassTag originalClassTag \u003d findClassTag(classTag).orElse(classTag);","lastModifiedDate":"2025-11-01T16:58:36","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T17:00:32","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        AttendanceList updatedAttendance \u003d new AttendanceList(","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"                person.getAttendanceList().asUnmodifiableList());","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        updatedAttendance.markAttendanceAbsent(date, originalClassTag);","lastModifiedDate":"2025-10-30T17:00:32","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Person updatedPerson \u003d person.withAttendanceList(updatedAttendance);","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        addressBook.setPerson(person, updatedPerson);","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-19T18:14:03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public void deleteAttendance(StudentId studentId, Date date, ClassTag classTag) {","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        requireAllNonNull(studentId, date, classTag);","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        Person person \u003d getPersonById(studentId)","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Student ID not found: \" + studentId));","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        AttendanceList updatedAttendance \u003d new AttendanceList(","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"                person.getAttendanceList().asUnmodifiableList());","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"        updatedAttendance.deleteAttendance(date, classTag);","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Person updatedPerson \u003d person.withAttendanceList(updatedAttendance);","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        addressBook.setPerson(person, updatedPerson);","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-25T21:24:31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19T13:37:43","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11T13:42:43","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19T13:37:43","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09T01:43:45","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"                \u0026\u0026 displayedPerformanceNotes.equals(otherModelManager.displayedPerformanceNotes)","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"                \u0026\u0026 displayedFeeHistory.equals(otherModelManager.displayedFeeHistory)","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"                \u0026\u0026 displayedAttendanceHistory.equals(otherModelManager.displayedAttendanceHistory)","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"                \u0026\u0026 java.util.Objects.equals(feeHistorySummary.get(), otherModelManager.feeHistorySummary.get())","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"                \u0026\u0026 java.util.Objects.equals(attendanceHistorySummary.get(),","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"                otherModelManager.attendanceHistorySummary.get());","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public Predicate\u003cPerson\u003e paidStudents(Month month) {","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"        requireNonNull(month);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"        return p -\u003e feeTracker.getDerivedStatusOfMonth(p, month).orElse(null) \u003d\u003d FeeState.PAID;","lastModifiedDate":"2025-10-26T03:19:53","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T23:52:36","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"    public Predicate\u003cPerson\u003e unpaidStudents(Month month) {","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        requireNonNull(month);","lastModifiedDate":"2025-10-14T22:11:49","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return p -\u003e feeTracker.getDerivedStatusOfMonth(p, month).orElse(null) \u003d\u003d FeeState.UNPAID;","lastModifiedDate":"2025-10-26T03:19:53","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-13T23:52:36","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T23:52:36","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-16T02:25:19","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-15T15:26:12","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    public Optional\u003cFeeState\u003e getCurrentFeeState(Person person) {","lastModifiedDate":"2025-10-15T15:26:12","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2025-10-15T15:26:12","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"eesyuen09"},"content":"        Month enrolled \u003d person.getEnrolledMonth();","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"eesyuen09"},"content":"        Month now \u003d Month.now();","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"eesyuen09"},"content":"        Month current \u003d enrolled;","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"eesyuen09"},"content":"        while (!current.isAfter(now)) {","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"eesyuen09"},"content":"            FeeState state \u003d feeTracker.getDerivedStatusOfMonth(person, current).orElse(FeeState.UNPAID);","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"eesyuen09"},"content":"            if (state !\u003d FeeState.PAID) {","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"eesyuen09"},"content":"                return Optional.of(FeeState.UNPAID);","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"eesyuen09"},"content":"            }","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"eesyuen09"},"content":"            current \u003d current.plusMonths(1);","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"eesyuen09"},"content":"        }","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"eesyuen09"},"content":"        return Optional.of(FeeState.PAID);","lastModifiedDate":"2025-11-01T15:45:10","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-15T15:26:12","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerformanceNote\u003e getDisplayedPerformanceNotes() {","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(displayedPerformanceNotes);","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"    public void setDisplayedPerformanceNotes(List\u003cPerformanceNote\u003e notes) {","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"        requireNonNull(notes);","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"        displayedPerformanceNotes.setAll(notes);","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"    public void clearDisplayedPerformanceNotes() {","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"        displayedPerformanceNotes.clear();","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-21T01:55:38","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"    public ObservableList\u003cFeeHistoryEntry\u003e getDisplayedFeeHistory() {","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(displayedFeeHistory);","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"    public void setDisplayedFeeHistory(List\u003cFeeHistoryEntry\u003e entries, FeeHistorySummary summary) {","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"        requireNonNull(entries);","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"        requireNonNull(summary);","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"        assert !entries.isEmpty() : \"Fee history rows must not be empty when a summary is shown\";","lastModifiedDate":"2025-10-30T17:08:50","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"        displayedFeeHistory.setAll(entries);","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"        feeHistorySummary.set(summary);","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"    public void clearDisplayedFeeHistory() {","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"        displayedFeeHistory.clear();","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"        feeHistorySummary.set(null);","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public javafx.beans.property.ReadOnlyObjectProperty\u003cFeeHistorySummary\u003e feeHistorySummaryProperty() {","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"        return feeHistorySummary;","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T02:16:53","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"    public ObservableList\u003cAttendanceHistoryEntry\u003e getDisplayedAttendanceHistory() {","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(displayedAttendanceHistory);","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"    public void setDisplayedAttendanceHistory(List\u003cAttendanceHistoryEntry\u003e entries,","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"                                              AttendanceHistorySummary summary) {","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"        requireNonNull(entries);","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"        requireNonNull(summary);","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"        displayedAttendanceHistory.setAll(entries);","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"        attendanceHistorySummary.set(summary);","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"    public void clearDisplayedAttendanceHistory() {","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"        displayedAttendanceHistory.clear();","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"        attendanceHistorySummary.set(null);","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    public javafx.beans.property.ReadOnlyObjectProperty\u003cAttendanceHistorySummary\u003e attendanceHistorySummaryProperty() {","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"        return attendanceHistorySummary;","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-30T03:43:45","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false}],"authorContributionMap":{"yijiechong13":6,"eesyuen09":11,"-":417}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22T09:48:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09T12:52:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"eesyuen09"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2526s1-cs2103t-f10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2025-11-01T15:57:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03T10:08:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20T16:11:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13T23:28:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false}],"authorContributionMap":{"eesyuen09":1,"-":101}}]
